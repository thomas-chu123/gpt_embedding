### |-------------------------------------------------------------------------------------------------------------|
### |Release Date : 2022/08/23 by Joice Huang                                                                     |
### |MPro_Mesh_V3.7:                                                                                              |
### |Onboarding(20) + AutoConfig(34) + Steering/romaing(27) + Stress(5)                                           |
### |Available Model : EX5510-B0, EX3510-B0, EX5501-B0, VMG8825-B50B, XMG3927-B50A, DX3301-T0, DX5401-B0          |
### |                  WX3310-B0, WX3401-B0 kit, WX3100-T0 kit for A1&Generic, EX3510-B0&WX3310-B0 for GF         |
### |                  EX5401-B0&WX3401-B0 for Altibox, DX5401-B0&WAP6807 for TMNL, VMG8623-T50B, EX5601-T0       |
### |PQA Script Modification :                                                                                    |
### |[Reduce false alarms]                                                                                        |
### |Add retry mechanism for Extender login GUI                                                                   |
### |                                                                                                             |
### |[Enhancement]                                                                                                |
### |Create Module for EX5601-T0 and EX5600-T0                                                                    |
### |-------------------------------------------------------------------------------------------------------------|


%ENV-BAT|L1|L2|L3|StopOnFail%                                                           
+CaseStart+
< Gateway Firmware Upgrade >

::CONSOLE::Local
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GW fw upgrade
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
# TR69 upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=ras}]
} else {
# GUI upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=ras}]
}
<TCL_Block_End>

# Check device firmware version
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >" 

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 

::WEB::WebDrv_Check_Text {id} {card_sysinfo_fwversion} {$FIRMWARE_VERSION$} {20} {PASS} {full}
::CONSOLE::Wait {2}

# Logout GUI
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}
# ========================[Get device firmware version]======================== #
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get FW Version >"    
-CaseEnd-


%ENV-BAT|L1|L2|L3%                                                           
+CaseStart+
< Extender Firmware Upgrade >
::CONSOLE::Local
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"
#####################################Upgrade RP1#####################################

# Power on Extender-RP_1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3310-B0_GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Disable Option43 >"
::CONSOLE::Wait {5}
}
<TCL_Block_End>

# Only Enable RP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 LAN Enable >"
::CONSOLE::Wait {100}

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# to do firmware upgrade from GUI
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3310-B0_GF" } {

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender TR69 FW Upgrade >" [list {$Extender_ID=$EXT01_SN$}]
#::WEB::WebDrv_OpenWebSite "http://$::extender_ip1/supportconsole" {A1000}
#::CONSOLE::Wait {5}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT01_USER_LOGIN_NAME$} {$GUI_pwd=$EXT01_USER_LOGIN_PASSWORD$}]

} else {
::WEB::WebDrv_OpenWebSite "http://$::extender_ip1" {A1000}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT01_USER_LOGIN_NAME$} {$GUI_pwd=$EXT01_USER_LOGIN_PASSWORD$}]
}
<TCL_Block_End>
::CONSOLE::Wait {3}
 
# Get RP1 firmware version
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3310-B0_Generic" || "$EXTENDER$" == "WX3310-B0_GF" } {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1_Console_login >"
::CONSOLE::Wait {2}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "status swversion" 5 ::exterder_fw
set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::FW_Version [string trim [lindex $::temp2 0]]
::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]

} else {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1_Console_login >"
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "sys atsh" 5 ::exterder_fw

set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::temp3 [split $::temp2 ":"]
set ::FW_Version [string trim [lindex $::temp3 1]]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]
}

#if { ($::fw_value1 == "0") || ($::fw_value1 == "PASS") } {
::MISC::ACTS_Dummy_Response {PASS} "Extender-RP1 current firmware is $::FW_Version"
#} else {
#::MISC::ACTS_Dummy_Response {FAIL} "Extender-RP1 current firmware is $::FW_Version"
#}
<TCL_Block_End>

# Disable RP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 LAN Disable >"
#::CONSOLE::Wait {10}
#####################################Upgrade RP2#####################################
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
# Only Power on Extender-RP2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}
 
# Reset Extender-RP2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

if { "$EXTENDER$" == "WX3310-B0_GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Disable Option43 >"
::CONSOLE::Wait {5}
}


# Only Enable RP2 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 LAN Enable >"
::CONSOLE::Wait {100}

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Upgrade Extender-RP_2 firmware by GUI 

if { "$EXTENDER$" == "WX3310-B0_GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender TR69 FW Upgrade >" [list {$Extender_ID=$EXT02_SN$}]
#::WEB::WebDrv_OpenWebSite "http://$::extender_ip2/supportconsole" {A1000}
#::CONSOLE::Wait {5}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT02_USER_LOGIN_NAME$} {$GUI_pwd=$EXT02_USER_LOGIN_PASSWORD$}]

} else {
::WEB::WebDrv_OpenWebSite "http://$::extender_ip2" {A1000}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT02_USER_LOGIN_NAME$} {$GUI_pwd=$EXT02_USER_LOGIN_PASSWORD$}]
}


# Get RP2 firmware version

if { "$EXTENDER$" == "WX3310-B0_Generic" || "$EXTENDER$" == "WX3310-B0_GF" } {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2_Console_login >"
::CONSOLE::Wait {2}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "status swversion" 5 ::exterder_fw

set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::FW_Version [string trim [lindex $::temp2 0]]
::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]

} else {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2_Console_login >"
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "sys atsh" 5 ::exterder_fw

set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::temp3 [split $::temp2 ":"]
set ::FW_Version [string trim [lindex $::temp3 1]]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]
}

#if { ($::fw_value1 == "0") || ($::fw_value1 == "PASS") } {
::MISC::ACTS_Dummy_Response {PASS} "Extender-RP2 current firmware is $::FW_Version"
#} else {
#::MISC::ACTS_Dummy_Response {FAIL} "Extender-RP2 current firmware is $::FW_Version"
#}

# Disable RP2 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 LAN Disable >"
#::CONSOLE::Wait {10} 

#####################################Upgrade RP3#####################################
# Only Power on Extender-RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}
 
# Reset Extender-RP3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

if { "$EXTENDER$" == "WX3310-B0_GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Disable Option43 >"
::CONSOLE::Wait {5}
}


# Only Enable RP3 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 LAN Enable >"
::CONSOLE::Wait {100}

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Upgrade Extender-RP3 firmware by GUI 

if { "$EXTENDER$" == "WX3310-B0_GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender TR69 FW Upgrade >" [list {$Extender_ID=$EXT03_SN$}]
#::WEB::WebDrv_OpenWebSite "http://$::extender_ip3/supportconsole" {A1000}
#::CONSOLE::Wait {5}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT03_USER_LOGIN_NAME$} {$GUI_pwd=$EXT03_USER_LOGIN_PASSWORD$}]

} else {
::WEB::WebDrv_OpenWebSite "http://$::extender_ip3" {A1000}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender FW Upgrade >" [list {$GUI_name=$EXT03_USER_LOGIN_NAME$} {$GUI_pwd=$EXT03_USER_LOGIN_PASSWORD$}]
}


# Get RP3 firmware version

if { "$EXTENDER$" == "WX3310-B0_Generic" || "$EXTENDER$" == "WX3310-B0_GF" } {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3_Console_login >"
::CONSOLE::Wait {2}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "status swversion" 5 ::exterder_fw
set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::FW_Version [string trim [lindex $::temp2 0]]
::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {status swversion} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]
} else {
# Get Extender FW Version 
set ::exterder_fw ""
set ::FW_Version ""
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3_Console_login >"
::CONSOLE::Wait {2}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Capture_Response {} "sys atsh" 5 ::exterder_fw
set ::temp1 [split $::exterder_fw "\n"]
set ::temp2 [lindex $::temp1 0]
set ::temp3 [split $::temp2 ":"]
set ::FW_Version [string trim [lindex $::temp3 1]]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}
#set ::fw_value1 [::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$EXTENDER_FIRMWARE_VERSION$} {}]
}

#if { ($::fw_value1 == "0") || ($::fw_value1 == "PASS") } {
::MISC::ACTS_Dummy_Response {PASS} "Extender-RP3 current firmware is $::FW_Version"
#} else {
#::MISC::ACTS_Dummy_Response {FAIL} "Extender-RP3 current firmware is $::FW_Version"
#}

# Disable RP1/2/3 LAN Port via switch
}
<TCL_Block_End>
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 LAN Disable >"
::CONSOLE::Wait {5}
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 LAN Disable >"
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 LAN Disable >"
::CONSOLE::Wait {5}
}
<TCL_Block_End>
# ========================[Get device firmware version]======================== #
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get FW Version >"  
-CaseEnd-


%ENV-BAT%                                                           
+CaseStart+
< Attenuator Value Check >

::CONSOLE::Local
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
#if { "$Econet_Platform$" == "yes" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
#} else
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# ################################################98_attenuator############################################################################
#=================================Add RP1==============================================
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>

# Login GW and check RP1 BSSID and interface
::CONSOLE::Wait {120}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get gwbackhaul_mac
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get BACKHAUL_MAC >"
::MISC::ACTS_Dummy_Response {PASS} "$::gwbackhaul_mac"


# ################################################98_attenuator############################################################################
# Check 98_attenuator value
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" || "$sysName$" == "WX3100-T0" || "$sysName$" == "EX5601-T0" } {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP1 connect_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp1_connect_to_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=98} {$attenuator_value=20} {$bssid=$::gwbackhaul_mac} {$connect_dev=$::rp1_connect_to_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP1 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp1_5G_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=98} {$attenuator_value=20} {$bssid=$::gwbackhaul_mac} {$connect_dev=$::rp1_5G_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}
<TCL_Block_End>

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {2} 
} else {
# ################################################97_attenuator############################################################################
#=================================Add RP3==============================================
# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Check 97_attenuator value
if { "$EXTENDER$" == "VMG8623-T50B_Generic" || "$sysName$" == "WX3100-T0" || "$sysName$" == "EX5601-T0" } {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 connect_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_connect_to_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=97} {$attenuator_value=20} {$bssid=$::gwbackhaul_mac} {$connect_dev=$::rp3_connect_to_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_5G_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=97} {$attenuator_value=20} {$bssid=$::gwbackhaul_mac} {$connect_dev=$::rp3_5G_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}



# ################################################96_attenuator############################################################################

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"

# attenuator value
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
#======================================ADD RP2=============================================================
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
#::CONSOLE::Wait {110}
#::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
#::CONSOLE::Wait {110}
#::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}

# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=9}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP2 BACKHAUL_MAC >"
::MISC::ACTS_Dummy_Response {PASS} "$::RP2backhaul_mac"

# Check 96_attenuator value
if { "$EXTENDER$" == "VMG8623-T50B_Generic" || "$sysName$" == "WX3100-T0" || "$sysName$" == "EX5601-T0" } {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 connect_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_connect_to_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=96} {$attenuator_value=20} {$bssid=$::RP2backhaul_mac} {$connect_dev=$::rp3_connect_to_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
# Get rp1_5G_BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_5G_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=96} {$attenuator_value=20} {$bssid=$::RP2backhaul_mac} {$connect_dev=$::rp3_5G_BSSID} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}
}
<TCL_Block_End>
-CaseEnd-
# ################################################94_attenuator############################################################################
# connect to attenuator of the wifi client 
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:1:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:2:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:3:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:4:SETATT:00.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}

# Config wifi setting for client connect 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Steering_Change 24G wifi >" [list {set_ssid=auto_mesh} {set_key=12345678}]
::CONSOLE::Wait {600}

::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:1:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:2:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:3:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:4:SETATT:00.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {50}


# Get 94_attenuator value
# Get 5G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 5G Main BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::5G_main_BSSID"

# Check 94_attenuator value
<TCL_Block_Begin> 
if { "$sysName$" == "EX5510-B0" || "$sysName$" == "WX3401-B0" || "$sysName$" == "EX3510-B0" || "$sysName$" == "DX4510-B0" } {
#5510-B0_FW.5b4/WX3401-B0_FW.1C0/3510_FW.4C0/4510_FW.2C1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=94} {$attenuator_value=05} {$bssid=$::5G_main_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=94} {$attenuator_value=20} {$bssid=$::5G_main_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}
<TCL_Block_End>

::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:1:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:2:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:3:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.94/PWD=1234;:CHAN:4:SETATT:95.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}

<TCL_Block_Begin> 
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {

# ################################################92_attenuator############################################################################
# wifi client connect to RP1
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:1:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:2:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:3:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:4:SETATT:00.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {60}


# Get 92_attenuator value
# Get 5G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP1 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp1_5G_BSSID"


# Check 94_attenuator value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=92} {$attenuator_value=20} {$bssid=$::rp1_5G_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]


::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:1:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:2:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:3:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.92/PWD=1234;:CHAN:4:SETATT:95.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}

}
<TCL_Block_End>


# ################################################95_attenuator############################################################################
<TCL_Block_Begin> 
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1} 
} else {
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:1:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:2:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:3:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:4:SETATT:00.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {60}

# Get 94_attenuator value
# Get 5G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP2 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp2_5G_BSSID"


# Check 95_attenuator value
if { "$sysName$" == "EX5510-B0" || "$sysName$" == "EX3510-B0" || "$sysName$" == "DX4510-B0" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP2 wificlient_connected_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp2_client_connected_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=95} {$attenuator_value=10} {$bssid=$::rp2_client_connected_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} elseif { "$sysName$" == "WX3401-B0" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=95} {$attenuator_value=10} {$bssid=$::rp2_5G_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=95} {$attenuator_value=20} {$bssid=$::rp2_5G_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}

::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:1:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:2:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:3:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.95/PWD=1234;:CHAN:4:SETATT:95.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}

# ################################################93_attenuator############################################################################

::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:1:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:2:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:3:SETATT:00.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:4:SETATT:00.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {60}

# Get 94_attenuator value
# Get 5G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 5G_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_5G_BSSID"


# Check 93_attenuator value
if { "$sysName$" == "EX5510-B0" || "$sysName$" == "EX3510-B0" || "$sysName$" == "DX4510-B0" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get RP3 wificlient_connected_main_BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::rp3_client_connected_BSSID"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=93} {$attenuator_value=10} {$bssid=$::rp3_client_connected_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} elseif { "$sysName$" == "WX3401-B0" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=93} {$attenuator_value=10} {$bssid=$::rp3_5G_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< RSSI Check >" [list {$attenuator_num=93} {$attenuator_value=20} {$bssid=$::rp3_5G_BSSID} {$connect_dev=$phone_main_mac$} {$rssi_file=D:/mesh_steering_time/rssi_value.txt}]
}

::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:1:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:2:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:3:SETATT:95.00} {A1000}
::WEB::WebDrv_OpenWebSite {http://10.150.151.93/PWD=1234;:CHAN:4:SETATT:95.00} {A1000}
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {5}

}
<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
<=====Onboarding (Add extender)=====>
::CONSOLE::Local
-CaseEnd-



%ENV-BAT%
+CaseStart+
<=====1 Controller + 1 Extender=====>
::CONSOLE::Local
-CaseEnd-



%ENV-L1%
+CaseStart+
< OPAL-17322 Press Controller & Extender HW WPS button to Add Extender-RP to Controller >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::Wait {70}
   }


# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>

# Login GW and check RP1 BSSID and interface
::CONSOLE::Wait {120}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
-CaseEnd-



#%ENV-L3%
#+CaseStart+
#< OPAL-17323:Press Controller HW WPS button & Extender SW WPS PBC to Add Extender-Repeater to Controller >
#-CaseEnd-

 

#%ENV-L1%
#+CaseStart+
#< OPAL-17324:Press Controller & Extender SW WPS PBC to Add Extender-Repeater to Controller >
#-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17325 Press Controller SW WPS PBC & Extender HW WPS button to Add Extender-Repeater to Controller >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0} 
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>
 
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::Wait {70}
   }
<TCL_Block_End>

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's SW WPS PBC
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
  # A1 support twin pack 
  ::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< sw wps >"
}
<TCL_Block_End>


# Press RP's HW WPS button
::CONSOLE::Remote
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>

::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



#%ENV-L3%
#+CaseStart+
#< OPAL-17326:Check 160MHz RF Bandwidth to Press Controller & Extender HW WPS button to Add Extender-RP to Controller >
#-CaseEnd-



%ENV-L1%
+CaseStart+
< OPAL-17327 Extender connected Controller's LAN port >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Enable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"

# Power on AP1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Power On >"
::CONSOLE::Wait {110}


# Reset Extender-AP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

::CONSOLE::Wait {120}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 5G >"
}


if { "$PROJECT$" == "Altibox" } {
# Configure AP1 ACS-URL by Console
::CONSOLE::Wait {10}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT04_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >"  [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=AP1}]
}
<TCL_Block_End>
#::CONSOLE::Wait {40}

# Login GW and check AP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check AP1 Backhaul >"

# Get AP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

# admin login AP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Login >"
}
<TCL_Block_End>

# Check Extender-AP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check AP1 wifi >" [list {$ssid=$Wireless_ssid$} {$key=$Pre_shared_key$}]

# Disable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"
-CaseEnd-



%ENV-BAT%
+CaseStart+
<=====1 Controller + 3 Extender=====>
::CONSOLE::Local
-CaseEnd-

%ENV-L3%
+CaseStart+
< OPAL-17329 Check all extenders can be added success and connected backhaul >

# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {Only support one extender} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {120}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {60}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]
}
<TCL_Block_End>


::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
 

#=================================Add AP1==============================================
# Power on AP1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Power On >"
::CONSOLE::Wait {110}

# Reset Extender-AP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

::CONSOLE::Wait {110}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 5G >"
}

# Enable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"

if { "$PROJECT$" == "Altibox" } {
# Configure AP1 ACS-URL by Console
::CONSOLE::Wait {10}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT04_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >"  [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=AP1}]
}
<TCL_Block_End>
::CONSOLE::Wait {40}

# Login GW and check AP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check AP1 Backhaul >"

# Get AP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

# admin login AP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Login >"
}
<TCL_Block_End>

# Check Extender-AP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check AP1 wifi >" [list {$ssid=$Wireless_ssid$} {$key=$Pre_shared_key$}]

#=================================Add RP3==============================================

# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
#::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>
::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {40}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17335 Check all extenders can be added success and connected backhaul >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Reset GW to factory default
# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {120}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
 
#=================================Add RP2==============================================

<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
# Power on RP1 and RP2, power off RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >" 
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"


# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=================================Add RP3==============================================

# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}


if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17336 Check all extenders can be added success and connected backhaul >

# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {Only support one extender} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {120}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>

::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
 
#=================================Add RP2==============================================

# Power on RP1 and RP2, power off RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >" 
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}
<TCL_Block_End>
# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"


# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
<TCL_Block_End> 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=================================Add RP3==============================================

# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>
::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >"  [list {$topology=9}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-BAT%
+CaseStart+
<=======Other Expection cases=======>
::CONSOLE::Local
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17337 Controller restore configuration (without EasyMESH conf) then add extender >

# Project check
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
     ::RUNNER::SkipCase {US can not use HFS file server} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Update firmware to non-mesh firmware and reset to default
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
# TR69 upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=non_mesh}]
} else {
# GUI upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=non_mesh}]
}
<TCL_Block_End>
::CONSOLE::Wait {20}
# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"
  
# Modify main ssid and preshared key
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" || "$PROJECT$" == "TMNL" || "$PROJECT$" == "Generic" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
#::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertest} {set_key=aaaaaaaa}]
}
::CONSOLE::Wait {20}
::MISC::ACTS_Dummy_Response {PASS} {Modify GW guest1 wifi SSID and Presharedkey}

if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]

} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]

}
<TCL_Block_End>
::CONSOLE::Wait {30}

 

# Login GUI with admin, backup non_mesh config file
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
     ::CONSOLE::Wait {1}
} elseif { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
     ::WEB::WebDrv_OpenWebSite "http://$::WX3401_ip" {A1000}
} else {
     ::WEB::WebDrv_OpenWebSite {$CPEWEB$} {A1000}
}
<TCL_Block_End>
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::CONSOLE::Wait {3}

::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::WEB::WebDrv_Click {id} {Backup_Restore} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {backup_config_backup_btn} {20}
::CONSOLE::Wait {10}

# Logout GUI
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {navbar_logout} {20}
::CONSOLE::Wait {2}
#::WEB::WebDrv_Click {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {20}
::TESTLINK::WebDrv_Click_Option {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div/div[2]/button/span} {20} 
::CONSOLE::Wait {2}                                             
::WEB::WebDrv_CloseBrowser {A1000}

# Login GUI with admin, upgrade firmware to test FW
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
# TR69 upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=ras}]
} else {
# GUI upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=ras}]
}
<TCL_Block_End>
::CONSOLE::Wait {20}

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"
 
 
# Restore non_mesh config to DUT
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
     ::WEB::WebDrv_OpenWebSite "http://$::WX3401_ip" {A1000}
   } else {
     ::WEB::WebDrv_OpenWebSite {$CPEWEB$} {A1000}
   }
<TCL_Block_End>
::WEB::WebDrv_List_Select {id} {exampleFormControlSelect1} {option_value} {en} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::CONSOLE::Wait {3}

# Go to Maintenance/Backup Restore Page
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::WEB::WebDrv_Click {id} {Backup_Restore} {20}

<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
     ::WEB::WebDrv_File_Dialog {id} {filename} {C:\Users\acts\Downloads/Backup_Restore.conf} {20}
   } else {
     ::WEB::WebDrv_File_Dialog {id} {filename} {C:\Users\acts\Downloads/Backup_Restore} {20}
   }
<TCL_Block_End>

::WEB::WebDrv_Click {id} {restore_config_upload_btn} {20}
::CONSOLE::Wait {180}
::WEB::WebDrv_CloseBrowser {A1000}

# Check wifi setting, admin login DUT's WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::CONSOLE::Wait {1}
} elseif { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::WEB::WebDrv_OpenWebSite "http://$::WX3401_ip" {A1000}
::WEB::WebDrv_List_Select {id} {exampleFormControlSelect1} {option_value} {en} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::CONSOLE::Wait {3}

# Go to Network Setting >> Wireless page
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {Wireless} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Check 2.4G WiFi setting from GUI
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {3}             

# Check 2.4G guest setting 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Check 5G main WiFi setting from GUI
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
#<TCL_Block_Begin>
#if { "$sysName$_$PROJECT$" == "WX3100-T0" } {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {2} {20}
#} else {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
#}
#<TCL_Block_End>
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {1}

# check 5g guest wifi setting
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Logout GUI
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {navbar_logout} {20}
::CONSOLE::Wait {2}
#::WEB::WebDrv_Click {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {20}
::TESTLINK::WebDrv_Click_Option {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div/div[2]/button/span} {20} 
::CONSOLE::Wait {2}                                             
::WEB::WebDrv_CloseBrowser {A1000}

} else {
::WEB::WebDrv_OpenWebSite {$CPEWEB$} {A1000}
::WEB::WebDrv_List_Select {id} {exampleFormControlSelect1} {option_value} {en} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::CONSOLE::Wait {3}

# Go to Network Setting >> Wireless page
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {Wireless} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Check 2.4G WiFi setting from GUI
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {3}             

# Altibox need to enable onessid
if { "$PROJECT$" == "Altibox" } {
::WEB::WebDrv_Click {id} {oneSsid_label} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {applyWifiBtn} {20}
::CONSOLE::Wait {40}
}

# Check 2.4G guest setting 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Check 5G main WiFi setting from GUI
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
#<TCL_Block_Begin>
#if { "$sysName$_$PROJECT$" == "WX3100-T0" } {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {2} {20}
#} else {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
#}
#<TCL_Block_End>
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {1}

# check 5g guest wifi setting
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}

# Logout GUI
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {navbar_logout} {20}
::CONSOLE::Wait {2}
#::WEB::WebDrv_Click {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {20}
::TESTLINK::WebDrv_Click_Option {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div/div[2]/button/span} {20} 
::CONSOLE::Wait {2}                                             
::WEB::WebDrv_CloseBrowser {A1000}

   }
<TCL_Block_End>

# Delete Backup file
<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
     ::CONSOLE::Open_Shell {DOS_Shell} {CMD} {}
     ::CONSOLE::CI_Cmd_More {} {c:} {10} {cd "C:\Users\acts\Downloads"} {10} {del Backup_Restore.conf} {30}
     ::CONSOLE::Wait {5}
   } else {
     ::CONSOLE::Open_Shell {DOS_Shell} {CMD} {}
     ::CONSOLE::CI_Cmd_More {} {c:} {10} {cd "C:\Users\acts\Downloads"} {10} {del Backup_Restore} {30}
     ::CONSOLE::Wait {5}
   }
<TCL_Block_End>

#======================================Add RP1============================================================= 
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {40}

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
::CONSOLE::Remote
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
                                                                            
#=================================Add RP2==============================================
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
# Power on RP1 and RP2, power off RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}


if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}

 
# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]


# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]


#=================================Add RP3==============================================
# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
} 
<TCL_Block_End>
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17338 Controller upgrade FW from Non-EasyMESH FW to support EasyMESH FW w/o reset default then add extender >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Update firmware to non-mesh firmware and reset to default
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
# TR69 upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=non_mesh}]
} else {
# GUI upgrade fw
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< FW Upgrade >" [list {$file=non_mesh}]
}
<TCL_Block_End>
::CONSOLE::Wait {20}

# Reset GW to factory default
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"


<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}     
 }
#<TCL_Block_End> 

# Modify ssid and preshared key
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
} elseif { "$PROJECT$" == "TMNL" || "$PROJECT$" == "Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertest} {set_key=aaaaaaaa}]
}
::CONSOLE::Wait {20}

::MISC::ACTS_Dummy_Response {PASS} {Modify GW guest1 wifi SSID and Presharedkey}
#<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]

} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]

}
<TCL_Block_End>
::CONSOLE::Wait {30}

# check wifi setting, admin login DUT's WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.1.} {SSID} {Contro llertest}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {Contro llertest}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.2.} {SSID} {guest llertest}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {guest llertest}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {3}
} elseif { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::WEB::WebDrv_OpenWebSite "http://$::WX3401_ip" {A1000}
::WEB::WebDrv_List_Select {id} {exampleFormControlSelect1} {option_value} {en} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::CONSOLE::Wait {3}

# Go to Network Setting >> Wireless page
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Mouse_Over {linkText} {Network Setting} {20}
::WEB::WebDrv_Click {id} {Wireless} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Check 2.4G WiFi setting from GUI
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {3}             

# Check 2.4G guest setting 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Check 5G main WiFi setting from GUI
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
#<TCL_Block_Begin>
#if { "$sysName$_$PROJECT$" == "WX3100-T0" } {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {2} {20}
#} else {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
#}
#<TCL_Block_End>
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {1}

# check 5g guest wifi setting
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Logout GUI
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {navbar_logout} {20}
::CONSOLE::Wait {2}
::TESTLINK::WebDrv_Click_Option {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div/div[2]/button/span} {20} 
::CONSOLE::Wait {2}                                             
::WEB::WebDrv_CloseBrowser {A1000}

} else {
::WEB::WebDrv_OpenWebSite {$CPEWEB$} {A1000}
::WEB::WebDrv_List_Select {id} {exampleFormControlSelect1} {option_value} {en} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Set_Value {id} {username} {$CPEUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {userpassword} {$CPEPASSWORD$} {20}
::WEB::WebDrv_Click {id} {loginBtn} {3}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::CONSOLE::Wait {3}

# Go to Network Setting >> Wireless page
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Mouse_Over {linkText} {Network Setting} {20}
::WEB::WebDrv_Click {id} {Wireless} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Check 2.4G WiFi setting from GUI
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {3}             

if { "$PROJECT$" == "Altibox" } {
::WEB::WebDrv_Click {id} {oneSsid_label} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {applyWifiBtn} {20}
::CONSOLE::Wait {50}
}

# Check 2.4G guest setting 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Check 5G main WiFi setting from GUI
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
#<TCL_Block_Begin>
#if { "$sysName$_$PROJECT$" == "WX3100-T0" } {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {2} {20}
#} else {
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
#}
#<TCL_Block_End>
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {Contro llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {aaaaaaaa} {20} {PASS}
::CONSOLE::Wait {1}

# check 5g guest wifi setting
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {guest llertest} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {bbbbbbbb} {20} {PASS}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}

# Logout GUI
::WEB::WebDrv_Click {id} {h_menu_list} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {navbar_logout} {20}
::CONSOLE::Wait {2}
::TESTLINK::WebDrv_Click_Option {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div[2]/button/span} {xpath} {//*[@id="AlertBox"]/div[2]/div[3]/div/div[2]/button/span} {20} 
::CONSOLE::Wait {2}                                             
::WEB::WebDrv_CloseBrowser {A1000}

}
<TCL_Block_End>

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================Add RP1============================================================= 
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
 ::CONSOLE::Wait {40}
 <TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>


# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]



# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

#=================================Add RP2==============================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on RP1 and RP2, power off RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

#=================================Add RP3==============================================
# Power on RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address  
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
}
<TCL_Block_End>
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17339 Extender reset default then re-pair again >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>



# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
                                                                            
#==========================Extender reset to default and Add Extender again==============================

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}


# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17340 More Extender press WPS then Controller to Add Device process >
# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {Only support one extender} {1}
}
<TCL_Block_End>
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {5}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {5}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP1's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
	if { "$::extender_ip1" != "" } {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]
	} elseif { "$::extender_ip2" != "" } {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
	} else {		
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
	}
::CONSOLE::Wait {100}
}
<TCL_Block_End>
# Login GW and check RP1, RP2, RP3 BSSID and interface
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
     ::CONSOLE::CI_Cmd {} {\n}
     set ::ret_value1 [::CONSOLE::CI_Cmd_Scan {} {mapd_cli /tmp/mapd_ctrl dump_topology_v1;cat /tmp/dump.txt} {30} {$EXT01_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
     set ::ret_value2 [::CONSOLE::CI_Cmd_Scan {} {mapd_cli /tmp/mapd_ctrl dump_topology_v1;cat /tmp/dump.txt} {30} {$EXT02_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
     set ::ret_value3 [::CONSOLE::CI_Cmd_Scan {} {mapd_cli /tmp/mapd_ctrl dump_topology_v1;cat /tmp/dump.txt} {30} {$EXT03_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
   } else { 
     ::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
     ::CONSOLE::CI_Cmd {} {\n}
     set ::ret_value1 [::CONSOLE::CI_Cmd_Scan {} {wb_cli -m info} {30} {$EXT01_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
     set ::ret_value2 [::CONSOLE::CI_Cmd_Scan {} {wb_cli -m info} {30} {$EXT02_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
     set ::ret_value3 [::CONSOLE::CI_Cmd_Scan {} {wb_cli -m info} {30} {$EXT03_5G_BSSID$} {}]
     ::CONSOLE::Wait {1}
   }
<TCL_Block_End>


<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
if { ($::ret_value1 == "0") || ($::ret_value1 == "PASS") } {
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT02_5G_BSSID$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT03_5G_BSSID$} {}
::CONSOLE::Wait {5}
    
# Get RP1 WiFi 5G status, SSID and PreSharedKey 
::MISC::ACTS_Dummy_Response {PASS} {Add RP1 Pass and check RP1}
# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
	if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
	}

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
    
} elseif { ($::ret_value2 == "0") || ($::ret_value2 == "PASS") } {
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT01_5G_BSSID$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT03_5G_BSSID$} {}
::CONSOLE::Wait {5}
        
# Get RP2 WIFI 5G status, SSID and PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Add RP2 Pass and check RP2}
# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]


# admin login RP2 WebGUI
	if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
	}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

} elseif { ($::ret_value3 == "0") || ($::ret_value3 == "PASS") } {
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT01_5G_BSSID$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {30} {$EXT02_5G_BSSID$} {}
::CONSOLE::Wait {5}
            
# Check RP_3 WiFi 5G status, SSID, PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Add RP3 Pass and check RP3} 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
	if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
	}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
}
<TCL_Block_End>

<TCL_Block_Begin>
if { "$Econet_Platform$" == "no" } {
if { ($::ret_value1 == "0") || ($::ret_value1 == "PASS") } {
    
# Get RP1 WiFi 5G status, SSID and PreSharedKey 
::MISC::ACTS_Dummy_Response {PASS} {Add RP1 Pass and check RP1}
# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
   
    
} elseif { ($::ret_value2 == "0") || ($::ret_value2 == "PASS") } {
        
::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {30} {$EXT01_5G_BSSID$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {30} {$EXT03_5G_BSSID$} {}
::CONSOLE::Wait {5}

# Get RP2 WIFI 5G status, SSID and PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Add RP2 Pass and check RP2}
# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]


# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

} elseif { ($::ret_value3 == "0") || ($::ret_value3 == "PASS") } {
                  
::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {30} {$EXT01_5G_BSSID$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {30} {$EXT02_5G_BSSID$} {}
::CONSOLE::Wait {5}

# Check RP_3 WiFi 5G status, SSID, PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Add RP3 Pass and check RP3} 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
}
<TCL_Block_End>

-CaseEnd-
                      
    
    
%ENV-L1%
+CaseStart+
< OPAL-17341 Controller use auto channel to add extender (For US & EU) >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End> 
 
# Power off AP_1, AP_2, AP_3
# Power on RP_1, power off RP_2 and RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>


# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17342 Controller use Band1 channel to add extender (For US & EU) >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

#=============================Channel 36==================================
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>


# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=36} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 40==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=40} {$ssid=$Wireless_ssid$}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#=============================Channel 44==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=44} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 48==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd- 



%ENV-L3%
+CaseStart+
< OPAL-17343 Controller use Band2 channel to add extender (For EU) >

# Check region
<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
     ::RUNNER::SkipCase {For DFS Channel} {1}
   }
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

#=============================Channel 52==================================
# Reset GW to factory default
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=52} {$ssid=$Wireless_ssid$}]
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}


# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"


# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 56==================================

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=56} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 60==================================

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=60} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 64==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=64} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


-CaseEnd- 



%ENV-L3%
+CaseStart+
< OPAL-17344 Controller use Band3 channel to add extender (For EU) >

# Check region
::CONSOLE::Local
<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
     ::RUNNER::SkipCase {For DFS Channel} {1}
   }
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

#=============================Channel 100==================================
# Reset GW to factory default
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=100} {$ssid=$Wireless_ssid$}]
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 104==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=104} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 108==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=108} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 112==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=112} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17345 Controller use Band4 channel to add extender (For US) >

# Check region
::CONSOLE::Local
<TCL_Block_Begin>
if { "$US_Generic$" == "no" } {
     ::RUNNER::SkipCase {For US Channel} {1}
   }
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

#=============================Channel 149==================================
# Reset GW to factory default
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>


# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=149} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
::CONSOLE::Remote
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 153==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=153} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 157==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=157} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=============================Channel 161==================================
# Modify GW wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=161} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17346 Add 1st extender fail then add 2nd extender >
# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {Only support one extender} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
 
# Power off AP1, AP2, AP3
# Power on RP1, RP2, power off RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}


# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {5}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
} else {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP1's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>
::CONSOLE::Wait {20}

# Power off RP1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
::CONSOLE::Wait {10}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
<TCL_Block_End> 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP2 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



%ENV-L1%
+CaseStart+
< OPAL-17347 Add extender successful then press GW & Extender's both H/W WPS button to pairing again >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"


# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=} {$console_pwd=}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>


# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=======================Press GW & Extender's both H/W WPS button to pairing again===================

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=} {$console_pwd=}]


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-



%ENV-L1%
+CaseStart+
< OPAL-17348 Add extender successful then change GW 5G channel, check it can connect back WiFi_backhaul >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
 
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< check RP1 wifi >" [list {$ssid=$Wireless_ssid$} {$key=$Pre_shared_key$}]

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>

# Modify GW wireless channel from Auto to 36
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=36} {$ssid=$Wireless_ssid$}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Check Extender-RP_1 wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< check channel >" [list {$channel=36}]

# Modify GW wireless channel from 36 to 48
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=48} {$ssid=$Wireless_ssid$}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
::CONSOLE::Wait {20}    
# Check Extender-RP_1 wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< check channel >" [list {$channel=48}]

# Modify GW wireless channel from 48 to 100
<TCL_Block_Begin>
if { "$US_Generic$" == "no" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=100} {$ssid=$Wireless_ssid$}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
    
# Check Extender-RP_1 wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< check channel >" [list {$channel=100}]
}
<TCL_Block_End>

# Modify GW wireless channel from 48 to 149
<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=149} {$ssid=$Wireless_ssid$}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
    
# Check Extender-RP_1 wireless channel
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< check channel >" [list {$channel=149}]
}
<TCL_Block_End>

# Modify GW wireless channel to auto, and modify SSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >" [list {$channel=auto} {$ssid=channel_test}]

::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
    
# Check Extender-RP_1 wireless SSID 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=channel_test} {check_key=$Pre_shared_key$}]
       
-CaseEnd-



#%ENV-L3%
#+CaseStart+
#< OPAL-17349:Reboot paired extender, check it cannot impact Controller add extender process >
#-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17350 Check WiFi_Backhaul SSID should hidden & auto generate & unique per device >

# Project Check
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes"  } {
     ::RUNNER::SkipCase {Twin_Pack Not support the feature} {1}
   }
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul SSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_SSID >" [list {}] {::SSID1}
set ::SSID1 $Backhaul_SSID$
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_SSID: $::SSID1"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul SSID2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >" 
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID1" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID1" {}
   }
<TCL_Block_End>
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_SSID >" [list {}] {::SSID2}
set ::SSID2 $Backhaul_SSID$ 
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_SSID: $::SSID2"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul SSID3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID1" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID2" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID1" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID2" {}
   }
<TCL_Block_End>
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_SSID >" [list {}] {::SSID3}
set ::SSID3 $Backhaul_SSID$
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_SSID: $::SSID3"


# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul SSID4 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"

<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID1" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID2" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::SSID3" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID1" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID2" {}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {wb_cli -m info} {20} "$::SSID3" {}
   }
<TCL_Block_End>


::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_SSID >" [list {}] {::SSID4}
set ::SSID4 $Backhaul_SSID$
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_SSID: $::SSID4"

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17351 Check WiFi_Backhaul PreSharedKey should auto generate & unique per device >

# Project Check
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes"  } {
     ::RUNNER::SkipCase {Twin_Pack Not support the feature} {1}
   }
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul KEY
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_Sharedkey >" [list {}] {::key1}
set ::key1 $Backhaul_Key$
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_KEY: $::key1"

 # Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul KEY2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key1" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key1" {}
   }
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_Sharedkey >" [list {}] {::key2}
 
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_KEY: $::key2"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul KEY3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"

<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key1" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key2" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key1" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key2" {}
   }
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_Sharedkey >" [list {}] {::key3}
 
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_KEY: $::key3"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# GF Project need to enable wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {10}

# Get Controller Backhaul KEY4
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"

<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key1" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key2" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {cat /tmp/dump.txt} {20} "$::key3" {}
   } else {
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key1" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key2" {}
     ::CONSOLE::CI_Cmd {} {\n}
     ::CONSOLE::CI_Cmd_Scan_Fail {} {nvram show | grep wpa} {20} "$::key3" {}
   }
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GET Backhaul_Sharedkey >" [list {}] {::key4}
 
::MISC::ACTS_Dummy_Response {PASS} "Current Backhaul_KEY: $::key4"
-CaseEnd-

                                                                                

%ENV-BAT%
+CaseStart+
<=========Auto Configuration========>
::CONSOLE::Local
-CaseEnd-

%ENV-BAT%
+CaseStart+
<=========Topology-2: 2 extender(AP1_RP2)/1 extender(RP3) connect to AP1 Onboarding========>

::CONSOLE::Local
# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {120}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#=================================Add AP1==============================================
# Power on AP1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Power On >"
::CONSOLE::Wait {110}

# Reset Extender-AP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

::CONSOLE::Wait {110}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 5G >"
}

# Enable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"

if { "$PROJECT$" == "Altibox" } {
# Configure AP1 ACS-URL by Console
::CONSOLE::Wait {10}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT04_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >"  [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=AP1}]
}
<TCL_Block_End>
::CONSOLE::Wait {40}


# Login GW and check AP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check AP1 Backhaul >"

# Get AP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

# admin login AP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Login >"
}
<TCL_Block_End>

# Check Extender-AP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check AP1 wifi >" [list {$ssid=$Wireless_ssid$} {$key=$Pre_shared_key$}]

#=================================Add RP3==============================================

# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>
::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {40}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17363 Modify Controller Main SSID/WifiKey when all of Extender is connect(On-line)(Repeat 5 times) >

######################### Moddify GW wifi and check extender AP config 5 times #########################
# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>
 
<TCL_Block_Begin>
for {set i 1} {$i < 6} {incr i 1} {  
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

::MISC::ACTS_Dummy_Response {PASS} {Modify GW main wifi SSID and Presharedkey}
# Modify GW wireless SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=Test$i" "set_key=aaaaaaa$i"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_1/2/3 SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
<TCL_Block_End>

# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17364 Modify Controller Guest-1 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
# Model. Check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# ######################## Modify GW Guest-1 wifi and check extender AP config 3 times #########################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest1 wifi SSID and PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Modify GW guest1 wifi SSID and Presharedkey}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test} {$set_key=bbbbbbbb}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test\"} {$set_key=bbbbbbbb}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check Extender-RP_1/2/3 Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=Guest Test2} {$set_key=bbbbbbb2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check Extender-RP Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to enable 5G guest1 wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$US_Generic$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test3} {$set_key=bbbbbbb3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to disable 5G guest1 wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
}
<TCL_Block_End>


# Modify GW Guest1 wifi SSID to special words and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "~!@#$%^&" --AutoGenPSK 0 --psk_value bbbbbbb4}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# command cannot modify ssid to "~!@#$%^&", so change ssid from GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< guest1 ssid to special word >" [list {$set_key=bbbbbbb4}]
   
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17365 Modify Controller Main & Guest-1 SSID/WifiKey when all of Extender is shutdown(Off-line) >
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}
# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# ################################## Modify GW wifi/Guest1 wifi and check extender RP #############################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# Power off Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power Off >"

# Modify GW Main wifi and enable/Modify GW Guest1 wifi SSID and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 1 --SSID "Contro llertest" --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value aaaaaaaa}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "guest llertest" --wlEnable 1 --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value bbbbbbbb}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}

::CONSOLE::Wait {10}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertest} {set_key=aaaaaaaa}]
::CONSOLE::Wait {30}
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
::CONSOLE::Wait {60}
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
}
<TCL_Block_End>



# Power on Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {60}
 
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"


::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Check Extender-RP_1 Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} else {
# EU Generic guest1 on/off no autoconfig
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17366 Modify Controller Main SSID only(On-line) >
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}
# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}
 
# ##################################################### Modify GW Main wifi SSID ##############################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Main wifi  SSID
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertestonly} "set_key=$Pre_shared_key$"]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertestonly\"} "set_key=$Pre_shared_key$"]
}
<TCL_Block_End> 

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17367 Modify Controller Main WifiKey only(On-line) >
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}


# ############################################ Modify GW Main wifi preshared key #############################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5} 
# Modify GW Main wifi preshared key 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=$Wireless_ssid$" "set_key=onlypwds"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17368 Modify Controller 24G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
############################################# Modify GW Guest-2 wifi and check extender config ###################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test} {$set_key=cccccccc}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test\"} {$set_key=cccccccc}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=Guest2 Test2} {$set_key=ccccccc2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"Guest2 Test2\"} {$set_key=ccccccc2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test3} {$set_key=ccccccc3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test3\"} {$set_key=ccccccc3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17369 Modify Controller 24G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

############################################# Modify GW Guest3 wifi and check extender config ###################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test} {$set_key=eeeeeeee}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test\"} {$set_key=eeeeeeee}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=1} {$set_ssid=Guest3 Test2} {$set_key=eeeeeee2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"Guest3 Test2\"} {$set_key=eeeeeee2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test3} {$set_key=eeeeeee3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test3\"} {$set_key=eeeeeee3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17371 Modify Controller 5G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# ################################## Modify GW 5G Guest-2 wifi and check extender config ###################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW 5G Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test} {$set_key=dddddddd}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test\"} {$set_key=dddddddd}]
}
<TCL_Block_End>
::CONSOLE::Wait {30}

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=5Guest2 Test2} {$set_key=ddddddd2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"5Guest2 Test2\"} {$set_key=ddddddd2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test3} {$set_key=ddddddd3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test3\"} {$set_key=ddddddd3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
 

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox"|| "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17372 Modify Controller 5G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# Enable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"
#::CONSOLE::Wait {30}

# Region Check
<TCL_Block_Begin>
if { "$US_Generic$" == "yes" } {
::RUNNER::SkipCase {US Model not support 5G WiFi Guest3} {1}
}
<TCL_Block_End>

# ############################################ Modify GW Guest3 wifi and check extender config ###################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test\"} {$set_key=ffffffff}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"5Guest3 Test2\"} {$set_key=fffffff2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test3\"} {$set_key=fffffff3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable AP_1 LAN Port via switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Disable >"

-CaseEnd-

%ENV-BAT%
+CaseStart+
<=========Topology-8: 3 extender(RP1_RP2_RP3) Onboarding========>
::CONSOLE::Local
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17429 Modify Controller Main SSID/WifiKey when all of Extender is connect(On-line)(Repeat 5 times) >

######################### Moddify GW wifi and check extender AP config 5 times #########################

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>
 
<TCL_Block_Begin>
for {set i 1} {$i < 6} {incr i 1} {  

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

::MISC::ACTS_Dummy_Response {PASS} {Modify GW main wifi SSID and Presharedkey}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW wireless SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=Test$i" "set_key=aaaaaaa$i"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
# Check Extender-RP_1/2/3 SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]


if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
}
}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17430 Modify Controller Guest-1 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

######################### Modify GW Guest-1 wifi and check extender AP config 3 times #########################

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Modify GW Guest1 wifi SSID and PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Modify GW guest1 wifi SSID and Presharedkey}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test} {$set_key=bbbbbbbb}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test\"} {$set_key=bbbbbbbb}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {40}
}
<TCL_Block_End>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

# Check Extender-RP_1/2/3 Guest1 wifi SSID and PreSharedKey

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
	}
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=Guest Test2} {$set_key=bbbbbbb2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Check Extender-RP Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
	}
} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to enable 5G guest1 wifi
<TCL_Block_Begin>
#if { "$PROJECT$" == "Generic" && "$US_Generic$" == "no" } {
if { "$PROJECT$" == "Generic" || "$PROJECT$" == "A1" || "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
	}
} elseif { "$US_Generic$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test3} {$set_key=bbbbbbb3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
	}
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to disable 5G guest1 wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
	}
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Guest1 wifi SSID to special words and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "~!@#$%^&" --AutoGenPSK 0 --psk_value bbbbbbb4}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}

# command cannot modify ssid to "~!@#$%^&", so change ssid from GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< guest1 ssid to special word >" [list {$set_key=bbbbbbb4}]
   
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
	}
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
} else {
# EU Generic guest1 on/off no autoconfig

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17431 Modify Controller Main & Guest-1 SSID/WifiKey when all of Extender is shutdown(Off-line) >

################################### Modify GW wifi/Guest1 wifi and check extender RP #############################################
# GF Project to Configure device's ACS URL by console

#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Power off Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power Off >"
}
<TCL_Block_End>
# Modify GW Main wifi and enable/Modify GW Guest1 wifi SSID and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 1 --SSID "Contro llertest" --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value aaaaaaaa}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "guest llertest" --wlEnable 1 --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value bbbbbbbb}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}


::CONSOLE::Wait {10}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertest} {set_key=aaaaaaaa}]
::CONSOLE::Wait {30}
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
::CONSOLE::Wait {60}
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
}
<TCL_Block_End>



# Power on Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
}
<TCL_Block_End>
::CONSOLE::Wait {30}
 
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"


::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Check Extender-RP_1 Guest1 wifi SSID and PreSharedKey

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} else {
# EU Generic guest1 on/off no autoconfig

	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
	}
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17432 Modify Controller Main SSID only(On-line) >
 
###################################################### Modify GW Main wifi SSID ##############################################
# GF Project to Configure device's ACS URL by console

#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Main wifi  SSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertestonly} "set_key=$Pre_shared_key$"]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertestonly\"} "set_key=$Pre_shared_key$"]
}
<TCL_Block_End> 

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17433 Modify Controller Main WifiKey only(On-line) >
# ############################################ Modify GW Main wifi preshared key #############################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5} 
# Modify GW Main wifi preshared key 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=$Wireless_ssid$" "set_key=onlypwds"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17434 Modify Controller 24G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
############################################# Modify GW Guest-2 wifi and check extender config ###################################

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Modify GW Guest2 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test} {$set_key=cccccccc}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test\"} {$set_key=cccccccc}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}


if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=Guest2 Test2} {$set_key=ccccccc2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"Guest2 Test2\"} {$set_key=ccccccc2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
	}
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test3} {$set_key=ccccccc3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test3\"} {$set_key=ccccccc3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17435 Modify Controller 24G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

############################################# Modify GW Guest3 wifi and check extender config ###################################

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test} {$set_key=eeeeeeee}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test\"} {$set_key=eeeeeeee}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}


if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=1} {$set_ssid=Guest3 Test2} {$set_key=eeeeeee2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"Guest3 Test2\"} {$set_key=eeeeeee2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
	}
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test3} {$set_key=eeeeeee3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test3\"} {$set_key=eeeeeee3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17437 Modify Controller 5G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}


################################### Modify GW 5G Guest-2 wifi and check extender config ###################################

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW 5G Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test} {$set_key=dddddddd}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test\"} {$set_key=dddddddd}]
}
<TCL_Block_End>
::CONSOLE::Wait {30}

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
} 

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=5Guest2 Test2} {$set_key=ddddddd2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"5Guest2 Test2\"} {$set_key=ddddddd2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]

	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
	}
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test3} {$set_key=ddddddd3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test3\"} {$set_key=ddddddd3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}


<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
	}	
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17438 Modify Controller 5G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}

# Region Check
::RUNNER::SkipCase {US Model not support 5G WiFi Guest3} {"$US_Generic$" == "yes" }


# ############################################ Modify GW Guest3 wifi and check extender config ###################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test\"} {$set_key=ffffffff}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}


# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
	::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

 
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]

	if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"5Guest3 Test2\"} {$set_key=fffffff2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
	::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
	if { "$sysName$" == "VMG8623-T50B" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
	}
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test3\"} {$set_key=fffffff3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}
 
<TCL_Block_Begin>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "VMG8623-T50B_Generic" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
	if { "$sysName$" == "VMG8623-T50B" } {
		::CONSOLE::Wait {1}
	} else {
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
		::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
	}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-

###############################################################################################################################################################################################################################################
%ENV-BAT%
+CaseStart+
<=========Topology-9: 2 extender(RP1_RP2)/1 extender(RP3) Onboarding========>
::CONSOLE::Local
# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}


# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================

# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
<TCL_Block_End> 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>
::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>
 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=9}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17440 Modify Controller Main SSID/WifiKey when all of Extender is connect(On-line)(Repeat 5 times) >

######################### Moddify GW wifi and check extender AP config 5 times #########################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>
 
<TCL_Block_Begin>
for {set i 1} {$i < 6} {incr i 1} {  

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

::MISC::ACTS_Dummy_Response {PASS} {Modify GW main wifi SSID and Presharedkey}
# Modify GW wireless SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=Test$i" "set_key=aaaaaaa$i"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_1/2/3 SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list "check_ssid=Test$i" "check_key=aaaaaaa$i"]
}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17441 Modify Controller Guest-1 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

######################### Modify GW Guest-1 wifi and check extender AP config 3 times #########################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Guest1 wifi SSID and PreSharedKey
::MISC::ACTS_Dummy_Response {PASS} {Modify GW guest1 wifi SSID and Presharedkey}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test} {$set_key=bbbbbbbb}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test\"} {$set_key=bbbbbbbb}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>
# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check Extender-RP_1/2/3 Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test} {$check_key=bbbbbbbb}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=Guest Test2} {$set_key=bbbbbbb2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to enable 5G guest1 wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" || "$PROJECT$" == "A1" || "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"Guest Test2\"} {$set_key=bbbbbbb2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$US_Generic$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch active } {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test2} {$check_key=bbbbbbb2}]
}
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest1 wifi and Modify GW Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guest Test3} {$set_key=bbbbbbb3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# For EU Model need to disable 5G guest1 wifi
<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=\"Guest Test3\"} {$set_key=bbbbbbb3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest1 >" [list {$check_state=switch  } {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=Guest Test3} {$check_key=bbbbbbb3}]
}
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Guest1 wifi SSID to special words and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "~!@#$%^&" --AutoGenPSK 0 --psk_value bbbbbbb4}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}

# command cannot modify ssid to "~!@#$%^&", so change ssid from GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< guest1 ssid to special word >" [list {$set_key=bbbbbbb4}]
   
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "WAP6807_TMNL" || "$EXTENDER$" == "WAP6807_Generic" } {
::CONSOLE::Wait {30}
}
<TCL_Block_End>

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic"} {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
} elseif { "$EXTENDER$" == "WAP6807_TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=disable} {$check_ssid=~!@#%^12} {$check_key=bbbbbbb4}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17442 Modify Controller Main & Guest-1 SSID/WifiKey when all of Extender is shutdown(Off-line) >

################################### Modify GW wifi/Guest1 wifi and check extender RP #############################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}


# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}


# Power off Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power Off >"

# Modify GW Main wifi and enable/Modify GW Guest1 wifi SSID and PreSharedKey
#::CONSOLE::Local 
#::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPE_ROOT_NAME$} "$CPE_ROOT_PASSWORD$"
#::CONSOLE::CI_Cmd {} {zysh}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 1 --SSID "Contro llertest" --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value aaaaaaaa}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {\n}
#::CONSOLE::CI_Cmd {} {cfg wlan edit --Band 2.4GHz --MainSSID 0 --GuestSSID 1 --SSID "guest llertest" --wlEnable 1 --securityLevel MoreSecure --wpaMode wpa2psk --encryp aes --AutoGenPSK 0 --psk_value bbbbbbbb}
#::CONSOLE::Wait {20}
#::CONSOLE::CI_Cmd {} {exit}
#::CONSOLE::Wait {2} 
#::CONSOLE::CI_Cmd {} {exit}

::CONSOLE::Wait {10}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertest} {set_key=aaaaaaaa}]
::CONSOLE::Wait {30}
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=guest llertest} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {30}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertest\"} {set_key=aaaaaaaa}]
::CONSOLE::Wait {60}
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=\"guest llertest\"} {$set_key=bbbbbbbb}]
::CONSOLE::Wait {60}
}
<TCL_Block_End>



# Power on Extender-RP_1, RP_2, RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {60}
 
# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"


::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Check Extender-RP_1 Guest1 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch  } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$US_Generic$" == "yes" || "$PROJECT$" == "TMNL" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Enable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=switch active } {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]

} else {
# EU Generic guest1 on/off no autoconfig
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertest} {check_key=aaaaaaaa}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest1 >" [list {$check_state=Disable} {$check_ssid=guest llertest} {$check_key=bbbbbbbb}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17443 Modify Controller Main SSID only(On-line) >
 
###################################################### Modify GW Main wifi SSID ##############################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Main wifi  SSID
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=Contro llertestonly} "set_key=$Pre_shared_key$"]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list {set_ssid=\"Contro llertestonly\"} "set_key=$Pre_shared_key$"]
}
<TCL_Block_End> 

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=Contro llertestonly} {check_key=$Pre_shared_key$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17444 Modify Controller Main WifiKey only(On-line) >
############################################# Modify GW Main wifi preshared key #############################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
 
# Modify GW Main wifi preshared key 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=$Wireless_ssid$" "set_key=onlypwds"]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


# Check RP1/RP2/RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=onlypwds}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17445 Modify Controller 24G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >
############################################# Modify GW Guest-2 wifi and check extender config ###################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test} {$set_key=cccccccc}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test\"} {$set_key=cccccccc}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test} {$check_key=cccccccc}]
}
<TCL_Block_End>


::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Enable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=Guest2 Test2} {$set_key=ccccccc2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"Guest2 Test2\"} {$set_key=ccccccc2}]
}
<TCL_Block_End>

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch active } {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=Enable} {$check_ssid=Guest2 Test2} {$check_key=ccccccc2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable GW Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=Guest2 Test3} {$set_key=ccccccc3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"Guest2 Test3\"} {$set_key=ccccccc3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=switch  } {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest2 >" [list {$check_state=disable} {$check_ssid=Guest2 Test3} {$check_key=ccccccc3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17446 Modify Controller 24G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

############################################# Modify GW Guest3 wifi and check extender config ###################################

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test} {$set_key=eeeeeeee}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test\"} {$set_key=eeeeeeee}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test} {$check_key=eeeeeeee}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=1} {$set_ssid=Guest3 Test2} {$set_key=eeeeeee2}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"Guest3 Test2\"} {$set_key=eeeeeee2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch active } {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=Enable} {$check_ssid=Guest3 Test2} {$check_key=eeeeeee2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=0} {$set_ssid=Guest3 Test3} {$set_key=eeeeeee3}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"Guest3 Test3\"} {$set_key=eeeeeee3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=switch  } {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 guest3 >" [list {$check_state=disable} {$check_ssid=Guest3 Test3} {$check_key=eeeeeee3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17448 Modify Controller 5G Guest-2 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Model Check
::RUNNER::SkipCase {DUT not support WIFI Guest2/Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}

################################### Modify GW 5G Guest-2 wifi and check extender config ###################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
# Modify GW 5G Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test} {$set_key=dddddddd}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test\"} {$set_key=dddddddd}]
}
<TCL_Block_End>
::CONSOLE::Wait {30}

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test} {$check_key=dddddddd}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=5Guest2 Test2} {$set_key=ddddddd2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=\"5Guest2 Test2\"} {$set_key=ddddddd2}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]


<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch active } {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
} else { 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=Enable} {$check_ssid=5Guest2 Test2} {$check_key=ddddddd2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW 5G Guest2 wifi and Modify GW Guest2 wifi SSID and PreSharedKey
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=0} {$set_ssid=5Guest2 Test3} {$set_key=ddddddd3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=\"5Guest2 Test3\"} {$set_key=ddddddd3}]
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=switch  } {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest2 >" [list {$check_state=disable} {$check_ssid=5Guest2 Test3} {$check_key=ddddddd3}]
}
<TCL_Block_End>
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17449 Modify Controller 5G Guest-3 WiFi on/off/SSID/WifiKey when all of Extender is connect(On-line) >

# Model. Check
::RUNNER::SkipCase {VMG8623-T50B only support one extender} {"$sysName$" == "VMG8623-T50B"}

# Model Check 
# Region Check
::RUNNER::SkipCase {DUT not support WIFI Guest3} {"$PROJECT$" == "TMNL" || "$PROJECT$" == "A1" || "$US_Generic$" == "yes"}

# Env. Check
::RUNNER::SkipCase {Need attenuator module} {"$Shielding_box$" == "no"}


############################################# Modify GW Guest3 wifi and check extender config ###################################
# GF Project to Configure device's ACS URL by console
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
#}
#<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test\"} {$set_key=ffffffff}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test} {$check_key=ffffffff}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Enable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=\"5Guest3 Test2\"} {$set_key=fffffff2}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
} elseif { "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch active } {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=Enable} {$check_ssid=5Guest3 Test2} {$check_key=fffffff2}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# Disable GW Guest3 wifi and Modify GW Guest3 wifi SSID and PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=0} {$set_ssid=\"5Guest3 Test3\"} {$set_key=fffffff3}]

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Get RPs IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
 
<TCL_Block_Begin>
if { "$EXTENDER$" == "WX3401-B0_Generic" || "$EXTENDER$" == "WX3100-T0_Generic" || "$EXTENDER$" == "WX3100-T0_A1" || "$EXTENDER$" == "WX3401-B0_Altibox" || "$EXTENDER$" == "WX5600-T0_Generic" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=switch  } {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 5guest3 >" [list {$check_state=disable} {$check_ssid=5Guest3 Test3} {$check_key=fffffff3}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
-CaseEnd-



%ENV-BAT%
+CaseStart+
<=======Other Expection cases=======>
::CONSOLE::Local
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17451 Modify Controller SSID & PreSharedKey to special character format >
# Only Power on GW
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {40}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#===============Modify ssid and presharedkey to ~!@#$%^&================================================= 
# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>

# command cannot modify ssid to "~!@#$%^&", so change ssid from GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< wifi set to special word >"

# Check RP1 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Ping Check >"
::CONSOLE::Wait {60}


# Check Extender-RP_1 SSID and PreSharedKey
#<TCL_Block_Begin>
#if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=~!@#%^12} {check_key=~!@#%^12}]
#} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=~!@#%^12} {check_key=~!@#%^12}]
#}
#<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17472 Default setting check >

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"


<TCL_Block_Begin>
# Altibox WAN/TR69/wireless/mesh setting
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< TR069 AnyWAN Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}

# GF Project to Configure device's ACS URL by console
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>

# Check mesh/onessid default setting should be enable


<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# check setting from tr069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.X_ZYXEL_OneSSID.} {Enable} {1}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::CONSOLE::Wait {3}
::USER_DEFINE::CloseTR069ACS {}
} else {

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
#<TCL_Block_Begin>
# econet controller, mesh setting is gray out
if { "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::WEB::WebDrv_Check_Text {xpath} {//label[@id="enableEasyMesh"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
} else {
::WEB::WebDrv_Check_Text {xpath} {//label[@id="enableEasyMesh"][@class="switch active "]/span} {} {20} {PASS} {full}
}
#<TCL_Block_End>
::CONSOLE::Wait {1}

::WEB::WebDrv_Click {id} {tab_Wireless_WPS_Tab} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
::WEB::WebDrv_Check_Text {xpath} {//*[@id="enableWPS"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}

#<TCL_Block_Begin>

::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
if { "$sysName$" == "EX5601-T0" } {
::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}                                       
} elseif { "$US_Generic$" == "no" } {
# for AM model, onessid no grayout
::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}                                       
} else { 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}                                                
}
#<TCL_Block_End>

#::WEB::WebDrv_Click {id} {h_menu_list} {3}
#::CONSOLE::Wait {3}
#::WEB::WebDrv_Click {linkText} {Network Setting} {20}
#::WEB::WebDrv_Click {id} {Home_Connectivity} {20}
#::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#::WEB::WebDrv_Check_Text {xpath} {//*[@id="Network_HomeConnectivity_oneConnect"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
#::CONSOLE::Wait {1}

# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>                                      
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17473 Enable/ Disable EasyMESH via GUI & TR069 >
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< TR069 AnyWAN Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
}
<TCL_Block_End>
 
# Clear CPE record at axires Server 
::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}
    
# Configure device's ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
 
#======================================ADD RP1============================================================= 
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {60}

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
	::CONSOLE::Wait {30}
}
<TCL_Block_End>
::CONSOLE::Wait {120}

 
# Login GW and check RP2 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


##########################################################################################################################################################
# Disable EasyMesh from GUI
<TCL_Block_Begin>
if { "$sysName$" == "WX3100-T0" || "$PROJECT$" == "GF" } {
::CONSOLE::Wait {2}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {20}
::WEB::WebDrv_Click {id} {enableEasyMesh} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_page_EasyMesh_applyBtn} {20}
::WEB::WebDrv_Click {id} {alertOKBtn} {20} {Don't Care}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>

# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set Periodic time >" [list {$time=30}]
}
<TCL_Block_End>

# enable easymesh from TR69
<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}             
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}             
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}           
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {60} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {5} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}           
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {60} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

 
# Check easymesh from GUI
<TCL_Block_Begin>
if { "$sysName$" == "WX3100-T0" || "$PROJECT$" == "GF" } {
::CONSOLE::Wait {2}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="enableEasyMesh"][@class="switch active "]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>

::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

 
# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set Periodic time >" [list {$time=30}]
}
<TCL_Block_End>

# disable easymesh from TR69
<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}             
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::USER_DEFINE::CloseTR069ACS {}
} else { 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}           
::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

::CONSOLE::Wait {60} 
# check easymesh from GUI
<TCL_Block_Begin>
if { "$sysName$" == "WX3100-T0" || "$PROJECT$" == "GF" } {
::CONSOLE::Wait {2}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="enableEasyMesh"][@class="switch  "]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>

# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set Periodic time >" [list {$time=30}]
}
<TCL_Block_End>

# enable easymesh from TR69
<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}                        
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}           
::USER_DEFINE::CloseTR069ACS {}           
}
<TCL_Block_End>

 
# check easymesh from GUI
<TCL_Block_Begin>
if { "$sysName$" == "WX3100-T0" || "$PROJECT$" == "GF" } {
::CONSOLE::Wait {2}
} elseif { "$sysName$" == "WX3401-B0" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="enableEasyMesh"][@class="switch active "]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>

::CONSOLE::Wait {100}

# Login GW and check RP1 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"


-CaseEnd-



%ENV-L3%
+CaseStart+
< OPAL-17474 Combination1 behavior (EasyMESH is enabled) >
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< TR069 AnyWAN Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
 
# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
<TCL_Block_End>

# check mesh default setting

<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# check setting from tr069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.X_ZYXEL_OneSSID.} {Enable} {1}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {1}
::CONSOLE::Wait {3}
::USER_DEFINE::CloseTR069ACS {}
} else {

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
 
::WEB::WebDrv_Click {id} {tab_Wireless_EasyMesh_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#<TCL_Block_Begin>
# econet controller, mesh setting is gray out
	if { "$sysName$_$PROJECT$" == "WX3100-T0" } {
		::WEB::WebDrv_Check_Text {xpath} {//label[@id="enableEasyMesh"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
	} else {
		::WEB::WebDrv_Check_Text {xpath} {//label[@id="enableEasyMesh"][@class="switch active "]/span} {} {20} {PASS} {full}
	}
#<TCL_Block_End>
::CONSOLE::Wait {1}

::WEB::WebDrv_Click {id} {tab_Wireless_WPS_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="enableWPS"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}

#<TCL_Block_Begin>
	if { "$sysName$" == "EX5601-T0" } {
		::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
		::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
		::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
		::CONSOLE::Wait {1}                                       
	} elseif { "$US_Generic$" == "no" } {
		::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
		::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
		# AM Model , onessid no grayout
		::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active"]/span} {} {20} {PASS} {full}
		::CONSOLE::Wait {1}
	} else {
	    ::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
		::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
		# EX5501_3b3 grayout.
		::WEB::WebDrv_Check_Text {xpath} {//*[@id="oneSsid_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
		::CONSOLE::Wait {1}
	}
#<TCL_Block_End>

#::WEB::WebDrv_Click {id} {h_menu_list} {3}
#::CONSOLE::Wait {3}
#::WEB::WebDrv_Click {linkText} {Network Setting} {20}
#::WEB::WebDrv_Click {id} {Home_Connectivity} {20}
#::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#::WEB::WebDrv_Check_Text {xpath} {//*[@id="Network_HomeConnectivity_oneConnect"][@class="switch active disabled"]/span} {} {20} {PASS} {full}
#::CONSOLE::Wait {1}

# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>
-CaseEnd-



%ENV-L1%
+CaseStart+
< OPAL-17477 Enable/ Disable One SSID via GUI & TR-069 >
# Only Power on GW
# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< TR069 AnyWAN Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End> 

# Configure device's ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}

# Disable EasyMesh from TR69
# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set Periodic time >" [list {$time=30}]
}
<TCL_Block_End>
 
<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}                        
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}           
::USER_DEFINE::CloseTR069ACS {}           
}
<TCL_Block_End>


# Modify 2.4G main & Guest SSID-1's SSID & PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=mainssid" "set_key=11111111"]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=Guestssid} {$set_key=22222222}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=Guestssid} {$set_key=22222222}]
}
<TCL_Block_End>
::CONSOLE::Wait {20}

# check 5G main/guest wifi setting value should be 24G setting value
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.1.} {SSID} {mainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {mainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.2.} {SSID} {Guestssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {Guestssid}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {3}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {mainssid} {20} {PASS} {full}
::WEB::WebDrv_Check_Value {xpath} {//*[@class="unmaskPassword form-control  "]} {11111111} {20} {PASS} {full}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {mainssid} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {11111111} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {cancelWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# check 5G guest wifi value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30} 
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {Guestssid} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {22222222} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
} 
<TCL_Block_End>

# disable onessid from GUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.X_ZYXEL_OneSSID.} {Enable} {0}
::CONSOLE::Wait {5} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {30}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
::WEB::WebDrv_Click {id} {oneSsid_label} {3}
::WEB::WebDrv_Click {id} {applyWifiBtn} {3}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
} 
<TCL_Block_End>

# Modify 2.4G main & Guest SSID-1's SSID & PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=changemainssid" "set_key=33333333"]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=changeGuestssid} {$set_key=44444444}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=changeGuestssid} {$set_key=44444444}]
}
<TCL_Block_End>
 ::CONSOLE::Wait {20}

# check 5G main/guest wifi setting value should be 24G setting value
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.1.} {SSID} {changemainssid}
::CONSOLE::Wait {3}
#::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {mainssid_5G}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {changemainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.2.} {SSID} {changeGuestssid}
::CONSOLE::Wait {3}
#::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {Guestssid_5G}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {changeGuestssid}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {3}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {changemainssid} {20} {PASS} {full}
::WEB::WebDrv_Check_Value {xpath} {//*[@class="unmaskPassword form-control  "]} {33333333} {20} {PASS} {full}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20} 
::CONSOLE::Wait {2}
#<TCL_Block_Begin>
	if { "$US_Generic$" == "yes" } {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {mainssid_5G} {20} {PASS} {full}
	} else {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {mainssid} {20} {PASS} {full}
	}
#<TCL_Block_End>
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {11111111} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {cancelWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# check 5G guest wifi value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30} 
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#<TCL_Block_Begin>
	if { "$US_Generic$" == "yes" } {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {Guestssid_5G} {20} {PASS} {full}
	} else {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {Guestssid} {20} {PASS} {full}
	}
#<TCL_Block_End>
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {22222222} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"
# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
} 
<TCL_Block_End>

# enable onessid from TR69
# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$_$PROJECT$" == "WX3401-B0" || "$sysName$_$PROJECT$" == "WX3100-T0" || "$sysName$_$PROJECT$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Periodic time_CLI >" [list {$time=30}]
}
<TCL_Block_End>

<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.X_ZYXEL_OneSSID.} {Enable} {1}
::CONSOLE::Wait {10} 
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.X_ZYXEL_ONESSID.} {Enable} {1}
::CONSOLE::Wait {10} 
::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

::CONSOLE::Wait {30} 

# Modify 2.4G main & Guest SSID-1's SSID & PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=change2mainssid" "set_key=55555555"]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=change2Guestssid} {$set_key=66666666}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=change2Guestssid} {$set_key=66666666}]
}
<TCL_Block_End>
::CONSOLE::Wait {20} 

# check 5G main/guest wifi setting value should be 24G setting value
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.1.} {SSID} {change2mainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {change2mainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.2.} {SSID} {change2Guestssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {change2Guestssid}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {3}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {change2mainssid} {20} {PASS} {full}
::WEB::WebDrv_Check_Value {xpath} {//*[@class="unmaskPassword form-control  "]} {55555555} {20} {PASS} {full}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {change2mainssid} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {55555555} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {cancelWifiBtn} {20}
::CONSOLE::Wait {5}

# check 5G guest wifi value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30} 
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {change2Guestssid} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {66666666} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 


# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
}
<TCL_Block_End>
# disable onessid from TR69
<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.X_ZYXEL_OneSSID.} {Enable} {0}
::CONSOLE::Wait {10} 
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.X_ZYXEL_ONESSID.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

::CONSOLE::Wait {30}

# Modify 2.4G main & Guest SSID-1's SSID & PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G wifi >" [list "set_ssid=change3mainssid" "set_key=77777777"]
::CONSOLE::Wait {20}
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=0} {$set_ssid=change3Guestssid} {$set_key=88888888}]
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=0} {$set_ssid=change3Guestssid} {$set_key=88888888}]
}
<TCL_Block_End>
 

# check 5G main/guest wifi setting value should be 24G setting value
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# Check wifi setting by TR-069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.1.} {SSID} {change3mainssid}
::CONSOLE::Wait {3}
#::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {change2mainssid_5G}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.5.} {SSID} {change3mainssid}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.2.} {SSID} {change3Guestssid}
::CONSOLE::Wait {3}
#::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {change2Guestssid_5G}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {30} {Device.WiFi.SSID.6.} {SSID} {change3Guestssid}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {3}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {change3mainssid} {20} {PASS} {full}
::WEB::WebDrv_Check_Value {xpath} {//*[@class="unmaskPassword form-control  "]} {77777777} {20} {PASS} {full}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20} 
::CONSOLE::Wait {2}
#<TCL_Block_Begin>
	if { "$US_Generic$" == "yes" } {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {change2mainssid_5G} {20} {PASS} {full}
	} else {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} {change2mainssid} {20} {PASS} {full}
	}
#<TCL_Block_End>
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_000_11general11_000_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_000_11general11_000} {55555555} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {cancelWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# check 5G guest wifi value
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30} 
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#<TCL_Block_Begin>
	if { "$US_Generic$" == "yes" } {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {change2Guestssid_5G} {20} {PASS} {full}
	} else {
		::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} {change2Guestssid} {20} {PASS} {full}
	}
#<TCL_Block_End>

::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {wifi_wpa_psk_0110moreap0110_maskCheck} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Value {id} {wifi_wpa_psk_0110moreap0110} {66666666} {20} {PASS} {full}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"
} 
<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17478 Check GUI layout when enable/ disable One SSID >

# Project Check
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
     ::RUNNER::SkipCase {Google Fiber GUI can not check} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< TR069 AnyWAN Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#Configure device's ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
 
# Disable EasyMesh from TR69
# set periodicinterval to 30 for kit model
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" || "$sysName$" == "WAP6807" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set Periodic time >" [list {$time=30}]
} 
<TCL_Block_End>


<TCL_Block_Begin>
if { "$Data_Model$" == "TR181" } {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {Device.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}                        
::USER_DEFINE::CloseTR069ACS {}
} else {
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}
::CONSOLE::Wait {10}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {40} {InternetGatewayDevice.X_ZYXEL_EXT.EasyMesh.} {Enable} {0}           
::USER_DEFINE::CloseTR069ACS {}           
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# check Multicast Forwarding: Will be auto Enable (Gray out)
#::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
#::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {40}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifil_multicast_fwd_000_11general11_000_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
                                                                                                   
# check 2.4G Guest SSID-1 page:SSID Subnet: Disable (Gray out)
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wlSubnet_stateEnable"][@class="switch  disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
}
<TCL_Block_End>
# check 5G main SSID page:
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} "$Wireless_ssid$" {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifi_hide_ssid_000_11general11_000_label"][@class="custom-control custom-checkbox  disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifil_multicast_fwd_000_11general11_000_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifi_wpa_autogen_psk_000_11general11_000_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}

# check 5G Guest SSID-1 page:SSID Subnet: Disable (Gray out)
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::CONSOLE::Wait {3}
<TCL_Block_Begin>
#if { "$Econet_Platform$" == "yes" } {
if { "$US_Generic$" == "yes" } {
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} "$Wireless_ssid$_guest" {20} {PASS} {full}
} else {
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} "$Wireless_ssid$_guest1" {20} {PASS} {full}
}
<TCL_Block_End>
::CONSOLE::Wait {2}
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wlSubnet_stateEnable"][@class="switch  disabled"]/span} {} {20} {PASS} {full}
}
<TCL_Block_End>
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wlEnableGuest_0110moreap0110_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifi_wpa_autogen_psk_0110moreap0110_label"][@class="custom-control custom-checkbox active disabled"]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# disable onessid in 2.4 main page:
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {0} {20}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {id} {oneSsid_label} {20} 
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {applyWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"

# modify 2.4G main wifi setting
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Login Supervisor >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >" 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Wireless Webpage >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

::WEB::WebDrv_Set_Value {id} {wifi_ssid_000_11general11_000} {testssid} {20}
::CONSOLE::Wait {1}
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Set_Value {id} {gl_maxUpRate_000_11general11_000} {100} {20}
::WEB::WebDrv_Set_Value {id} {gl_maxDownRate_000_11general11_000} {500} {20}
}
<TCL_Block_End>
::WEB::WebDrv_Click {id} {wifi_wpa_autogen_psk_000_11general11_000_label} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Set_Value {id} {wifi_wpa_psk_000_11general11_000} {abcd1234} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {applyWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# modify 2.4g guest1 wifi
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {wifi_ssid_0110moreap0110} {guestssid} {20}
::CONSOLE::Wait {1}
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Set_Value {id} {gl_maxUpRate_0110moreap0110} {200} {20}
::WEB::WebDrv_Set_Value {id} {gl_maxDownRate_0110moreap0110} {600} {20}
}
<TCL_Block_End>
::WEB::WebDrv_Click {id} {wifi_wpa_autogen_psk_0110moreap0110_label} {3}
::CONSOLE::Wait {1}
::WEB::WebDrv_Set_Value {id} {wifi_wpa_psk_0110moreap0110} {aaaa9999} {20}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_ApplyBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"


# check 5G setting, can not same as 2.4G setting value
::WEB::WebDrv_Click {id} {tab_Wireless_General_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
#::WEB::WebDrv_List_Select {id} {wifi_radio_general} {option_value} {4} {20}
::WEB::WebDrv_List_Select {id} {wifi_radio_general} {text} {5GHz} {20}
::CONSOLE::Wait {2}
<TCL_Block_Begin>
#if { "$Econet_Platform$" == "yes" } {
if { "$US_Generic$" == "yes" } {
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} "$Wireless_ssid$_5G" {20} {PASS} {full}
} else {
::WEB::WebDrv_Check_Value {id} {wifi_ssid_000_11general11_000} "$Wireless_ssid$" {20} {PASS} {full}
}
<TCL_Block_End> 

::CONSOLE::Wait {1}
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Check_Value {id} {gl_maxUpRate_000_11general11_000} {100} {20} {FAIL} {full}
::WEB::WebDrv_Check_Value {id} {gl_maxDownRate_000_11general11_000} {500} {20} {FAIL} {full}
}
<TCL_Block_End> 
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifi_wpa_autogen_psk_000_11general11_000_label"][@class="custom-control custom-checkbox active "]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {cancelWifiBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"

# check 5g guest1 wifi setting
::WEB::WebDrv_Click {id} {tab_Wireless_Guest_Tab} {20}
::WEB::WebDrv_Wait_VMG_Loading {xpath} {//div[@class="loader-spinner"]} {30}
::WEB::WebDrv_Click {id} {Network_Wireless_Guest_Edit1} {20}
::CONSOLE::Wait {3}
<TCL_Block_Begin>
#if { "$Econet_Platform$" == "yes" } {
if { "$US_Generic$" == "yes" } {
#::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} "$Wireless_ssid$_guest1_5G" {20} {PASS} {full}
#5510(ABQX.5)b2 change 5g guest ssid
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} "$Wireless_ssid$_guest_5G" {20} {PASS} {full}
} else {
::WEB::WebDrv_Check_Value {id} {wifi_ssid_0110moreap0110} "$Wireless_ssid$_guest1" {20} {PASS} {full}
}
<TCL_Block_End>

::CONSOLE::Wait {2}

<TCL_Block_Begin>
if { "$PROJECT$" == "Generic" } {
# 5501_3b3_guest1 no this option, guest2 access_scenario is 0
::CONSOLE::Wait {1}
} else {
# 5510_(ABQX.5)b2 change to 1
::WEB::WebDrv_Check_Value {id} {Network_Wireless_APEdit_access_scenario} {1} {20} {PASS} {full}
#::WEB::WebDrv_Check_Value {id} {Network_Wireless_APEdit_access_scenario} {0} {20} {PASS} {full}
}
<TCL_Block_End>
::CONSOLE::Wait {2}
<TCL_Block_Begin>
if { "$sysName$" == "WX3401-B0" || "$sysName$" == "WX3100-T0" } {
::CONSOLE::Wait {1}
} else {
::WEB::WebDrv_Check_Value {id} {gl_maxUpRate_0110moreap0110} {200} {20} {FAIL} {full}
::WEB::WebDrv_Check_Value {id} {gl_maxDownRate_0110moreap0110} {600} {20} {FAIL} {full}
}
<TCL_Block_End> 
::CONSOLE::Wait {1}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="wifi_wpa_autogen_psk_0110moreap0110_label"][@class="custom-control custom-checkbox active "]/span} {} {20} {PASS} {full}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Network_Wireless_APEdit_CancelBtn} {20}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Response Time >"


# Logout GUI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Web Logout >"

-CaseEnd-


 
 
 
#%ENV-L3%
#+CaseStart+
#< OPAL-17480 Modify 5G Main or Guest-1 SSID & PreSharedKey via TR-069 when One SSID is "Enable" >

# Reset GW to factory default
#::MISC::Include {$Tool File Path$/Include/Reset_to_Default.dlf}
 
# Clear CPE record at axires Server 
#::USER_DEFINE::TR069ClearCPEsInACS
    
# Configure device's ACS-URL by Console
#::MISC::Include {$Tool File Path$/Include/SetTR-069byConsole.dlf}

#<TCL_Block_Begin> 
#::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
#set ::OneSSID ""
#if { "$Data_Model$" == "TR181" } {
#::USER_DEFINE::TR069Get_and_Check_DataModel {$CPEID$} {5} {Don't Care} {Device.WiFi.X_ZYXEL_OneSSID.Enable} {} {::OneSSID}
#} else {
#::USER_DEFINE::TR069Get_and_Check_DataModel {$CPEID$} {5} {Don't Care} {InternetGatewayDevice.X_ZYXEL_EXT.X_ZYXEL_ONESSID.Enable} {} {::OneSSID}
#}
#::CONSOLE::Wait {1}

#if { $::OneSSID == 1 && "$Data_Model$" == "TR181"  } {

#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.} {SSID.5.SSID} {Test_General2}
#::CONSOLE::Wait {5}
#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.AccessPoint.5.Security.} {X_ZYXEL_AutoGenPSK} {0} {KeyPassphrase} {abcd1234}
#::CONSOLE::Wait {20}
     
#} elseif { $::OneSSID == 1 && "$Data_Model$" == "TR098"  } {

#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.5.} {SSID} {Test_General2}
#::CONSOLE::Wait {2}
#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.5.PreSharedKey.1.} {X_ZYXEL_AutoGenPSK} {0} {KeyPassphrase} {abcd1234}
#::CONSOLE::Wait {15}

#}

#::USER_DEFINE::CloseTR069ACS {}
#<TCL_Block_End> 

# # Check CPE returns fault code
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value}
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
# ::USER_DEFINE::CloseTR069ACS {} 
#-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-19030_1 Controller enable/disable 5G main WiFi (5 times) >

# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {30}

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"

::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3

if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}

::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topolocy Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=9}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
}
<TCL_Block_End>
############################################# controller switch off/on 5G wifi via CLI ###################################
<TCL_Block_Begin>
for {set i 1} {$i < 6} {incr i} {
# GF Project to Configure device's ACS URL by console
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}

# Via CLI to disable then enable 5G main WiFi
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Switch 5G wifi >"

::CONSOLE::Wait {90}

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
::CONSOLE::Wait {20}

# Get RP1/2/3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}

# Login GW and check RP1/2/3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
if { "$sysName$" == "VMG8623-T50B" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
}
::MISC::ACTS_Dummy_Response {PASS} "Round $i"
<TCL_Block_End>

-CaseEnd-


%ENV-BAT%
+CaseStart+
<=========== Multiple MDID (Topology-2 on boarding) ============>
::CONSOLE::Local
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

# Power off AP1, AP2, AP3
# Power on RP1, power off RP2 and RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {120}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>


# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}

::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>


::CONSOLE::Wait {120}
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
 


#=================================Add AP1==============================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {

# Power on AP1
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Power On >"
::CONSOLE::Wait {110}

# Enable AP_1 LAN Port via switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 LAN Enable >"

# Reset Extender-AP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

::CONSOLE::Wait {120}


if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Enable 5G >"
}



if { "$PROJECT$" == "Altibox" } {
# Configure AP1 ACS-URL by Console
::CONSOLE::Wait {10}
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT04_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >"  [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=AP1}]
}

::CONSOLE::Wait {40}


# Login GW and check AP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check AP1 Backhaul >"

# Get AP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get AP1 IP >" [list {$console_name=$EXTENDER_USERNAME04$} {$console_pwd=$EXTENDER_PASSWORD04$}]

# admin login AP1 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP1 Login >"
}

# Check Extender-AP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check AP1 wifi >" [list {$ssid=$Wireless_ssid$} {$key=$Pre_shared_key$}]

#=================================Add RP3==============================================

# Power on RP1 and RP2, RP3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}


if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3

if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< AP DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}

::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {40}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topology Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=2}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}
}
<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17548 Controller-5G Main >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Get 5G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 5G Main BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::5G_main_BSSID"

# Check Controller-5G Main wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::5G_main_BSSID\]: MDID 0000" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}


-CaseEnd-									

%ENV-L1%
+CaseStart+
< OPAL-17549 Controller-5G Guest-1 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 5G Guest1
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=6} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest1_5g} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest1_5g} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {40}

# Get 5G Guest-1 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 5G Guest1 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::5G_guest1_BSSID"

# Check Controller-5G Guest-1 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::5G_guest1_BSSID\]: MDID 1111" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17550 Controller-5G Guest-2 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 5G Guest2
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=7} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest2_5g} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest2_5g} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {40}

# Get 5G Guest2 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 5G Guest2 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::5G_guest2_BSSID"

# Check Controller-5G Guest2 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::5G_guest2_BSSID\]: MDID 2222" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-

%ENV-L3%
+CaseStart+
< OPAL-17551 Controller-5G Guest-3 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 5G Guest3
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=8} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest3_5g} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest3_5g} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {60}

# Get 5G Guest3 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 5G Guest3 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::5G_guest3_BSSID"

# Check Controller-5G Guest3 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::5G_guest3_BSSID\]: MDID 3333" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-


%ENV-L1%
+CaseStart+
< OPAL-17552 Controller-24G Main >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# Get 24G Main BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 24G Main BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::24G_main_BSSID"

# Check Controller-24G Main wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::24G_main_BSSID\]: MDID 0000" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-

%ENV-L1%
+CaseStart+
< OPAL-17553 Controller-24G Guest-1 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 24G Guest1
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest1} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=1} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest1} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {90}

# Get 24G Guest-1 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 24G Guest1 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::24G_guest1_BSSID"

# Check Controller-24G Guest-1 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::24G_guest1_BSSID\]: MDID 1111" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-


%ENV-L3%
+CaseStart+
< OPAL-17554 Controller-24G Guest-2 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 24G Guest2
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest2} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=2} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest2} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {90}

# Get 24G Guest2 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 24G Guest2 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::24G_guest2_BSSID"

# Check Controller-24G Guest2 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::24G_guest2_BSSID\]: MDID 2222" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-

%ENV-L3%
+CaseStart+
< OPAL-17555 Controller-24G Guest-3 >
# Model check
<TCL_Block_Begin>
if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
}
<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
# enable 24G Guest3
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
# TR069 wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=4} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest3} {$set_key=12345678}]
} else {
# GUI wifi index
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 24G guest wifi >" [list {$set_guest=3} {$set_state=1} {$set_ssid=$Wireless_ssid$_guest3} {$set_key=12345678}]
}
<TCL_Block_End>
::CONSOLE::Wait {90}

# Get 24G Guest3 BSSID
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get 24G Guest3 BSSID >"
::MISC::ACTS_Dummy_Response {PASS} "$::24G_guest3_BSSID"

# Check Controller-24G Guest3 wifi MDID value
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::CI_Cmd_Scan {} {zyslctl -a} {20} "\[$::24G_guest3_BSSID\]: MDID 3333" {}
::CONSOLE::CI_Cmd {} {\n}
::CONSOLE::Wait {1}
::CONSOLE::CI_Cmd {} {exit}
-CaseEnd-

#%ENV-L1%
#+CaseStart+
#< OPAL-17556 Extender-5G Main >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-

#%ENV-L1%
#+CaseStart+
#< OPAL-17557 Extender-5G Guest-1 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-


#%ENV-L3%
#+CaseStart+
#< OPAL-17558 Extender-5G Guest-2 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-

#%ENV-L3%
#+CaseStart+
#< OPAL-17559 Extender-5G Guest-3 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-


#%ENV-L1%
#+CaseStart+
#< OPAL-17560 Extender-24G Main >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-

#%ENV-L1%
#+CaseStart+
#< OPAL-17561 Extender-24G Guest-1 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-


#%ENV-L3%
#+CaseStart+
#< OPAL-17562 Extender-24G Guest-2 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-

#%ENV-L3%
#+CaseStart+
#< OPAL-17563 Extender-24G Guest-3 >
# Model check
#<TCL_Block_Begin>
#if { "$sysName$" == "VMG8825-T50K" || "$sysName$" == "WAP6807" } {
#::RUNNER::SkipCase {Econet/MTK SDK not support MDID feature} {1}
#}
#<TCL_Block_End>
#-CaseEnd-




%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] Controller disable/enable 5G main WiFi_Extender on boarding>
::CONSOLE::Wait {1}
# Stress check
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Daisy attenuator value >"
}
<TCL_Block_End>


# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>
::CONSOLE::Wait {30}

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button or Trigger RP1 WPS to connect RP3

if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 DOWNLINK WPS >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}

::CONSOLE::Wait {5}

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Daisy Topolocy Check
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Topology Check >" [list {$topology=9}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Controller_Console_login >"
::CONSOLE::CI_Cmd_More {} {zyslctl -a} {5} {exit} {5} 
::CONSOLE::Wait {5}

# GF Project to Configure device's ACS URL by console

if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
}
<TCL_Block_End>
-CaseEnd-

############################################# controller switch off/on 5G wifi via CLI ###################################

%ENV-L3%
+CaseStart+
< [MeshStress] Controller disable/enable 5G main WiFi >< Repeat #100 >
::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>

#for {set i 1} {$i < 2} {incr i} {

# Via CLI to disable then enable 5G main WiFi
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Switch 5G wifi >"

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
::CONSOLE::Wait {10}


# Login GW and check RP1/2/3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Get RP1/2/3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}
<TCL_Block_End>

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
-CaseEnd-

%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-19030_2 Controller disable/enable 5G main WiFi (100 times) >
[OPAL-19030_2] Controller disable/enable 5G main WiFi (100 times)
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
# Env. Check
<TCL_Block_Begin>
if { "$Shielding_box$" == "no" } {
::RUNNER::SkipCase {Need attenuator module} {1}
}
<TCL_Block_End>
::TESTLINK::Loop_Case_Summary {Controller disable/enable 5G main WiFi}
-CaseEnd-


%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] [ACTS][GUI] Reboot GW via GUI then check extender can connect back GW WiFi_Backhaul_Extender on boarding >
::CONSOLE::Wait {1}
# Stress check
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}

# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
}
}
<TCL_Block_End>
-CaseEnd-

############################################# Reboot GW via GUI #######################################################

%ENV-L3%
+CaseStart+
< [MeshStress] [ACTS][GUI] Reboot GW via GUI then check extender can connect back GW WiFi_Backhaul >< Repeat #100 >
::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Reboot CPE by GUI
# GF Project to Configure device's ACS URL by console
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GW Reboot_TR69 >"
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GW Reboot_GUI >"
}
<TCL_Block_End>


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>

############################################# Reboot Extender via CLI #############################################

# Reboot RP1/2/3 via CLI
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Reboot_CLI >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Reboot_CLI >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Reboot_CLI >"

#::CONSOLE::Wait {200}

# Check RP1/RP2/RP3 ping internet time 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"


#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
-CaseEnd-


%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-19033 Reboot GW via GUI then check extender can connect back GW WiFi_Backhaul. (100 times) >
[OPAL-19033] Reboot GW via GUI then check extender can connect back GW WiFi_Backhaul. (100 times)
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
::TESTLINK::Loop_Case_Summary {Reboot GW via GUI then check extender can connect back GW WiFi_Backhaul}
-CaseEnd-

%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] [ACTS][GUI] Reboot Extender via GUI then check extender can connect back GW WiFi_Backhaul_Extender on boarding >

::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
-CaseEnd-

####################################################### Reboot Extender via CLI #############################################
%ENV-L3%
+CaseStart+
< [MeshStress] [ACTS][GUI] Reboot Extender via GUI then check extender can connect back GW WiFi_Backhaul >< Repeat #100 >
::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>


# Reboot RP1/2/3 via CLI
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Reboot_CLI >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Reboot_CLI >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Reboot_CLI >"
}
<TCL_Block_End>
::CONSOLE::Wait {200}

# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
############################################# Reboot GW via GUI #######################################################
# Reboot CPE by GUI
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GW Reboot_GUI >"

# Check RP1/RP2/RP3 ping internet time 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check Extender-RP2 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check Extender-RP3 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-


%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-19035 Reboot Extender via GUI then check extender can connect back GW WiFi_Backhaul. (100 times) >
[OPAL-19035] Reboot Extender via GUI then check extender can connect back GW WiFi_Backhaul. (100 times)
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
::TESTLINK::Loop_Case_Summary {Reboot Extender via GUI then check extender can connect back GW WiFi_Backhaul}
-CaseEnd-

%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] [ACTS] Reboot GW via HW button then check extender can connect back GW WiFi_Backhaul_Extender on boarding >
::CONSOLE::Wait {1}
# Stress check
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>

#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}

::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
-CaseEnd-

############################################# Reboot GW via power switch #############################################
%ENV-L3%
+CaseStart+
< [MeshStress] [ACTS] Reboot GW via HW button then check extender can connect back GW WiFi_Backhaul >< Repeat #100 >

::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off/on GW via power switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power Off >"
::CONSOLE::Wait {10}

::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
<TCL_Block_End>

# Check Extender-RP_1/2/3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>


######################### Reboot Extender via power switch #########################

# Power off/on extender via power switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power Off >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power Off >"
#::CONSOLE::Wait {5}

#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
#::CONSOLE::Wait {180}

# Login GW and check RP1/2/3 BSSID and interface
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check Extender-RP_1/2/3 WiFi 5G status, SSID, PreSharedKey
#if { "$EXTENDER_Model$" == "WAP6807" } {
#::CONSOLE::Wait {5}
#}

-CaseEnd-

%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-19132 Reboot GW via HW button then check extender can connect back GW WiFi_Backhaul. (100 times) >
[OPAL-19132] Reboot GW via HW button then check extender can connect back GW WiFi_Backhaul. (100 times)
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
::TESTLINK::Loop_Case_Summary {Reboot GW via HW button then check extender can connect back GW WiFi_Backhaul}
-CaseEnd-

%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] [ACTS] Reboot Extender via HW button then check extender can connect back GW WiFi_Backhaul_Extender on boarding >
::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off all device
::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# attenuator value
<TCL_Block_Begin>
if { "$Shielding_box$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/Attenuator.mod" "< Star attenuator value >"
}
<TCL_Block_End>

# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "GF" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::CONSOLE::Wait {30}
} elseif { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Set ETH Default Setting >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GUI Enable MPro Mesh >"
}
<TCL_Block_End>


#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}
<TCL_Block_Begin>
if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Enable 5G >"
}
<TCL_Block_End>

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
::CONSOLE::Wait {20}
if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT01_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >"  [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP1}]

}
<TCL_Block_End>
::CONSOLE::Wait {120}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
<TCL_Block_Begin>
if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
}
<TCL_Block_End>

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP2 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT02_SN$}]

::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP2}]
}
 
::CONSOLE::Wait {120}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
}


# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

if { "$PROJECT$" == "Altibox" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 24G >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Enable 5G >"
}


# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {20}

if { "$PROJECT$" == "Altibox" } {
# Configure RP1 ACS-URL by Console
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< TR069 Enable MPro Mesh >" [list {$ExtenderID=$EXT03_SN$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Extender GUI Enable MPro Mesh >" [list {$Extender_Role=RP3}]
}

::CONSOLE::Wait {120}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI

if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
}

 
# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>
-CaseEnd-
############################################# Reboot Extender via power switch #############################################

%ENV-L3%
+CaseStart+
< [MeshStress] [ACTS] Reboot Extender via HW button then check extender can connect back GW WiFi_Backhaul >< Repeat #100 >
::CONSOLE::Wait {1}
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>

# Power off/on extender via power switch
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power Off >"
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {180}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power Off >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power Off >"
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {180}
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
}
<TCL_Block_End>

# Login GW and check RP1/2/3 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"
}
<TCL_Block_End>

# Check Extender-RP_1/2/3 WiFi 5G status, SSID, PreSharedKey
#if { "$EXTENDER_Model$" == "WAP6807" } {
#::CONSOLE::Wait {5}
#}
 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
<TCL_Block_Begin>
if { "$EXTENDER$" == "VMG8623-T50B_Generic" } {
::CONSOLE::Wait {1}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
}
<TCL_Block_End>

############################################# Reboot GW via power switch #############################################

# Power off/on GW via power switch
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power Off >"
#::CONSOLE::Wait {10}

#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"


# Check RP1/RP2/RP3 ping internet time 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::CONSOLE::Wait {30}

# Login GW and check RP1/2/3 BSSID and interface
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"


# Check Extender-RP_1/2/3 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

-CaseEnd-

%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-19136 Reboot Extender via HW button then check extender can connect back GW WiFi_Backhaul. (100 times) >
[OPAL-19136] Reboot Extender via HW button then check extender can connect back GW WiFi_Backhaul. (100 times)
#<TCL_Block_Begin>
#if { "$MPro_Mesh_Stress$" == "no" } {
#::RUNNER::SkipCase {Stress not run} {1}
#}
#<TCL_Block_End>
::TESTLINK::Loop_Case_Summary {Reboot Extender via HW button then check extender can connect back GW WiFi_Backhaul}
-CaseEnd-


%ENV-BAT|L1|L2|L3%
+CaseStart+
< [MeshStress] Clean recovery after many reboots_Extender on boarding >
::CONSOLE::Wait {1}
# Project check  
<TCL_Block_Begin>
if { "$PROJECT$" != "GF" } {
::RUNNER::SkipCase {Google Fiber Test Case} {1}
}
<TCL_Block_End>

::MISC::Setup_Power_Switch {SW_1} {Off}
::MISC::Setup_Power_Switch {SW_2} {Off}
::MISC::Setup_Power_Switch {SW_3} {Off}
::MISC::Setup_Power_Switch {SW_4} {Off}
::MISC::Setup_Power_Switch {SW_5} {Off}
::MISC::Setup_Power_Switch {SW_6} {Off}
::MISC::Setup_Power_Switch {SW_7} {Off}
::MISC::Setup_Power_Switch {SW_8} {Off}
::MISC::Setup_Power_Switch {SW_9} {Off}
::MISC::Setup_Power_Switch {SW_10} {Off}
::MISC::Setup_Power_Switch {SW_11} {Off}
::MISC::Setup_Power_Switch {SW_12} {Off}
::MISC::Setup_Power_Switch {SW_13} {Off}
::MISC::Setup_Power_Switch {SW_14} {Off}
::MISC::Setup_Power_Switch {SW_15} {Off}
::MISC::Setup_Power_Switch {SW_16} {Off}
 

::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/Mesh_control}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_SW_Port} {G_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {1} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {2} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {3} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {4} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {5} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {6} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {7} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {8} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {9} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {10} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {11} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {12} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {13} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {14} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {15} {Port_conn} {0}
::USER_DEFINE::Call_Script_Module {Enable_Extender_SW} {E_SW_Port} {16} {Port_conn} {0}
# Power on Gateway
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Power On >"

# Enable Lan/Wan
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< LAN_WAN Enable >"

# Reset GW to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Gateway Reset >"


#::CONSOLE::Use_ZLD_WKS_Login {Shell_1_DMZ} {SSH} {DMZ_WKS} {root} {1234}
#::CONSOLE::Wait {5}
#::CONSOLE::CI_Cmd {} {reboot}
#::CONSOLE::Wait {10}

# Modify GW wireless channel to fix 48, only for econet platform model
<TCL_Block_Begin>
if { "$Econet_Platform$" == "yes" } {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Change 5G wifi >"  [list {$channel=48} {$ssid=$Wireless_ssid$}]
}
#elseif { "$PROJECT$" == "GF" } {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 24G >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Enable 5G >"
#}
<TCL_Block_End>

# Clear CPE record at axires Server 
::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}

# Configure device's ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< CLI Set TR069 >"
::CONSOLE::Wait {10}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {3}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.Radio.1.} {Enable} {1}
::CONSOLE::Wait {20}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.Radio.2.} {Enable} {1}
::CONSOLE::Wait {20}
#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.Radio.2.} {Channel} {149}
#::CONSOLE::Wait {20}
#::USER_DEFINE::TR069SetParameterValues {$CPEID$} {Device.WiFi.Radio.2.} {AutoChannelEnable} {0} 
#::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}
#======================================ADD RP1============================================================= 
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}


# Reset Extender-RP_1 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
::CONSOLE::Wait {30}


# Disable Option43
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Disable Option43 >"
::CONSOLE::Wait {5}

# Press GW's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
# A1 support twin pack 
::CONSOLE::Wait {5}
} else {
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"
}
<TCL_Block_End>

# Press RP's HW WPS button
<TCL_Block_Begin>
if { "$Twin_Pack$" == "yes" } {
   # A1 support twin pack 
   ::CONSOLE::Wait {5}
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
}
<TCL_Block_End>
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}
 
# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"

# Get RP1 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# admin login RP1 WebGUI
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
#::CONSOLE::Wait {1}
#} else {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Login >" [list {$console_name=} {$console_pwd=}]
#}
#<TCL_Block_End>

# Get RP1 IP address 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]

# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

#======================================ADD RP2=============================================================

# Power on Extender-RP_2
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_2 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {30}

# Disable Option43
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Disable Option43 >"
::CONSOLE::Wait {5}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP2's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"

# Get RP2 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# admin login RP2 WebGUI
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
#::CONSOLE::Wait {1}
#} else {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 Login >" [list {$console_name=} {$console_pwd=}]
#}
#<TCL_Block_End>

# Get RP2 IP address 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


#======================================ADD RP3=============================================================
# Power on Extender-RP_1, power off Extender-RP_2 and Extender-RP_3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Power On >"
::CONSOLE::Wait {110}
::CONSOLE::Wait {70}

# Reset Extender-RP_3 to factory default
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Extender Reset >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {30}

# Disable Option43
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Disable Option43 >"
::CONSOLE::Wait {5}

# Press GW's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< HW WPS >"

# Press RP3's HW WPS button
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 UPLINK WPS >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
::CONSOLE::Wait {120}
::CONSOLE::Wait {20}

# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Get RP3 IP address 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# admin login RP3 WebGUI
#<TCL_Block_Begin>
#if { "$PROJECT$" == "GF" || "$EXTENDER$" == "WX3310-B0_Generic" } {
#::CONSOLE::Wait {1}
#} else {
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 Login >" [list {$console_name=} {$console_pwd=}]
#}
#<TCL_Block_End>
 
# Get RP3 IP address 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]


######################### Reboot Controller 300 times #########################

# Configure RP1 ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set TR069 >"

# Configure RP2 ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set TR069 >"

# Configure RP3 ACS-URL by Console
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set TR069 >"

# Wi-Fi client connect Mesh network can surf internet normally.
::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/WIFI}
#::USER_DEFINE::Call_Script_Module {WIFI_Setup} {WKS} {10.150.150.183} {interface} {wlan0} {Frequency} {2.4G} {SSID} {$Wireless_ssid$} {Security} {WPA2-PSK} {Encry} {AES} {Key} {$Pre_shared_key$} {bssid} {08:26:97:67:1B:98}
::USER_DEFINE::Call_Script_Module {WIFI_Setup} {WKS} {10.150.150.183} {interface} {wlan0} {Frequency} {5G} {SSID} {$Wireless_ssid$} {Security} {WPA2-PSK} {Encry} {AES} {Key} {$Pre_shared_key$} {bssid} {}
::CONSOLE::Wait {10}
::USER_DEFINE::Call_Script_Module {WIFI_Connect} {WKS} {10.150.150.183} {interface} {wlan0}
::CONSOLE::Wait {10}

# Check Wi-Fi Client ping internet, binding on DMZ WKS 10.150.150.183
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {} {168.95.1.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# ACS sends GetRPCMethod for RP1, and check RP1 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT01_SN$} {10} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}

# ACS sends GetRPCMethod for RP1, and check RP2 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT02_SN$} {10} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}

# ACS sends GetRPCMethod for RP1, and check RP3 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT03_SN$} {10} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}
-CaseEnd-

%ENV-L3%
+CaseStart+
< [MeshStress] Clean recovery after many reboots >< Repeat #300 >
::CONSOLE::Wait {3}
 
# Project check  
<TCL_Block_Begin>
if { "$PROJECT$" != "GF" } {
::RUNNER::SkipCase {Google Fiber Test Case} {1}
}
<TCL_Block_End>
#Controler Reboot
#for {set i 1} {$i < 5} {incr i 1} {

# Reboot CPE by GUI
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< GW Reboot_GUI >"

# ACS calls Method "Reboot"
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069Reboot {$CPEID$}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {200}

# Check inform with event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT}
::CONSOLE::Wait {10}
# Check inform with event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT01_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT02_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT03_SN$} {FAIL} {1 BOOT}

# ACS sends GetRPCMethod for the CPE, and check CPE responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {20} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {10}

# Login GW and check RP1 BSSID and interface
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP1 Backhaul >"
# Login GW and check RP2 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP2 Backhaul >"
# Login GW and check RP3 BSSID and interface 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Check RP3 Backhaul >"

# Check inform with event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT01_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT02_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT03_SN$} {FAIL} {1 BOOT}
#::CONSOLE::Wait {60}

# Check Wi-Fi Client ping internet, binding on DMZ WKS 10.150.150.183
#::CONSOLE::Check_WKS_Ping {DMZ_WKS} {} {168.95.1.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}


# Check RP1/RP2/RP3 ping internet time 
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< EXTENDER Ping Check >"
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 Ping Check >"

# set periodicinterval to 30 for RP1/2/3
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP1 CLI Set Periodic time >" [list {$time=30}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP2 CLI Set Periodic time >" [list {$time=30}]
::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< RP3 CLI Set Periodic time >" [list {$time=30}]
::CONSOLE::Wait {10}

# ACS sends GetRPCMethod for RP1, and check RP1 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT01_SN$} {30} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}

# ACS sends GetRPCMethod for RP2, and check RP2 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT02_SN$} {30} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}

# ACS sends GetRPCMethod for RP3, and check RP3 responds with GetRPCMethodsResponse
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
set ::ret_value ""
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$EXT03_SN$} {30} {PASS} {GetRPCMethods} {::ret_value}
::USER_DEFINE::CloseTR069ACS {}


# Check inform with event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT01_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT02_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT03_SN$} {FAIL} {1 BOOT}


# Check Extender-RP_1 WiFi 5G status, SSID, PreSharedKey
# Get RP1 IP address 
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP1 IP >" [list {$console_name=$EXTENDER_USERNAME01$} {$console_pwd=$EXTENDER_PASSWORD01$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP1 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check Extender-RP_2 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP2 IP >" [list {$console_name=$EXTENDER_USERNAME02$} {$console_pwd=$EXTENDER_PASSWORD02$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP2 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check Extender-RP_3 WiFi 5G status, SSID, PreSharedKey
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Get RP3 IP >" [list {$console_name=$EXTENDER_USERNAME03$} {$console_pwd=$EXTENDER_PASSWORD03$}]
#::TESTLINK::Run_Module "$MOD_PATH$MESH/$EXTENDER$.mod" "< Check RP3 wifi >" [list {check_ssid=$Wireless_ssid$} {check_key=$Pre_shared_key$}]

# Check inform with event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT01_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT02_SN$} {FAIL} {1 BOOT}
::USER_DEFINE::CheckTR069DeviceEventStrings {$EXT03_SN$} {FAIL} {1 BOOT}

# Check DMZ WKS (wifi client) scan list
#::CONSOLE::Use_ZLD_WKS_Login {Shell_1_DMZ} {SSH} {DMZ_WKS} {root} {1234}
#::CONSOLE::Wait {5}
#::CONSOLE::CI_Cmd {} {iwlist wlan0 scanning}
#::CONSOLE::Wait {10}
 
# Check Wi-Fi Client ping internet, binding on DMZ WKS 10.150.150.183
<TCL_Block_Begin>
set result "PASS"
set result [::CONSOLE::Check_WKS_Ping {DMZ_WKS} {} {168.95.1.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}]
if { ($result == 1) || ($result == "FAIL") } {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1_DMZ} {SSH} {DMZ_WKS} {root} {1234}
    ::CONSOLE::Wait {5}
    ::CONSOLE::CI_Cmd {} {reboot}
    ::CONSOLE::Wait {60}

    # Wi-Fi client connect Mesh network can surf internet normally.
    ::USER_DEFINE::Setup_Module_Path {$Tool File Path$/libs/WIFI}
    #::USER_DEFINE::Call_Script_Module {WIFI_Setup} {WKS} {10.150.150.183} {interface} {wlan0} {Frequency} {2.4G} {SSID} {$Wireless_ssid$} {Security} {WPA2-PSK} {Encry} {AES} {Key} {$Pre_shared_key$} {bssid} {08:26:97:67:1B:98}
    ::USER_DEFINE::Call_Script_Module {WIFI_Setup} {WKS} {10.150.150.183} {interface} {wlan0} {Frequency} {5G} {SSID} {$Wireless_ssid$} {Security} {WPA2-PSK} {Encry} {AES} {Key} {$Pre_shared_key$} {bssid} {}
    ::CONSOLE::Wait {10}
    ::USER_DEFINE::Call_Script_Module {WIFI_Connect} {WKS} {10.150.150.183} {interface} {wlan0}
    ::CONSOLE::Wait {10}

    # Check Wi-Fi Client ping internet, binding on DMZ WKS 10.150.150.183
    ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {} {168.95.1.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
    
    ::MISC::ACTS_Dummy_Response {PASS} {Wi-Fi Client ping internet successful.}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Wi-Fi Client ping internet successful.}
}


<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< [MeshStress] OPAL-36503 Clean recovery after many reboots >
[OPAL-36503] Clean recovery after many reboots
<TCL_Block_Begin>
if { "$PROJECT$" != "GF" } {
::RUNNER::SkipCase {Google Fiber Test Case} {1}
}
<TCL_Block_End>

::TESTLINK::Loop_Case_Summary {Clean recovery after many reboots}
# ========================[Get device firmware version]======================== #
::TESTLINK::Run_Module "$MOD_PATH$MESH/$sysName$_$PROJECT$.mod" "< Get FW Version >" 
-CaseEnd-