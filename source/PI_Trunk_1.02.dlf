%ENV-BAT|L1|L2%
+CaseStart+
<< ---------------- Setting ---------------- >>

<TCL_Block_Begin>

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {opensipsctl stop} {10} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$Firmware$}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {sys atbt 1} {10} {sys atwz $DUT_LAN_MAC_UType1$ $Country_Code$} {20}
::CONSOLE::CI_Cmd_More {} {sys atbt 1} {10} {sys atsn $DUT_LAN_MAC_UType1$} {20}

# set Axiros provision
::USER_DEFINE::TR069ClearCPEsInACS

::WEB::WebDrv_OpenWebSite {http://10.150.150.196/live/CPEManager/Scenarios/InitialCPEDefaults/ZPythonScriptHTML_editForm} {A1000}
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {20}
::WEB::WebDrv_Click {name} {submit_button} {3}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {toggle_upload} {3}
::WEB::WebDrv_File_Dialog {name} {file} {D:/QTPTest/ACTS_Test/Tools/Include/TR069_default_provision.txt} {10}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {upload_button} {3}
::CONSOLE::Wait {10} 
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

if {"$PON_Switch_Type$" == "COM"} {
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
    ::CONSOLE::Wait {20}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%                                                           
+CaseStart+
<< ---------------- Security - Firewallv6 ---------------- >>

<TCL_Block_Begin>

if {[string first "Brazil" "$Key_Account$"] != -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

# Enable Telnetv6
set x [::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}]
if { "$x" != "0" } {
    ::CONSOLE::Wait {300}
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
}
set result [::CONSOLE::CI_Cmd_Scan {} {cat /etc/xinetd.d/telnet} {10} {flags =} {REUSE IPv6}]
if { "$result" == "PASS" } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS Telnetv6 enable}
} else {
    ::CONSOLE::CI_Cmd_More {} {sed -i 's/flags = REUSE/flags = REUSE IPv6/g' /etc/xinetd.d/telnet} {10} 
    ::CONSOLE::CI_Cmd_Scan {} {cat /etc/xinetd.d/telnet} {10} {flags =} {REUSE IPv6}
    ::CONSOLE::CI_Cmd {} {reboot}
    ::CONSOLE::Wait {120} 
}
::CONSOLE::Wait {3} 

set x [::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}]
if { "$x" != "0" } {
    ::CONSOLE::Wait {300}
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
}
set result [::CONSOLE::CI_Cmd_Scan {} {cat /etc/xinetd.d/telnet} {10} {flags =} {REUSE IPv6}]
if { "$result" == "PASS" } {
    ::MISC::ACTS_Dummy_Response {PASS} {WAN_WKS Telnetv6 enable}
} else {
    ::CONSOLE::CI_Cmd_More {} {sed -i 's/flags = REUSE/flags = REUSE IPv6/g' /etc/xinetd.d/telnet} {10} 
    ::CONSOLE::CI_Cmd_Scan {} {cat /etc/xinetd.d/telnet} {10} {flags =} {REUSE IPv6}
    ::CONSOLE::CI_Cmd {} {reboot}
    ::CONSOLE::Wait {120} 
}
::CONSOLE::Wait {3} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1668 Add a new service rule with Permit action and PING service >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1668," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=pingcheck} {$v6_protocol=ICMPv6} {$ICMPv6_Type=echo-request} {$action=Drop}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {FAIL} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1644 Select Packet Direction as LAN to WAN >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1644," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$dst_port_start=22} {$dst_port_end=22} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {admin} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1645 Add a new service rule, enable/disable this rule >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1645," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$dst_port_start=22} {$dst_port_end=22} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {admin} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$active=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {admin} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1647 Add a new service rule with Address Type: any IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1647," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$v6_src_ip=} {$v6_src_mask=} {$action=Drop}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$NAT_WAN_IPv6_Address$ -p 22} {root} {1234} {FAIL} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$NAT_WAN_IPv6_Address$ -p 22} {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1650 Add a new service rule with service type: TCP and set port number >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1650," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$dst_port_start=8080} {$dst_port_end=9090} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8080} {-6} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {8080} {10} {-6} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8080} {-6}

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1024} {-6} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {1024} {10} {-6} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1024} {-6}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1653 Add a new service rule with HTTP service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1653," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1655 Add a new service rule with TELNET service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1655," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS}
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1672 Modify service rule >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1672," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=SSH\[TCP/22\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 

# Modify to FTP
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

# Add Dest IP
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$v6_dst_ip=$::WKS_IPv6} {$v6_dst_mask=128}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {FAIL} {IPv6}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} {[2001:b021:2d:205::77:1]} {root} {1234} {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1673 Delete service rule >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1673," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=SSH\[TCP/22\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|SSH|br0|Protocol:TCP Dst Port:22|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|SSH|br0|Protocol:TCP Dst Port:22|Action:Drop} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1646 Add a new service rule, select Permit/Drop check firewall can allow or drop all traffic through DUT >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1646," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=FTP\[TCP/20,21\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1648 Add a new service rule with Address Type: single and set Start IP >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1648," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$v6_src_ip=$::LAN_IPv6} {$v6_src_mask=128} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|test|br0|Protocol:TCP Src v6 IP:$::LAN_IPv6 Src v6 Prefix Length:128|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_SSH_Exist {DMZ_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_SSH_Exist {DMZ_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1651 Add a new service rule with service type: UDP and set port number >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1651," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=UDP} {$dst_port_start=3030} {$dst_port_end=3030} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|test|br0|Protocol:UDP Dst Port:3030:3030|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {3030} {-6} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {3030} {10} {-u -6} {no} {Don't Care} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=udp.port==3030} {$judge=fail}]
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {3030} {-6}

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {2024} {-6} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {2024} {10} {-u -6} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {2024} {-6}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1652 Add a new service rule with FTP service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1652," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=FTP\[TCP/20,21\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1654 Add a new service rule with PING service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1654," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=pingcheck} {$v6_protocol=ICMPv6} {$ICMPv6_Type=echo-request} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|pingcheck|br0|Protocol:ICMPv6 Icmpv6Type:echo-request|Action:Drop} {$Result=PASS}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {FAIL} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1656 Add a new service rule with TFTP service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1656," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=TFTP\[UDP/69\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|TFTP|br0|Protocol:UDP Dst Port:69|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {69} {-6} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {69} {10} {-u -6} {no} {Don't Care} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=udp.port==69} {$judge=fail}]
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {69} {-6}
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|TFTP|br0|Protocol:UDP Dst Port:69|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {69} {-6} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WKS_IPv6" {69} {10} {-u -6} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {69} {-6}
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1657 Add a new service rule with SSH service >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1657," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=SSH\[TCP/22\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|SSH|br0|Protocol:TCP Dst Port:22|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|SSH|br0|Protocol:TCP Dst Port:22|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {FAIL} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1660 Add a new service rule with Permit, select Permit/Drop check firewall can allow >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1660," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=FTP\[TCP/20,21\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|FTP|br0|Protocol:TCP Dst Port:20:21|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|FTP|br0|Protocol:TCP Dst Port:20:21|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1641 Enable/Disable Firewall >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1641," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "$::WKS_IPv6 23" {root} {1234} {FAIL} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1642 Enable firewall, check firewall can allow all traffic with LAN to WAN direction >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1642," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1689 Modify one rule check it can work well >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1689," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\]" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1677 When enable High Firewall, add LAN->WAN rule(IP address is Single to Single) >
# Version : 2
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1677," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$v6_src_ip=$::LAN_IPv6} {$v6_src_mask=128} {$v6_dst_ip=$::WKS_IPv6} {$v6_dst_mask=128} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|HTTP|br0|Protocol:TCP Src v6 IP:$::LAN_IPv6 Src v6 Prefix Length:128 Dst v6 IP:$::WKS_IPv6 Dst v6 Prefix Length:128 Dst Port:80|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$service=TELNET\[TCP/23\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|TELNET|br0|Protocol:TCP Src v6 IP:$::LAN_IPv6 Src v6 Prefix Length:128 Dst v6 IP:$::WKS_IPv6 Dst v6 Prefix Length:128 Dst Port:23|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv6} {$Check_Str_Arr=1|Yes|FTP|br0|Protocol:TCP Src v6 IP:$::LAN_IPv6 Src v6 Prefix Length:128 Dst v6 IP:$::WKS_IPv6 Dst v6 Prefix Length:128 Dst Port:20:21|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "\[$::WKS_IPv6\] -P eth1" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_3} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1683 When enable Medium Firewall, add LAN->WAN rule(IP address is Single to Single) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1683," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN_IPv6}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=-1} {$active=true} {$service=Custom} {$srv_name=pingcheck} {$v6_protocol=ICMPv6} {$ICMPv6_Type=echo-request} {$v6_src_ip=$::LAN_IPv6} {$v6_src_mask=128} {$v6_dst_ip=$::WKS_IPv6} {$v6_dst_mask=128} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {FAIL} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv6} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1658 Select Packet Direction as WAN to LAN >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1658," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$dst_port_start=22} {$dst_port_end=22} {$action=Permit}]

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::WKS_IPv6\]" {admin} {1234} {FAIL} {IPv6} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1669 Add a new service rule with Permit action and TELNET service >
# Version : 2
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1669," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WKS_IPv6 23" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1666 Add a new service rule with Permit action and FTP service > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1666," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=FTP\[TCP/20,21\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::WKS_IPv6\]" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1659 Add a new service rule with Permit action, enable/disable this rule >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1659," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$active=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1661 Add a new service rule with Permit action and Address Type: any IP >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1661," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=DMZ_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS2_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$v6_src_ip=} {$v6_src_mask=} {$action=Permit}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|test|$ifconfig_PPPoE$|Protocol:TCP|Action:Permit} {$Result=PASS}]
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS2_IPv6 -p 22" {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|test|$ifconfig_PPPoE$|Protocol:TCP|Action:Drop} {$Result=PASS}]
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS2_IPv6 -p 22" {root} {1234} {FAIL} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1671 Add a new service rule with Permit action and SSH service >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1671," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=SSH\[TCP/22\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|SSH|$ifconfig_PPPoE$|Protocol:TCP Dst Port:22|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|SSH|$ifconfig_PPPoE$|Protocol:TCP Dst Port:22|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WKS_IPv6 23" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1670 Add a new service rule with Permit action and TFTP service >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1670," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=TFTP\[UDP/69\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|TFTP|$ifconfig_PPPoE$|Protocol:UDP Dst Port:69|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {69} {-6} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=120}]
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WKS_IPv6" {69} {10} {-u -6} {no} {Don't Care} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.port==69} {$judge=pass}]
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {69} {-6}
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewallv6_Direction$} {$Check_Str_Arr=1|Yes|TFTP|$ifconfig_PPPoE$|Protocol:UDP Dst Port:69|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {69} {-6} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=120}]
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WKS_IPv6" {69} {10} {-u -6} {no} {Don't Care} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.port==69} {$judge=fail}]
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {69} {-6}
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1667 Add a new service rule with Permit action and HTTP service >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1667," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth1" {FAIL} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_4} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1665 Add a new service rule with Permit action and service type: UDP and set port number >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1665," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=UDP} {$dst_port_start=3030} {$dst_port_end=3030} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {3030} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WKS_IPv6" {3030} {10} {-u -V} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {3030} {-V}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2024} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WKS_IPv6" {2024} {10} {-u -V} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2024} {-V}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1664 Add a new service rule with Permit action and service type: TCP and set port number >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1664," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$v6_protocol=TCP} {$dst_port_start=8080} {$dst_port_end=9090} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {8080} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WKS_IPv6" {8080} {10} {-V} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {8080} {-V}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {1024} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WKS_IPv6" {1024} {10} {-V} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {1024} {-V}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1643 Enable firewall, check firewall can drop all traffic with WAN to LAN direction >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1643," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WAN_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WAN_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::LAN_IPv6\]" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::LAN_IPv6\] --interface eth2" {FAIL} {IPv6} 

# UDP
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {7080} {-6} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} "$::WAN_IPv6" {7080} {10} {-u -6} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {7080} {-6}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {3030} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::LAN_IPv6" {3030} {10} {-V -u} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {3030} {-V}

# TCP
::CONSOLE::Start_WKS_iPerf_Server {WAN_WKS} {7080} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {LAN1_WKS} "$::WAN_IPv6" {7080} {10} {-V} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {WAN_WKS} {7080} {-V}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {3030} {-V} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::LAN_IPv6" {3030} {10} {-V} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {3030} {-V}

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::LAN_IPv6\]" {root} {1234} {FAIL} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::LAN_IPv6\] --interface eth2" {FAIL} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1680 When enable High Firewall, add WAN->LAN rule(IP address is Single to Single) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1680," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WAN_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$v6_src_ip=$::WAN_IPv6} {$v6_src_mask=128} {$v6_dst_ip=$::WKS_IPv6} {$v6_dst_mask=128} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth2" {FAIL} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=SSH\[TCP/22\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=HTTP\[TCP/80\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth2" {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1681 When enable High Firewall, add WAN->LAN rule(IP address is Range to Range) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1681," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$v6_src_ip=$::WAN_IPv6} {$v6_src_mask=128} {$v6_dst_ip=$::WKS_IPv6} {$v6_dst_mask=128} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth2" {FAIL} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=SSH\[TCP/22\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=HTTP\[TCP/80\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth2" {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1685 When enable Medium Firewall, add WAN->LAN rule(IP address is Any to Any) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1685," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]}  {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://\[$::WKS_IPv6\] --interface eth2" {PASS} {IPv6} 
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=SSH\[TCP/22\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {PASS}
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "-6 $::WKS_IPv6 23" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "\[$::WKS_IPv6\]" {root} {1234} {PASS} {IPv6} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WKS_IPv6 -p 22" {root} {1234} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewallv6_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1589 Filter name input checking >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1589," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=!@#$%^&*()_+qwer1234asdf56781qaz2wsx3edc4rfv5tgb6yhn7ujm8ik1234} {$protocol=TCP} {$dst_port_start=223} {$dst_port_end=223} {$action=Permit}]
set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|!@#$%^&*()_+qwer1234asdf56781qaz2wsx3edc4rfv5tgb6yhn7ujm8ik1234|$::interface|Protocol:TCP Dst Port:223:223|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1590 Filter IP address format checking >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1590," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=formattest} {$protocol=TCP} {$src_ip=domain.pqatest} {$src_mask=255.255.255.255} {$action=Permit}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {id} {Button_Cancle} {10} {PASS} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {Input Domain name format is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Input Domain name format should be block}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=formattest} {$protocol=TCP} {$src_ip=255.255.255.255} {$src_mask=255.255.255.255} {$action=Permit}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {id} {Button_Cancle} {10} {PASS} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {Input wrong IPv4 format is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Input wrong IPv4 format should be block}
}

set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=formattest} {$protocol=TCP} {$src_ip=$LAN_Subnet$.2} {$src_mask=255.255.255.255} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|formattest|$::interface|Protocol:TCP Src IP:$LAN_Subnet$.2 Src Mask:255.255.255.255|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=deleteBtn_0} {$delete=true}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=formattest} {$protocol=TCP} {$src_ip=$LAN_Subnet$.0} {$src_mask=255.255.255.0} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|formattest|$::interface|Protocol:TCP Src IP:$LAN_Subnet$.0 Src Mask:255.255.255.0|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1591 Max Filter rule checking >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1591," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$}] {::rule_no}

set start [expr $::rule_no+1]
for {set ::x $start} {$::x < [expr $Firewall_max_rule$ + 1]} {incr ::x} {
    set ::port [expr 500 + $::x]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=max$::x} {$protocol=TCP} {$dst_port_start=$::port} {$dst_port_end=$::port} {$action=Permit}]
    if {"$::x" == "32"} {
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
        ::CONSOLE::Wait {10} 
        ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]        
    }
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$}] {::rule_no}
if {"$::rule_no" == "$Firewall_max_rule$"} {
    ::MISC::ACTS_Dummy_Response {PASS} "firewall rule max rule is $::rule_no"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "firewall rule max rule should be $Firewall_max_rule$, now is $::rule_no"
}

::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::WEB::WebDrv_Click {id} {Add_ID} {20}
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {over max rule will popup warning message}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {over max rule should popup warning message}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- Security ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1928 Sensitive folder should not be visited after SCP Path Traversal >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1928," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {rm /root/.ssh/known_hosts} {30}
::CONSOLE::CI_Cmd_More {} {scp /etc/passwd $CPEUSERNAME$@$LAN_IP$:/../../../../etc/passwd} {10}
::CONSOLE::CI_Capture_Response {} {$CPEPASSWORD$} {10} {::response}
if {[string first "Operation not permitted" "$::response"] > 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {Upload sensitive data to DUT is blocked}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "Upload sensitive data to DUT should be blocked, $::response"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1929 Sensitive folder should not be visited after SFTP Path Traversal >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1929," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {rm /root/.ssh/known_hosts} {30}
::CONSOLE::CI_Cmd_More {} {sftp $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Capture_Response {} {$CPEPASSWORD$} {10} {::response}

if {[string first "No such file" "$::response"] > 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {sftp access block}
} else {
    ::CONSOLE::CI_Capture_Response {} {../} {15} {::response}
    if {[string first "Invalid command" "$::response"] >= 0 } {
        ::MISC::ACTS_Dummy_Response {PASS} {Sensitive folder can not be visited}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} "Sensitive folder should not be visited, $::response"
    }
    ::CONSOLE::CI_Cmd {} {bye}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-29912 Don't disclosed information in HTTP's headers >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-29912," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan_Fail {} {curl -l "http://$LAN_IP$" | grep Server} {30} {Server:} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1950 Testing TLS/SSL encryption >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1950," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.188} {acts} {1234}
::CONSOLE::Wait {2}
::CONSOLE::CI_Cmd_More {} {put $MOD_PATH$testssl.sh} {60}
::CONSOLE::Wait {5}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {cd /home/acts/} {10} 
::CONSOLE::CI_Cmd_More {} {rm ssl.log} {10} 
::CONSOLE::CI_Cmd_More {} {chmod 777 testssl.sh} {10} 
::CONSOLE::CI_Cmd_More {} {./testssl.sh --warnings off --logfile ssl.log $LAN_IP_Port$ &} {10}
::CONSOLE::Wait {250} 

::CONSOLE::CI_Cmd_More {} {grep '(NOT ok)' ssl.log > fail.log} {10}
set result [::CONSOLE::CI_Cmd_Scan {} {ls -s fail.log} {10} {0} {fail.log}]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {check result is PASS}
} else {
    ::CONSOLE::CI_Capture_Response {} {cat fail.log} {10} {::response}
    ::MISC::ACTS_Dummy_Response {FAIL} "check result is FAIL, $::response"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1931 File under FW Bin image, info contain username/password should be encrypted >
# Version 3

<TCL_Block_Begin>
if {[string first "UTP-1931," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.188} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {dir} {10}
::CONSOLE::CI_Cmd_More {} {delete firmware.bin} {60}
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$ firmware.bin} {60}
::CONSOLE::Wait {10}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {cd /home/acts/} {10} 

set result [::CONSOLE::CI_Cmd_Scan {} {binwalk -e "firmware.bin"} {30} {DECIMAL} {HEXADECIMAL}]
if { "$result" != "PASS" } {
    ::TESTLINK::CI_Cmd_More_No_Prompt {} {apt-get install binwalk} {2} 
    set test [::CONSOLE::CI_Cmd_WaitString {} {} {Do you want to continue?} {10}]
    if {"$test" == "PASS" } {
        ::TESTLINK::CI_Cmd_More_No_Prompt {} {y} {5}
        ::CONSOLE::Wait {35} 
    }
    ::CONSOLE::Wait {20} 
    ::TESTLINK::CI_Cmd_More_No_Prompt {} {binwalk -e "firmware.bin"} {5}
    ::CONSOLE::Wait {10} 
}

::CONSOLE::CI_Cmd_More {} {cd _firmware.bin.extracted} {10} 
::TESTLINK::CI_Cmd_More_No_Prompt {} {find . -type f \( -iname "*.cfg" \) | xargs grep -Hni "ssword" > check.txt} {2} 
set result [::CONSOLE::CI_Cmd_Scan {} {ls -sh check.txt} {30} {0} {check.txt}]
if { "$result" == "PASS" } {
    ::MISC::ACTS_Dummy_Response {PASS} {There is no password show in firmware.bin} 
} else {
    ::CONSOLE::CI_Cmd_Scan_Fail {} {cat check.txt} {30} {$CPEUSERNAME$} {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} {cat check.txt} {30} {$CPEPASSWORD$} {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} {cat check.txt} {30} {$CPEUSERNAME$} {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} {cat check.txt} {30} {$USER_LOGIN_DEFAULT_PASSWORD$} {}    
    ::CONSOLE::CI_Cmd_Scan_Fail {} {cat check.txt} {30} {acts} {1234}
    ::CONSOLE::CI_Capture_Response {} {cat check.txt} {30} {::response} 
    ::MISC::ACTS_Dummy_Response {WARNING} "$::response"
}

::CONSOLE::CI_Cmd_More {} {cd ..} {10}
::CONSOLE::CI_Cmd_More {} {rm -r _firmware.bin.extracted} {10}
::CONSOLE::CI_Cmd_More {} {rm firmware.bin} {10}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1924 account/password info can't retrieve by clear text >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-1924," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /var/pdm/config.xml | grep Password} {30} {$CPEPASSWORD$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /var/pdm/config.xml | grep Password} {30} {$USER_LOGIN_DEFAULT_PASSWORD$} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /var/pdm/config.xml | grep Password} {30} {12345} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1930 Bricker Bot PDoS attack >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1930," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan_Fail {} {mount} {10} {mtdblock} {w} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-30093 DUT should not support netstat to dump Open Port state >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-30093," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Capture_Response {} {netstat -letu} {10} {::response} 
::MISC::ACTS_Dummy_Response {PASS} "$::response"
::CONSOLE::CI_Cmd_Scan_Fail {} {netstat -letu} {30} {tcp} {LISTEN}
::CONSOLE::CI_Cmd_ScanIgnoreBlank_Fail {} {netstat -letu} {30} {udp} {0.0.0.0:*}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-30137 via SSH and access sh mode, DUT can't support obtain root privileges >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-30137," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {rm /root/.ssh/known_hosts} {30}
::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {30}
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {30}
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {bin} {} {dev} {} {lib} {} {mini_httpdroot} {} {sbin} {} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {tmp} {} {usr} {} {boaroot} {} {etc} {} {linuxrc} {} {proc} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {sys} {} {userfs} {} {var} {}
::CONSOLE::CI_Cmd_More {} {sh} {30} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {bin} {} {dev} {} {lib} {} {mini_httpdroot} {} {sbin} {} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {tmp} {} {usr} {} {boaroot} {} {etc} {} {linuxrc} {} {proc} {}
::CONSOLE::CI_Cmd_Scan_Fail {} {ls} {30} {sys} {} {userfs} {} {var} {}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-1891 Nmap TCP Port Scan on WAN. (L0 execute scan port form 1~1024) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1891," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=1-1024} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=60} {$wait_intervel=20}] {::response}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=30}] {::result}
        if {"$Key_Account$" == "Chile"} {
            if { "$::result" != "" } {
                if { "$::result" == "22" } {
                ::MISC::ACTS_Dummy_Response {PASS} "$::result is allow opened"
                } else {
                ::MISC::ACTS_Dummy_Response {FAIL} "$::result is opened"
                }
            }
        } else {
            if { "$::result" != "" } {
                ::MISC::ACTS_Dummy_Response {FAIL} "$::result is opened"
            }
        }
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT without any open port} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1894 Open TCP port checking with HTTP/HTTPS/FTP/SSH/Telnet >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1894," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=80} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=20} {$wait_intervel=20}] {::response}
if {"$::response" == "80"} {
    ::MISC::ACTS_Dummy_Response {PASS} {http LAN is open}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {http LAN is not open}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=443} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=20} {$wait_intervel=20}] {::response}
if {"$::response" == "443"} {
    ::MISC::ACTS_Dummy_Response {PASS} {https LAN is open}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {https LAN is not open}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=21} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=20} {$wait_intervel=20}] {::response}
if {"$::response" == "21"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {FTP LAN is open}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {FTP LAN is not open}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=22} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=20} {$wait_intervel=20}] {::response}
if {"$::response" == "22"} {
    ::MISC::ACTS_Dummy_Response {PASS} {SSH LAN is open}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {SSH LAN is not open}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=23} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=20} {$wait_intervel=20}] {::response}
if {"$::response" == "23"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {Telnet LAN is open}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Telnet LAN is not open}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1895 Check Upnp port is open, when Firewall is disable. And hacker could use it change CPE setting >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1895," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=1900} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=60} {$wait_intervel=20}] {::response}
if {"$::response" == "1900"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {WAN PC should not search out UPNP port}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {WAN PC can not search out UPNP port}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1897 DNS proxy relay checking on WAN, DUT should not relay DNS request from WAN side >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1897," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {true > /etc/resolv.conf} {30}
::TESTLINK::CI_Cmd_More_No_Prompt {} "echo nameserver $::WAN_IP >> /etc/resolv.conf" {30} {echo search example.org >> /etc/resolv.conf} {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} {www.zyxel.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=ip.src==$::WAN_IP and dns} {$judge=fail}]
::TESTLINK::CI_Cmd_More_No_Prompt {} {reboot} {5}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-18736 Can't get DUT info via other open Port with POST/GET >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-18736," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=1-65535} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=1800}] {::response}
::MISC::ACTS_Dummy_Response {PASS} "$::response"

set open_list [split $::response " "]
for {set i 0} {$i < [llength $open_list]} {incr i} {    
    set ::port [lindex $open_list $i]

    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_More {} {rm check.txt} {10} 
    ::CONSOLE::CI_Cmd_More {} "curl -s X POST $Adv_GUI_Protocol$$LAN_IP$:$::port/cgi-bin/lan_v4.cgi > check.txt" {10} 
    ::CONSOLE::CI_Cmd_Scan {} {ls -sh check.txt} {10} {0} {check.txt} 
    ::CONSOLE::CI_Cmd_More {} {rm check.txt} {10} 
    ::CONSOLE::CI_Cmd_More {} "curl -s X GET $Adv_GUI_Protocol$$LAN_IP$:$::port/cgi-bin/lan_v4.cgi > check.txt" {10} 
    ::CONSOLE::CI_Cmd_Scan {} {ls -sh check.txt} {10} {0} {check.txt} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1890 Nmap TCP Port Scan on LAN >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1890," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

set ::response1 ""
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=1-65535} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=1800}] {::response1}

if {[string first "Brazil" "$Key_Account$"] == -1 } {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    set ::response2 ""
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=1-65535} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=1800}] {::response2}

    set res1_list [split $::response1 " "]
    set temp1 ""
    for {set i 0} {$i < [llength $res1_list]} {incr i} {    
        set port [lindex $res1_list $i]
        if {[string first "$port" "$::response2"] == -1 } {
            append $temp1 $port
        }
    }

    set res2_list [split $::response2 " "]
    set temp2 ""
    for {set i 0} {$i < [llength $res2_list]} {incr i} {    
        set port [lindex $res2_list $i]
        if {[string first "$port" "$::response1"] == -1 } {
            append $temp2 $port
        }
    }

    if {"$temp1" == "" && "$temp2" == ""} {
        ::MISC::ACTS_Dummy_Response {PASS} {Nmap scan result is the same, after disable firewall } 
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {Nmap scan result are not the same, after disable firewall } 
        ::MISC::ACTS_Dummy_Response {WARNING} "response1 is $::response1"
        ::MISC::ACTS_Dummy_Response {WARNING} "response2 is $::response2"
    }
}

if {"$::response1" != ""} {
    set open_list [split $::response1 " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        if {[string first "$::port" $Allow_port$] == -1 } {
            ::MISC::ACTS_Dummy_Response {FAIL} "$::port is opened"
        } else {
            ::MISC::ACTS_Dummy_Response {PASS} "$::port is permit opened"
        }

        if {"$::port" == "22"} {
            ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$no_wait=true}] {::test}
            ::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
        }
        if {"$::port" == "80"} {
            ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$no_wait=true}] {::test}
            ::WEB::WebDrv_OpenWebSite {http://$LAN_IP$} {A1000}
            ::CONSOLE::Wait {3} 
            ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$username=$GUI_User$} {$password=$GUI_Pwd$}]
            set result [::WEB::WebDrv_Click {id} {ssidname} {20} {PASS}]
            if {"$result" == "0"} {
                ::MISC::ACTS_Dummy_Response {PASS} {Login http success}
                ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
            } else {
                ::MISC::ACTS_Dummy_Response {PASS} {Login http fail}
            }
            ::WEB::WebDrv_CloseBrowser {A1000}
            ::CONSOLE::Wait {5} 
        }
        if {"$::port" == "443" || "$::port" == "8000"} {
            ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$no_wait=true}] {::test}
            ::WEB::WebDrv_OpenWebSite "$LAN_URL_HTTPS$" {A1000}
            ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
            set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
            if {"$result" == "0"} {
                ::MISC::ACTS_Dummy_Response {PASS} {Login https success}
                ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
            } else {
                ::MISC::ACTS_Dummy_Response {PASS} {Login https fail}
            }
            ::WEB::WebDrv_CloseBrowser {A1000}
        }                
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT without any open port} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {killall nmap} {10} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1899 Check telnet/ssh/Upnp service of LAN is disabled by default >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1899," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set ::response ""
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=U:1900,T:22,23,5000} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=60}] {::response}
::MISC::ACTS_Dummy_Response {PASS} "$::response"

if {"$::response" == "" || "$::response" == "22"} {
    ::MISC::ACTS_Dummy_Response {PASS} {no open port or only ssh port open}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "$$::response port is open"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1900 Both WAN/LAN should disabled MGMT by default (except HTTP service on LAN) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1900," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set ::response ""
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=1-1024,16667} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=60} {$wait_intervel=20}] {::response}
if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        # Marcoplo project: LAN can only open 22/80/443/16667
        if {"$::port" == "22" || "$::port" == "443" || "$::port" == "80" || "$::port" == "16667"} {
            ::MISC::ACTS_Dummy_Response {PASS} "$::port port in LAN is permit opened by Marcoplo"
        } else {
            ::MISC::ACTS_Dummy_Response {FAIL} "$::port port in LAN is opened"
        }
    }
}

set ::response ""
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=1-1024,16667} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=60} {$wait_intervel=20}] {::response}
if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        ::MISC::ACTS_Dummy_Response {FAIL} "$::port port in WAN is opened"
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} "no open port in WAN"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1907 Execute CLI command which include "utelnetd -l /bin/sh -p portnumber" >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1907," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_More {} {sys sysdiagd > /tmp/var/tmp/asd3$(utelnetd -l /bin/sh -p 2959).txt} {10} 

set ::response ""
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=LAN1_WKS} {$PortRange=U:2959,T:2959} {$IP_Type=IPv4} {$ScanIP=$LAN_IP$} {$ExpectWait=60} {$wait_intervel=20}] {::response}
if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        ::MISC::ACTS_Dummy_Response {FAIL} "$::port port is opened"
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} "no open port"
}

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} {$LAN_IP$ 2959} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-30094 ssh access should not allow public key >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-30094," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ssh-keygen -f "/root/.ssh/known_hosts" -R $LAN_IP$} {30} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ssh -v $CPEUSERNAME$@$LAN_IP$} {30} {debug1: Authentications that can continue:} {publickey,password}
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {5} {exit} {5}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1858 Authenticated OS Command Injection >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1858," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan_Fail {} {ping 'sh>/dev/tty'} {10} {#} {} 
::CONSOLE::CI_Cmd_Scan_Fail {} {sys sysdiagd >/dev/null & sh>/dev/tty} {10} {#} {} 
::CONSOLE::CI_Cmd {} {exit} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1870 CLI mode can't execute sh mode command >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1870," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {sys swversion} {10} {$Firmware_Version$} {} 
::CONSOLE::CI_Cmd_Scan {} {ls} {10} {Can't find command} {ls}
::CONSOLE::CI_Cmd_Scan {} {cat} {10} {Can't find command} {cat}
::CONSOLE::CI_Cmd_Scan {} {mv} {10} {Can't find command} {mv}
::CONSOLE::CI_Cmd_Scan {} {cp} {10} {Can't find command} {cp}
::CONSOLE::CI_Cmd_Scan {} {kill} {10} {Can't find command} {kill}
::CONSOLE::CI_Cmd_Scan {} {pwd} {10} {Can't find command} {pwd}
::CONSOLE::CI_Cmd_Scan {} {hdapd} {10} {Can't find command} {hdapd}
::CONSOLE::CI_Cmd_Scan {} {mkdir} {10} {Can't find command} {mkdir}
::CONSOLE::CI_Cmd_Scan {} {echo} {10} {Can't find command} {echo}
::CONSOLE::CI_Cmd_Scan {} {cd} {10} {Can't find command} {cd}
::CONSOLE::CI_Cmd_Scan {} {umadk} {10} {Can't find command} {umadk}
::CONSOLE::CI_Cmd_Scan {} {meminfo} {10} {Can't find command} {meminfo}
::CONSOLE::CI_Cmd {} {exit} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1861 Close the browser without logout, device should request LAN client authenticate again >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1861," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {5} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
if {"$Key_Account$" == "Chile"} {
    set ::result [::WEB::WebDrv_Click {id} {sysusername} {3}]
} else {
    set ::result [::WEB::WebDrv_Click {id} {Loginuser} {3}]
}
if { "$::result" == "0" || "$::result" == "PASS" } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client need login again} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client should login again} 
}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}] 
::CONSOLE::CI_Cmd_More {} {weblogout} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1852 Check login security with local hosts, then reboot DUT, DUT should authenticate the host again >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1852," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1867 User should not be able to access to the files and directories outside the limited folder >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1867," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

if { "$Key_Account$" == "To2" } {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enable_FTP >" [list {$user=$USER_LOGIN_NAME$} {$pwd=$USER_LOGIN_DEFAULT_PASSWORD$} {$access=Write}]
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {$LAN_IP$} {$USER_LOGIN_NAME$} {$USER_LOGIN_DEFAULT_PASSWORD$}
::CONSOLE::CI_Cmd_Scan {} {dir ../../.} {10} {Drive1_1} {}
::CONSOLE::Close_Shell {Shell_FTP}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1595 Check with duplicate MAC Address >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1595," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-filter} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_List_Select {id} {Ipv4Filter_RuleIndexSEL} {option_value} {1} {20} 
::WEB::WebDrv_List_Select {id} {InterfaceSEL} {option_value} {br0} {20} 
::WEB::WebDrv_Set_Value {id} {SrcMacAddr} {00:13:49:12:34:56} {20} 
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::CONSOLE::Wait {5} 

::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-filter} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_List_Select {id} {Ipv4Filter_RuleIndexSEL} {option_value} {2} {20} 
::CONSOLE::Wait {3} 
::WEB::WebDrv_List_Select {id} {InterfaceSEL} {option_value} {br0} {20} 
::WEB::WebDrv_Set_Value {id} {SrcMacAddr} {00:13:49:12:34:56} {20} 
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::CONSOLE::Wait {5} 

::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-filter} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {mac_list} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Click {xpath} {//*[@id="filter_table"]/tbody/tr[3]/td[1]} {20} {FAIL}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1884 Check list directory by using direct images/download/pages URL >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1884," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {http://$LAN_IP$/images} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {http://$LAN_IP$/download} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {http://$LAN_IP$/pages} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1885 Can't get Information Leak in sensitive Files by some URL >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1885," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/mhs/APIS/returnWifiJSON.txt} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/mhs/jsps/wifi_get.jsp} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1849 Check Access to GUI with direct HTTP URL and DUT should pop out authentication request >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1849," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

if {"$Key_Account$" == "Chile"} {
    set GUIusername "sysusername"
} else {
    set GUIusername "Loginuser"
}

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/reboot.cgi}
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {id} "$GUIusername" {20}]
if {"$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {PASS} {redirect to login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should redirect to login page}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/broadband.cgi?dnsPrimary=8.8.8.8&dnsSecondary=6.6.6.6&dnsDynamic=0&dnsRefresh=1}
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {id} "$GUIusername" {20}]
if {"$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {PASS} {redirect to login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should redirect to login page}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/lanSetup.cgi?ethIpAddress=$LAN_Subnet$.2&ethSubnetMask=255.255.255.0&enblIgmpSnp=1&enblIgmpMode=1&dhcpEthStart=$LAN_Subnet$.181&dhcpEthEnd=$LAN_Subnet$.199&dhcpSubnetMask=255.255.255.0&dhcpLeasedTime=24&enblDhcpSrv=1&enblLan2=0&lanPortIsolation=0}
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {id} "$GUIusername" {20}]
if {"$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {PASS} {redirect to login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should redirect to login page}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/userAccount.cgi?sysPassword=myNewPass}
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {id} "$GUIusername" {20}]
if {"$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {PASS} {redirect to login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should redirect to login page}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/firewareUpgrade.cgi}
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {id} "$GUIusername" {20}]
if {"$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {PASS} {redirect to login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should redirect to login page}
}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1857 Without Auth DUT, it can't be modify setting by directly URL >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1857," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {http://$LAN_IP$/pages/tabFW/homeNetworking-lanSetup.cgi?lanDnsPrimary=3.3.3.3&lanDnsSecondary=4.4.4.4&lanDnsType=Static} {A1000}
::WEB::WebDrv_Check_Title {404 Not Found} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1874 Logout url attack >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1874," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list  {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=172.205.77.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=172.202.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {curl -i $LAN_IP$/cgi-bin/passLogout.cgi} {10} 
::CONSOLE::Wait {5} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Login fail}
}
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {https://www.youtube.com/} {B1000}
::WEB::WebDrv_Check_Title {YouTube} {30} {PASS} {full}
::WEB::WebDrv_CloseBrowser {B1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1848 Check Bypass Router 'userAccount.html' Authorization on DUT >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1848," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {https://$LAN_IP_Port$/cgi-bin/pages/maintenance/userAccount/userAccount.html?superFlag=1} {A1000}
::WEB::WebDrv_Check_Title {403 Forbidden} {20} {PASS} {full}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1846 Perform "Command Injection" security checking via TELNET/SSH for all commands >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1846," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm .ssh/known_hosts} {10} 
::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}

::CONSOLE::CI_Cmd_Scan_Fail {} {env x='() { :;}; echo vulnerable' bash -c "echo This is a test code"} {10} {This is a test code} {} 
::CONSOLE::Wait {5} 

# exit
::CONSOLE::CI_Cmd_Scan {} {exit | ls -la} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit 'ls'} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit & sh} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ;sh} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ping ;sh} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {exit %p%p%p} {180} {::response} 
if {[string first "Bye bye" "$::response"] == -1 } {
    ::MISC::ACTS_Dummy_Response {FAIL} {exit %p%p%p should not execute}
}
::CONSOLE::Wait {10} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {exit <script>alert("XSS")</script>} {200} {::response} 
if {[string first "Bye bye" "$::response"] == -1 } {
    ::MISC::ACTS_Dummy_Response {FAIL} {exit <script>alert("XSS")</script> should not execute}
}
::CONSOLE::Wait {5} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ping sh>/dev/tty} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ping ||sh} {10} {Bye bye} {} 
::CONSOLE::Wait {5} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {exit ping $(sh>/dev/tty)} {180} {::response} 
if {[string first "Bye bye" "$::response"] == -1 } {
    ::MISC::ACTS_Dummy_Response {FAIL} {exit ping $(sh>/dev/tty) should not execute}
}
::CONSOLE::Wait {5} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ping &sh>/dev/tty} {10} {Bye bye} {} 

::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
::CONSOLE::CI_Cmd_Scan {} {exit ping |ls} {10} {Bye bye} {} 
::CONSOLE::Wait {20} 

set commandlist "? save sys lan wlan wlan5 voip voice dns show set add remove reset update-firmware swversion dhcpcondserv transmitterinfo gemportstats showOmciStats virtualserver get managedEntities"
set clicmd [split $commandlist " "]
for {set i 0} {$i < [llength $clicmd]} {incr i} {
    set cmd [lindex $clicmd $i]
    ::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
    ::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
    set result [::CONSOLE::CI_Cmd_Scan {} {ls rtl8812au/} {10} {8812au.ko} {}]
    if { "$result" == "PASS" } {
        ::CONSOLE::Wait {10} 
        ::CONSOLE::CI_Cmd_More {} {ssh $CPEUSERNAME$@$LAN_IP$} {10} 
        ::CONSOLE::CI_Cmd_More {} {$CPEPASSWORD$} {10}
    }
    ::MISC::ACTS_Dummy_Response {PASS} "command is $cmd"
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd | ls -la" {60} {-rw-} {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd 'ls'" {60} {app} {dev}
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd & sh" {60} {# } {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ;sh" {60} {# } {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ping ;sh" {60} {# } {}

    ::CONSOLE::CI_Capture_Response {} "$cmd \%p\%p\%p\." {200} {::response} 
    if {"$cmd" == "managedEntities"} {
        if {[string first "Priority Queue" "$::response"] == -1 } {
            ::MISC::ACTS_Dummy_Response {FAIL} "$cmd %p\%p\%p. should execute ok"
        }
    } else {
        if {[string first "00" "$::response"] != -1 } {
            ::MISC::ACTS_Dummy_Response {FAIL} "$cmd %p%p%p. should not execute"
        }        
    }
    ::CONSOLE::Wait {10} 

    ::CONSOLE::CI_Capture_Response {} "$cmd <script>alert(\"XSS\")</script>" {60} {::response} 
    if {[string first "XSS " "$::response"] != -1 } {
        ::MISC::ACTS_Dummy_Response {FAIL} "$cmd <script>alert(\"XSS\")</script> should not execute"
    }            
    ::CONSOLE::Wait {10} 

    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ping sh>/dev/tty" {60} { ping:} {} 
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ping \|\|sh" {60} { ping:} {}

    ::CONSOLE::CI_Capture_Response {} "$cmd ping $\(sh>/dev/tty\)" {60} {::response} 
    if {[string first " ping:" "$::response"] != -1 } {
        ::MISC::ACTS_Dummy_Response {FAIL} "$cmd ping $\(sh>/dev/tty\) should not execute"
    }        

    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ping &sh>/dev/tty" {60} { ping:} {}
    ::CONSOLE::CI_Cmd_Scan_Fail {} "$cmd ping |ls" {60} { ping:} {}
    ::CONSOLE::CI_Cmd_More {} {exit} {10}
    ::CONSOLE::Wait {20}      
}

if {"$use_shield_box$" == "false"} {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {5} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
} else {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {5} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1830 Import certificates [Binary format (X.509, PKCS#7); PEM (Base-64) encoded X.509 or PKCS#7] >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1830," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca1.pem}]

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[1]} {CA1.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {C=TW, ST=Taiwan, L=Taipei, O=ZyXEL, OU=SPSBU, CN=cloudcnm.pqatest.com, emailAddress=yjyeh@zyxel.com.tw} {10} {PASS} {full} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1832 Delete certificates >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1832," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca1.pem}]

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[1]} {CA1.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {C=TW, ST=Taiwan, L=Taipei, O=ZyXEL, OU=SPSBU, CN=cloudcnm.pqatest.com, emailAddress=yjyeh@zyxel.com.tw} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=deleteBtn_1} {$delete=true}]

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
set result [::WEB::WebDrv_Get_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[1]} {::value} {10}]
if {[string first "-1 WebDriver Get_Text error" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {delete trust_CA success}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} "$::value"
    if {"$::value" != "CA1.pem"} {
        ::MISC::ACTS_Dummy_Response {PASS} {delete trust_CA success}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {delete trust_CA fail}
    }
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1837 Connect to TR069 >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1837," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1834 Import Maximum certificate entries >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1834," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca1.pem}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca2.pem}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca3.pem}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Import_Trust_CA >" [list {$index=-1} {$CA_poth=D:/QTPTest/ACTS_Test/Tools/Include/ca4.pem}]

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[1]} {CA1.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {C=TW, ST=Taiwan, L=Taipei, O=ZyXEL, OU=SPSBU, CN=cloudcnm.pqatest.com, emailAddress=yjyeh@zyxel.com.tw} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[3]/td[1]} {CA2.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[3]/td[2]} {C=03, ST=Taiwan, L=Hsin-Chu, O=MitraStar, OU=PQA, CN=domain.pqatest.com} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[4]/td[1]} {CA3.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[4]/td[2]} {C=03, ST=Taiwan, L=Hsin-Chu, O=PQA, OU=MitraStar, CN=Char Wang} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[5]/td[1]} {CA4.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[5]/td[2]} {C=ES, O=Telefonica, OU=TGT, CN=PKI Root TG Telefonica} {10} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[1]} {CA1.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {C=TW, ST=Taiwan, L=Taipei, O=ZyXEL, OU=SPSBU, CN=cloudcnm.pqatest.com, emailAddress=yjyeh@zyxel.com.tw} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[3]/td[1]} {CA2.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[3]/td[2]} {C=03, ST=Taiwan, L=Hsin-Chu, O=MitraStar, OU=PQA, CN=domain.pqatest.com} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[4]/td[1]} {CA3.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[4]/td[2]} {C=03, ST=Taiwan, L=Hsin-Chu, O=PQA, OU=MitraStar, CN=Char Wang} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[5]/td[1]} {CA4.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[5]/td[2]} {C=ES, O=Telefonica, OU=TGT, CN=PKI Root TG Telefonica} {10} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1825 Import certificates [Binary format (X.509, PKCS#7); PEM (Base-64) encoded X.509 or PKCS#7] >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1825," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {localCA_frame} {20}
::WEB::WebDrv_File_Dialog {id} {WebSrvPath} {D:/QTPTest/ACTS_Test/Tools/Include/web1.pem} {10}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {MLG_Certificate_ReplaceButton} {20}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {localCA_frame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="httpsCA_list"]/table/tbody/tr[2]/td[1]} {httpsCert.pem} {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="httpsCA_list"]/table/tbody/tr[2]/td[2]} {C=TW, ST=Taiwan, L=Tainan, O=MyTest, OU=IISTest, CN=twpc13483-01.ZyXEL.com, emailAddress=kid.chen@zyxel.com.tw} {10} {PASS} {full} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- Security - Firewallv4 ---------------- >>

<TCL_Block_Begin>

if {[string first "Brazil" "$Key_Account$"] != -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {10} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1619 Modify one rule check it can work wel >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1619," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=TCPorUDP} {$src_port_start=2222} {$src_port_end=2222} {$dst_port_start=3333} {$dst_port_end=3333} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv4} {$Check_Str_Arr=1|Yes|test|br0|Protocol:TCPorUDP Src Port:2222:2222 Dst Port:3333:3333|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=2222&@dport=3333&@filter=udp.dstport==3333&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=tcp&@sport=1111&@dport=1111&@filter=tcp.port==1111&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=editBtn_0} {$protocol=UDP} {$src_port_start=4444} {$src_port_end=4444} {$dst_port_start=4450} {$dst_port_end=4450}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=4444&@dport=4450&@filter=udp.dstport==4450&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=2222&@dport=3333&@filter=udp.dstport==3333&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1602 Enable Medium Firewall, check drop all traffic form WAN side(Default), accept from LAN side >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1602," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
if {"$VoIP_Support$" == "yes"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {B1000}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {autotest1234}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {autotest1234}
::CONSOLE::Wait {5} 
::USER_DEFINE::CloseTR069ACS {B1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::dst_ip}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::dst_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 3000"
::CONSOLE::Wait {10} 
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 3000} {$judge=fail}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1606 ICMP ping reply from WAN >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1606," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1637 Check FTP/Telnet service always disable >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1637," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} {$LAN_IP$} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} {$LAN_IP$ 23} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=192.168.100.1} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::CONSOLE::Wait {10} 
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {192.168.100.33} {255.255.255.0} {192.168.100.1} {1}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {192.168.100.1} {::wks_ip} {PASS} 

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} {192.168.100.1} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} {192.168.100.1 23} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "$::WAN_IP" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "$::WAN_IP 23" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}
::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "$::WAN_IP" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WAN_IP 23" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.100.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1630 When enable Easy Firewall, add LAN->WAN rule(IP address is Single to Single) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1630," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan_ip} 
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wan_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=TCP} {$src_ip=$::lan_ip} {$src_mask=255.255.255.255} {$src_port_start=2222} {$src_port_end=2222} {$dst_ip=$::wan_ip} {$dst_mask=255.255.255.255} {$dst_port_start=3333} {$dst_port_end=3333} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=tcp&@sport=2222&@dport=3333&@filter=tcp.dstport==3333&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=tcp&@sport=1111&@dport=1111&@filter=tcp.port==1111&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1633 Modify one rule check it can work well >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1633," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=TELNET\[TCP/23\]} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv4} {$Check_Str_Arr=1|Yes|TELNET|br0|Protocol:TCP Dst Port:23|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "$::wks_ip 23" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::wks_ip -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv4} {$Check_Str_Arr=1|Yes|FTP|br0|Protocol:TCP Dst Port:20:21|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "$::wks_ip" {root} {1234} {FAIL}
::CONSOLE::Check_WKS_Telnet_Exist {LAN1_WKS} "$::wks_ip 23" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::wks_ip -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1627 When enable Medium Firewall, add LAN->WAN rule(IP address is Single to Single) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1627," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=ICMP} {$ICMP_Type=echo-request} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=br0InIPv4} {$Check_Str_Arr=1|Yes|test|br0|Protocol:ICMP IcmpType:echo-request|Action:Drop} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::wks_ip" {FAIL} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::wks_ip -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1622 When enable High Firewall, add LAN->WAN rule(IP address is Range to Range) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1622," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan_ip} 
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wan_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=TCP} {$src_ip=$::lan_ip} {$src_mask=255.255.255.0} {$src_port_start=2222} {$src_port_end=2222} {$dst_ip=$::wan_ip} {$dst_mask=255.255.255.0} {$dst_port_start=3333} {$dst_port_end=3333} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=tcp&@sport=2222&@dport=3333&@filter=tcp.dstport==3333&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=tcp&@sport=1111&@dport=1111&@filter=tcp.port==1111&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1621 When enable High Firewall, add LAN->WAN rule(IP address is Single to Single) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1621," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_PC}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan_ip} 
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wan_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=TCPorUDP}  {$src_ip=$::LAN_PC} {$src_mask=255.255.255.255} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=HTTP\[TCP/80\]} {$src_ip=$::lan_ip} {$src_mask=255.255.255.255} {$dst_ip=$::wan_ip} {$dst_mask=255.255.255.255} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://$::wan_ip" {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::wan_ip -p 22" {root} {1234} {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=editBtn_0} {$service=FTP\[TCP/20,21\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "$::wan_ip -P eth1" {root} {1234} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} "http://$::wan_ip" {FAIL} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=editBtn_0} {$service=SSH\[TCP/22\]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {LAN1_WKS} "$::wan_ip -P eth1" {root} {1234} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::wan_ip -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1623 When enable High Firewall, add LAN->WAN rule rule(IP address is Any to Any) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1623," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_PC}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan_ip} 
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wan_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=controlGUI} {$protocol=TCPorUDP}  {$src_ip=$::LAN_PC} {$src_mask=255.255.255.255} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=UDP} {$src_port_start=2222} {$src_port_end=2222} {$dst_port_start=3333} {$dst_port_end=3333} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=2222&@dport=3333&@filter=udp.dstport==3333&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=1234&@dport=1234&@filter=udp.port==1234&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$index=editBtn_1} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1631 When enable Easy Firewall, add LAN->WAN rule(IP address is Range to Range) >
# Version : 2
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1631," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=-1} {$active=true} {$service=Custom} {$srv_name=test} {$protocol=UDP} {$src_port_start=2222} {$src_port_end=2222} {$dst_port_start=3333} {$dst_port_end=3333} {$action=Drop}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::Setup_Module_Path {D:/QTPTest/ACTS_Test/Tools/Include}
::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=0&@lower_bound=0&@upper_bound=0&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=2222&@dport=3333&@filter=udp.dstport==3333&@}

::USER_DEFINE::Call_Script_Module {Create_Streams} {duration} {20} {target_WKS} {WAN_WKS} {target_WKS_if} {eth2} {stream1} {real_rate=1024&@expect_rate=1000&@lower_bound=500&@upper_bound=5000&@packet_len=1500&@srcWKS=LAN1_WKS&@destWKS=WAN_WKS&@destWKS_if=eth2&@nextHopMAC=$DUT_LAN_MAC_UType2$&@Protocol=udp&@sport=1234&@dport=1234&@filter=udp.port==1234&@}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=br0InIPv4} {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%
+CaseStart+
<< ---------------- WAN ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%                                                           
+CaseStart+
< UTP-100 Set PPPoE as manual mode,Check the connect function work well >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-100," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$conntrigger=OnDemand} {$timeout=60}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IP6}

set x [string first "172.205.77." $::WAN_IP]
if { $x >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT get IPv4 successfully}
    ::MISC::ACTS_Dummy_Response {PASS} "$::WAN_IP"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DUT get IPv4 fail}
    ::MISC::ACTS_Dummy_Response {FAIL} "$::WAN_IP"
}
set y [string first "2001:b021:" $::WAN_IP6]
if  {$y >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT get IPv6 successfully}
    ::MISC::ACTS_Dummy_Response {PASS} "$::WAN_IP6"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DUT get IPv6 fail, RM#148478}
    ::MISC::ACTS_Dummy_Response {FAIL} "$::WAN_IP6"
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$conntrigger=AutoConnect}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-99 Set PPPoE as manual mode, Check whether the disconnect function work well >
# Version 3

<TCL_Block_Begin>
if {[string first "UTP-99," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$conntrigger=OnDemand} {$timeout=300}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}] 

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
# Ethernet disconnect
::WEB::WebDrv_Click {xpath} {//*[@id="broadband_list"]/table[3]/tbody/tr[2]/td[5]/input} {20} {PASS}
::CONSOLE::Wait {15}
# check Ethernet IP is N/A
::WEB::WebDrv_Get_Text {xpath} {//*[@id="broadband_list"]/table[3]/tbody/tr[2]/td[4]} {::value} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

set x [string first "172.205.77." $::value]
if { $x >= 0 } {
    ::MISC::ACTS_Dummy_Response {FAIL} {After disconnect, DUT should release IP}
    ::MISC::ACTS_Dummy_Response {FAIL} $::value
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT release IPv4 successfully}
    ::MISC::ACTS_Dummy_Response {PASS} $::value
}

::CONSOLE::Close_Shell {Shell_3}
# LCP Termination Request(5)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ppp.code == 5} {$judge=PASS}] 
# LCP Termination Ack (6)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ppp.code == 6} {$judge=PASS}] 
# Active Discovery Terminate (PADT) (0xa7)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$conntrigger=AutoConnect}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-72 DUT send PADT before PADI: Power off-on >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-72," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}] 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Close_Shell {Shell_3}
# PADS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0x65} {$judge=PASS}] 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}] 
if {"$use_shield_box$" == "false"} {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
} else {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
set ::cmd_response ""
set ::session ""
::CONSOLE::CI_Cmd {} {grep Session packet.txt > check.txt}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {cat check.txt} 20 ::cmd_response
regexp {Session ID: (.*?)\n} $::cmd_response -> ::session
::MISC::ACTS_Dummy_Response {PASS} "$::session"

# PADT
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 
::CONSOLE::CI_Cmd {} "grep $::session packet1.txt > check.txt"
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {5} {Session ID:} "$::session"

# PADT before PADI
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 packet1.pcap} {30}

set f [file exist $LogPath$]
::MISC::ACTS_Dummy_Response {PASS} "$f"
if {"$f" == "0"} {
    file mkdir $LogPath$
} else {
    set g [file exist $LogPath$packet.pcap]
    ::MISC::ACTS_Dummy_Response {PASS} "$g"
    if {"$g" == "0"} {
        file delete $LogPath$packet.pcap
    }
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet1.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0xa7" "pppoe.code == 0x09"

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-74 DUT send PADT before PADI: Reboot by GUI / Reset to default by GUI >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-74," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

# Case1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}] 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::CONSOLE::Close_Shell {Shell_3}
# PADS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0x65} {$judge=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reboot >"
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {100} 
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
set ::cmd_response ""
set ::session ""
::CONSOLE::CI_Cmd {} {grep Session packet.txt > check.txt}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {cat check.txt} 20 ::cmd_response
regexp {Session ID: (.*?)\n} $::cmd_response -> ::session
::MISC::ACTS_Dummy_Response {PASS} "$::session"

# PADT
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 
::CONSOLE::CI_Cmd {} "grep $::session packet1.txt > check.txt"
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {5} {Session ID:} "$::session"

# PADT before PADI
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 packet1.pcap} {30}

set f [file exist $LogPath$]
::MISC::ACTS_Dummy_Response {PASS} "$f"
if {"$f" == "0"} {
    file mkdir $LogPath$
} else {
    set g [file exist $LogPath$packet.pcap]
    ::MISC::ACTS_Dummy_Response {PASS} "$g"
    if {"$g" == "0"} {
        file delete $LogPath$packet.pcap
    }
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet1.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0xa7" "pppoe.code == 0x09"

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS}

# Case2
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}] 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::CONSOLE::Close_Shell {Shell_3}
# PADS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0x65} {$judge=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}] 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reset >"
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {100}
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
set ::cmd_response ""
set ::session ""
::CONSOLE::CI_Cmd {} {grep Session packet.txt > check.txt}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {cat check.txt} 20 ::cmd_response
regexp {Session ID: (.*?)\n} $::cmd_response -> ::session
::MISC::ACTS_Dummy_Response {PASS} "$::session"

# PADT
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 
::CONSOLE::CI_Cmd {} "grep $::session packet1.txt > check.txt"
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {5} {Session ID:} "$::session"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-75 DUT send PADT before PADI: Reboot by TR-069 / Reset to default by TR-069 >
# Version : 3

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-75," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# TR069 reboot
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}] 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Close_Shell {Shell_3}
# PADS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0x65} {$judge=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}]

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Reboot {$CPEID$}
::USER_DEFINE::CloseTR069ACS {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
set ::cmd_response ""
set ::session ""
::CONSOLE::CI_Cmd {} {grep Session packet.txt > check.txt}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {cat check.txt} 20 ::cmd_response
regexp {Session ID: (.*?)\n} $::cmd_response -> ::session
::MISC::ACTS_Dummy_Response {PASS} "$::session"

# PADT
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 
::CONSOLE::CI_Cmd {} "grep $::session packet1.txt > check.txt"
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {5} {Session ID:} "$::session"

# PADT before PADI
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 packet1.pcap} {30}

set f [file exist $LogPath$]
::MISC::ACTS_Dummy_Response {PASS} "$f"
if {"$f" == "0"} {
    file mkdir $LogPath$
} else {
    set g [file exist $LogPath$packet.pcap]
    ::MISC::ACTS_Dummy_Response {PASS} "$g"
    if {"$g" == "0"} {
        file delete $LogPath$packet.pcap
    }
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet1.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0xa7" "pppoe.code == 0x09"

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS}

# TR069 Reset
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}] 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Close_Shell {Shell_3}
# PADS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoe.code == 0x65} {$judge=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}]

# ACS do FactoryReset
::WEB::OpenWebSite {$ACSWEB$} {A1000}
::WEB::Set_value {textbox} {__ac_name_id} {$ACSUSERNAME$} {no} {} {}
::WEB::Set_value {password} {__ac_password_id} {$ACSPASSWORD$} {no} {} {}
::WEB::Click {submit} {Login} {no} {} {} {}
::WEB::Click {link} {CPEManager} {no} {} {} {}
::WEB::Click {link} {Managed CPEs} {no} {} {} {}
::WEB::Set_value {textbox} {cpeid_filter} {$CPEID$} {no} {} {}
::GUIAPP::Send_Enter
::WEB::Click {image} {Scenario} {no} {} {} {}
::WEB::Set_Select {select} {methodName} {FactoryReset} {no} {} {}
::CONSOLE::Wait {2}
::WEB::Click {image} {Scenario} {no} {} {} {}
::WEB::WebDrv_Send_Enter
::CONSOLE::Wait {2}
::WEB::Click {button} {btn_run_ajax_now} {no} {} {} {}
::CONSOLE::Wait {10} 
::WEB::CloseWebSite {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
set ::cmd_response ""
set ::session ""
::CONSOLE::CI_Cmd {} {grep Session packet.txt > check.txt}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Capture_Response {} {cat check.txt} 20 ::cmd_response
regexp {Session ID: (.*?)\n} $::cmd_response -> ::session
::MISC::ACTS_Dummy_Response {PASS} "$::session"

# PADT
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=pppoe.code == 0xa7} {$judge=PASS}] 
::CONSOLE::CI_Cmd {} "grep $::session packet1.txt > check.txt"
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {5} {Session ID:} "$::session"

# PADT before PADI
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 packet1.pcap} {30}

set f [file exist $LogPath$]
::MISC::ACTS_Dummy_Response {PASS} "$f"
if {"$f" == "0"} {
    file mkdir $LogPath$
} else {
    set g [file exist $LogPath$packet.pcap]
    ::MISC::ACTS_Dummy_Response {PASS} "$g"
    if {"$g" == "0"} {
        file delete $LogPath$packet.pcap
    }
}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet1.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0xa7" "pppoe.code == 0x09"

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-91 Verify recovery of PPPoE after failing of REN connectivity >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-91," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_DATA$} {$wait_time=10}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_DATA$} {$wait_time=10}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1} {$Check_Str_Arr=IP Address : :|172.205.77.}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::IP_WAN}

if { "$::WAN_IP" != "$::IP_WAN" } {
    ::MISC::ACTS_Dummy_Response {PASS} {PPPoE reconnect successfully}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {PPPoE reconnect fail}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-50 Dynamic WAN IP + dynamic DNS >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-50," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"
::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
if {"$Key_Account$" == "To2"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4} {$ipv4_address=0.0.0.0} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
    ::WEB::WebDrv_Mouse_Over {id} {network} {20}
    ::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Window {}
    if {"$Key_Account$" == "Spain"} {
        ::WEB::WebDrv_Check_Value {name} {RN_PrimaryDns} {80.58.61.250} {10} {PASS} {full} 
        ::WEB::WebDrv_Check_Value {name} {RN_SecondaryDns} {80.58.61.254} {10} {PASS} {full} 
    } else {
        ::WEB::WebDrv_Is_Selected {id} {dnsv4Auto} {::value} {20}
        if { "$::value" == "true" } {
            ::MISC::ACTS_Dummy_Response {PASS} {DNS is dynamic} 
        } else {
            ::MISC::ACTS_Dummy_Response {FAIL} {DNS should be dynamic} 
        }
    }
    ::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IP Address : :|172.205.77.}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}] 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.zyxel.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.hinet.net} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}

if {"$Key_Account$" == "Spain"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 80.58.61.254} {$judge=pass}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 80.58.61.250} {$judge=pass}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 172.205.77.1} {$judge=pass}]
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-102 Verify DNS Alternation (Primary and Secondary DNS) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-102," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv4} {$primary_DNS=4.2.2.2} {$secondary_DNS=168.95.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=100}] 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.facebook.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.amazon.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 4.2.2.2} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv4} {$primary_DNS=1.1.1.2} {$secondary_DNS=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=60}] 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.yahoo.com.tw} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.msn.net} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dns && ip.dst == 1.1.1.2} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dns && ip.dst == 8.8.8.8} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-82 Verify WAN MAC address >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-82," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Close_Shell {Shell_3}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_UType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_UType2$
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoed && eth.src == $::WAN_MAC} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-108 Check DNS query on IPv4 only with PPPoE mode >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-108," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=600}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$domain_URL=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=sip.pqatest.com} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.no-ip.com} {$interface=$ifconfig_PPPoE$} {$host_name=$NoIPHostname$} {$username=$NoIPUsername$} {$password=$NoIPPassword$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping $NoIPHostname$ -c 5} {10} {64 bytes from} "$::WAN_IP"

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == cloudcnm.pqatest.com} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == sip.pqatest.com} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == $NoIPHostname$} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-89 After reset CPE to default setting, reboot CPE without any configuration change >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-89," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Get_Value {name} {RN_UserName} {::user} {10}
::WEB::WebDrv_Get_Value {name} {RN_Password} {::pwd} {10}
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::MISC::ACTS_Dummy_Response {PASS} "username is $::user"
::MISC::ACTS_Dummy_Response {PASS} "password is $::pwd"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reboot >"
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {60} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} "$::user" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {RN_Password} "$::pwd" {10} {PASS} {full}
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-54 Verify PPPoE Service Name > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-54," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$service_name=autotest}]
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pppoed.tags.service_name == autotest} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$service_name=}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-88 Check DUT shouldn't send PPPoE PADI to connect when PPPoE username/password is empty >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-88," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=} {$password=}]

set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}    
    ::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {CPE not accept PPPoE username/password is empty}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE should not accept PPPoE username/password is empty}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-120 Dynamic WAN IP + dynamic DNS >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-120," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}

if {"$Key_Account$" == "Spain"} {
    ::WEB::WebDrv_Check_Value {name} {RN_PrimaryDns} {80.58.61.250} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {name} {RN_SecondaryDns} {80.58.61.254} {10} {PASS} {full} 
} else {
    ::WEB::WebDrv_Is_Selected {id} {dnsv4Auto} {::value} {20}
    if { "$::value" == "true" } {
        ::MISC::ACTS_Dummy_Response {PASS} {DNS is dynamic} 
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {DNS should be dynamic} 
    }
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
if {"$VoIP_Support$" == "yes"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.google.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}

if {"$Key_Account$" == "Spain"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 80.58.61.254} {$judge=pass}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 80.58.61.250} {$judge=pass}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 172.205.77.1} {$judge=pass}]
}

if {"$VoIP_Support$" == "yes"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-594 Verify VoIP WAN still can work well after changing WAN type between dynamic IP <-> static IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-594," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$encapsulation=IPoE} {$ipv4_address=172.206.77.120} {$ipv4_netmask=255.255.0.0} {$ipv4_default_gw=172.206.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$encapsulation=IPoE} {$ipv4_address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-595 Verify VoIP WAN still can work well after changing WAN type between dynamic dns <-> static dns >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-595," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$encapsulation=IPoE} {$ipv4_address=0.0.0.0} {$primary_DNS=8.8.8.8} {$secondary_DNS=8.8.4.4}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$encapsulation=IPoE} {$ipv4_address=0.0.0.0} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-606 Verify TR069 WAN still can work well after changing WAN type between dynamic IP <-> static IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-606," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::MISC::ACTS_Dummy_Response {PASS} "$::ret_value"
::USER_DEFINE::CloseTR069ACS {C1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_address=172.205.77.242}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::MISC::ACTS_Dummy_Response {PASS} "$::ret_value"
::USER_DEFINE::CloseTR069ACS {C1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::MISC::ACTS_Dummy_Response {PASS} "$::ret_value"
::USER_DEFINE::CloseTR069ACS {C1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-607 Verify TR069 WAN still can work well after changing WAN type between dynamic dns <-> static dns >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-607," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$primary_DNS=172.202.77.10}]
::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=0.0.0.0} {$primary_DNS=0.0.0.0}]
::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-605 Verify TR069 WAN still can work well after changing WAN type between PPPoE <-> IPoE.(repeat 5 times) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-605," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValue} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "loop $i"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.}]    
    ::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
    ::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
    ::USER_DEFINE::CloseTR069ACS {C1000}

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IP Address : :|172.205.77.}]    
    ::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
    ::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
    ::USER_DEFINE::CloseTR069ACS {C1000}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-609 Verify MGMT WAN still can work well after changing WAN type between PPPoE <-> IPoE (repeat 5 times) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-609," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "loop $i"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_IPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-610 Verify MGMT WAN still can work well after changing WAN type between dynamic IP <-> static IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-610," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_address=172.205.77.242}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-611 Verify MGMT WAN still can work well after changing WAN type between dynamic dns <-> static dns >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-611," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$primary_DNS=172.202.77.10}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=0.0.0.0} {$primary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-585 PPPoE server recover (PPPoE Terminate) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-585," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
set ::pid ""

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "$::WAN_IP"

::CONSOLE::Wait {10} 
::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValue} {::ret_value}
::MISC::ACTS_Dummy_Response {PASS} "TR069 result is $::ret_value"
::USER_DEFINE::CloseTR069ACS {C1000}

# PPPoE server termiante client
while 1 {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
    ::CONSOLE::CI_Capture_Response {} "ps aux | grep $::WAN_IP | grep pppd" {30} {::response}
    regexp {root     (.*?)  } $::response -> ::pid
    ::MISC::ACTS_Dummy_Response {PASS} "$::pid"
    if {"$::pid" == ""} {
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    } else {
        break
    }
}
::TESTLINK::CI_Cmd_More_No_Prompt {} "kill pid $::pid" {20}
::CONSOLE::Wait {5} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP1}
::MISC::ACTS_Dummy_Response {PASS} "$::WAN_IP1"

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValue} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

if {"$::WAN_IP" != "$::WAN_IP1"} {
    ::MISC::ACTS_Dummy_Response {PASS} {after PPPoe terminate client, DUT get ip successfully}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "after PPPoe terminate client, DUT get ip fail, $::WAN_IP, $::WAN_IP1"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-179 Verify IGMP Proxy >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-179," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$IPTV_BTN$} {$Multicast=No}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=FAIL}] {::result}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$IPTV_BTN$} {$Multicast=IGMPv2}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" {::result}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-32 Check max characters for PPPoE username >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-32," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq} {$password=1234}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopq} {10} {PASS} {full} 
::WEB::WebDrv_Set_Value {name} {RN_UserName} {acts} {20}
::WEB::WebDrv_Click {id} {Apply_Btn} {20} {PASS}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ---------------- WAN_IPoE ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-181 Verify WAN MAC address >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-181," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_UType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_UType2$
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=eth.src == $::WAN_MAC} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-193 Check DNS query on IPv4 only with IPoE mode >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-193," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=600}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$domain_URL=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=sip.pqatest.com} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.no-ip.com} {$interface=$ifconfig_IPoE$} {$host_name=$NoIPHostname$} {$username=$NoIPUsername$} {$password=$NoIPPassword$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {60}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_IPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
set TheWAN [string trim $::WAN_IP]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping $NoIPHostname$ -c 5} {10} {64 bytes from} "$TheWAN"

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == cloudcnm.pqatest.com} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == sip.pqatest.com} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.type == 1 && dns.qry.name == $NoIPHostname$} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-168 Verify DUT can send DHCP Option 125 to WAN side >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-168," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=bootp} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {grep 125 packet.txt > check.txt} {10} 
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Option: (125) V-I Vendor-specific Information} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-166 Verify DUT can learn DHCP Option 121 (Static Route) form WAN DHCP server >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-166," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=1.2.31.0|172.205.77.201|255.255.255.0|Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=3.4.51.0|172.205.77.211|255.255.255.0|Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=bootp} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {grep -A 3 'Option: (121)' packet.txt > check.txt} {10} 
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Option: (121) Classless Static Route} {}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {3.4.51.0/24-172.205.77.211} {} {1.2.31.0/24-172.205.77.201} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-165 Verify DUT can learn DHCP Option 43 (acsURL) form WAN DHCP server >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-165," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE}]
::CONSOLE::Wait {30} 


if {"$TR069_GUI_Support$" == "yes"} {
    if {"$Key_Account$" == "Chile"} {
        ::WEB::WebDrv_OpenWebSite {https://$LAN_IP$:8000/cgi-bin/tr69cfg.cgi} {A1000}
        ::CONSOLE::Wait {5} 
    } else {
        ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
        ::CONSOLE::Wait {3}
        ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
        ::CONSOLE::Wait {3}
    }
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {https://172.202.77.11:7547/live/CPEManager/CPEs/genericTR69} {10} {PASS} {partial} 

    if {"$Key_Account$" == "Chile"} {
    } else {
        ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    }
    ::WEB::WebDrv_CloseBrowser {A1000} 
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
    ::CONSOLE::CI_Cmd_Scan {} {tefapp tr69 display} {10} {Server URL:} {https://172.202.77.11:7547/live/CPEManager/CPEs/genericTR69} 
}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=bootp} {$judge=pass}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {grep -A 2 'Option: (43)' packet.txt > check.txt} {10} 
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Option: (43) Vendor-Specific Information} {}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Value: 68747470733a2f2f3137322e3230322e37372e31313a3735} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%                                                           
+CaseStart+
<< ---------------- VDSL ---------------- >>

<TCL_Block_Begin>
if {$VDSL_Support$ == "no" } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::Enable_xDSL_Line {1} {enable}
::MISC::Enable_Network_Interface {WAN1} {Disable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VDSL_Data$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-551 VDSL - Check TCP/UDP open port by Nmap >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-551," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VDSL$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=1-65535} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=7500} {$wait_intervel=60}] {::response}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=30}] {::result}
        if { "$::result" == "7170" } {
            ::MISC::ACTS_Dummy_Response {WARNING} "$::result is opened, but it is TR069 reqest port"
        } elseif { "$::result" != "" } {
            ::MISC::ACTS_Dummy_Response {FAIL} "$::result is opened"
        }
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT without any open port} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-553 VDSL - Check port forwarding rules can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-553," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VDSL$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "$::WAN_IP" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-556 VDSL - Check Remote MGMT function can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-556," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::ACTS_Dummy_Response {PASS} {HB3 only support DNS/ICMP/SSH} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VDSL$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

# Enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$SSH_User$} {$SSH_Pwd$} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

# ICMP WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# ICMP LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# ICMP Both
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-557 VDSL - Check TR-069 function can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-557," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {AutoTest_1234}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {AutoTest_1234} 
::USER_DEFINE::CloseTR069ACS {}

# Upgrade to ras by TR069
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {ACTS} {1234}
::CONSOLE::CI_Cmd_More {} {dir} {10}
::CONSOLE::CI_Cmd_More {} {delete ras.bin} {60}
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$ ras.bin} {60}
::CONSOLE::Wait {10}
::CONSOLE::Close_Shell {Shell_FTP}

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/ras.bin} {ACTS} {1234} {0}
::USER_DEFINE::CloseTR069ACS {C1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ---------------- EtherWAN ---------------- >>

<TCL_Block_Begin>
if {$ETHWAN_Support$ == "no" } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::Enable_xDSL_Line {1} {disable}
::MISC::Enable_Network_Interface {WAN1} {Enable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-560 EtherWAN - Check TCP/UDP open port by Nmap >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-560," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=1-65535} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=7500} {$wait_intervel=60}] {::response}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_General >" [list {$active=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$::response" != ""} {
    set open_list [split $::response " "]
    for {set i 0} {$i < [llength $open_list]} {incr i} {    
        set ::port [lindex $open_list $i]
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Nmap >" [list {$WKS=WAN_WKS} {$PortRange=$::port} {$IP_Type=IPv4} {$ScanIP=$::WAN_IP} {$ExpectWait=30}] {::result}
        if { "$::result" != "" } {
            ::MISC::ACTS_Dummy_Response {FAIL} "$::result is opened"
        }
    }
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT without any open port} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-562 EtherWAN - Check port forwarding rules can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-562," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "$::WAN_IP" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-565 EtherWAN - Check Remote MGMT function can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-565," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::ACTS_Dummy_Response {PASS} {HB3 only support DNS/ICMP/SSH} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

# Enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$SSH_User$} {$SSH_Pwd$} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

# ICMP WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# ICMP LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# ICMP Both
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-566 EtherWAN - Check TR-069 function can work well >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-566," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {AutoTest_1234}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {AutoTest_1234} 
::USER_DEFINE::CloseTR069ACS {}

# Upgrade to ras by TR069
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {ACTS} {1234}
::CONSOLE::CI_Cmd_More {} {dir} {10}
::CONSOLE::CI_Cmd_More {} {delete ras.bin} {60}
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$ ras.bin} {60}
::CONSOLE::Wait {10}
::CONSOLE::Close_Shell {Shell_FTP}

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/ras.bin} {ACTS} {1234} {0}
::USER_DEFINE::CloseTR069ACS {C1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ---------------- PON ---------------- >>

<TCL_Block_Begin>
if {$PON_Support$ == "no" } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$PON_Switch_Type$" == "COM"} {
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
    ::CONSOLE::Wait {20}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-30522 GPON cable Plug/Unplug (same OLT and same PON port) >
# :: Version : 1 ::

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-30522," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "$::WAN_IP"
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "loop $i"
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ OFF 1}
        ::CONSOLE::Wait {10} 
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
        ::CONSOLE::Wait {30}
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {off}
            ::CONSOLE::Wait {10} 
            ::MISC::Setup_Power_Switch {SW_2} {on}
            ::CONSOLE::Wait {30}
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {off}
            ::CONSOLE::Wait {10} 
            ::MISC::Setup_Power_Switch {SW_4} {on}
            ::CONSOLE::Wait {30}
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::MISC::ACTS_Dummy_Response {PASS} "::WAN_IP"
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-511 Support fragmentation of the IP packets >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-511," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=100}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.205.77.11} {PASS} {2500} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=ip.flags.mf == 1} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


# %ENV-%
# +CaseStart+
# < UTP-414 ONT detail Info (Registered >
# # Version : 1

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-414," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }

# set ttlfile [ open "$MOD_PATH$OLT_command.ttl" w]
# puts $ttlfile "connect '$OLT_IP$ /nossh /T=1'"
# puts $ttlfile "wait 'login:'"
# puts $ttlfile "sendln '$OLT_username$'"
# puts $ttlfile "wait 'password:'"
# puts $ttlfile "sendln '$OLT_Password$'"
# puts $ttlfile "logopen '$LogPath$\display.log' 0 0"
# puts $ttlfile "pause 2"
# puts $ttlfile "sendln 'show equipment ont status pon ont $ONT_Number$'"
# puts $ttlfile "pause 5"
# puts $ttlfile "sendln 'logout'"
# close $ttlfile

# set bat [open "$MOD_PATH$start_marco.bat" w]
# puts $bat "\"C:/Program Files/teraterm/ttpmacro.exe\" $MOD_PATH$OLT_command.ttl"
# close $bat

# exec "$MOD_PATH$start_marco.bat" &
# ::CONSOLE::Wait {20} 

# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}] 
# ::CONSOLE::CI_Capture_Response {} {sys atsh} {10} {::response} 
# regexp {GPON Serial Number       : (.*?)\n} $::response -> ::GPON_SN

# set temp [string range $::GPON_SN 0 3]
# set a [string range $::GPON_SN 4 [string length $::GPON_SN]]
# append temp ":"
# append temp $a
# package require json
# set fp [open "$LogPath$\display.log" r]
# set file_data [read $fp]
# ::MISC::ACTS_Dummy_Response {PASS} "$file_data"


# # if { [string first "$temp up       up" "$file_data"] > "0" } {
# #     ::MISC::ACTS_Dummy_Response {PASS} {OLT show correct ONT info}
# #     ::MISC::ACTS_Dummy_Response {PASS} "$file_data"
# # } else {
# #     ::MISC::ACTS_Dummy_Response {FAIL} {OLT show wrong ONT info}
# #     ::MISC::ACTS_Dummy_Response {FAIL} "$file_data"
# # }
# close $fp

# <TCL_Block_End>
# -CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ---------------- IPv6_WAN ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-131 Click the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-131," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$::103}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 3} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-133 Click the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-133," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1 && dhcpv6.option.type == 25} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 7 && dhcpv6.option.type == 25} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-132 Unclick the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-132," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_IPv6=SLAAC}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmpv6.type == 134 && icmpv6.opt.prefix == $PPP_IPv6_Prefix$::} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-134 Unclick the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-134," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=no}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 25} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-126 Check DUID type and the link-layer address of DUID, and it should be fixed every reboot >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-126," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_LType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_LType2$
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC" 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=700}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet1.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC"

# PADI>PADO>PADR>PADS
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet1.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0x09" "pppoe.code == 0x07"
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0x07" "pppoe.code == 0x19"
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "pppoe.code == 0x19" "pppoe.code == 0x65"

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-128 Dynamic DNS servers assignment for WAN interface >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-128," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv4/IPv6} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.dns_server == 2001:b021:2d:202::77:1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping6 ipv6test.autopqa.net -c 10} {15} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-141 Check GUI status page have IPv6 address information >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-141," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-146 Dynamic DNS servers assignment for WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-146," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.dns_server == 2001:b021:2d:202::77:1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping6 ipv6test.autopqa.net -c 5} {10} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-144 Check DUID type and the link-layer address of DUID, and it should be fixed every reboot >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-144," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_LType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_LType2$
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC" 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=700}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet1.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC"

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-145 Check DUT doesn't need assign IPv6 gateway manaully if WAN interface is PPPoE mode >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-145," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}

set result [::WEB::WebDrv_Click {name} {wan_IPv6DefGw} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {PPPoE should not assign IPv6 gateway}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {PPPoE don't need assign IPv6 gateway}
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-149 Click the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-149," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 3} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-150 Unclick the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-150," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=SLAAC}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmpv6.type == 134 && icmpv6.opt.prefix == $PPP_IPv6_Prefix$::} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-151 Click the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-151," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1 && dhcpv6.option.type == 25} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 7 && dhcpv6.option.type == 25} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-152 Unclick the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-152," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=no}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 25} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%                                                           
+CaseStart+
<< ---------------- IPv6_WAN_IPoE ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-216 Check both IPv4/IPv6 service can work respectively >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-216," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$Delegate_prefix=Internet ($IPoE_Delegated_IPv6_Prefix1$::/64)} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Wait {60} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
if {[string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $IPoE_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$IPv6_Domain$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://domain.pqatest.com} {PASS}
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=192.168.100.1} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::CONSOLE::Wait {10} 
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {192.168.100.33} {255.255.255.0} {192.168.100.1} {1}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {192.168.100.1} {::wks_ip} {PASS} 
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $IPoE_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$IPv6_Domain$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://domain.pqatest.com} {PASS}
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.100.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-217 Configure WAN interface to IPoE mode with dynamic IP address >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-217," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$Delegate_prefix=Internet ($IPoE_Delegated_IPv6_Prefix1_Len$)} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {10} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::WKS_IPv6}
if {[string first $IPoE_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}

::DOSAPP::Dos_Cmd_Capture {ping -6 $NAT_WAN2_IPv6_Address$} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from $NAT_WAN2_IPv6_Address$} {$Result=PASS}]
::DOSAPP::Dos_Cmd_Capture {ping -6 $IPv6_Domain$} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from $NAT_WAN2_IPv6_Address$} {$Result=PASS}]

::WEB::OpenWebSite_Ping_Check {http://$IPv6_Domain$} 
::WEB::CloseWebSite

# ::CONSOLE::Wait {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
# if {[string first $IPoE_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
#     ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
# }

# ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
# ::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-218 Configure WAN interface with static IP address >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-218," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Static} {$IPv6_Address=$IPoE_IPv6_Prefix$::103} {$Prefix_length=64} {$IPv6_Default_GW=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS1=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS2=$NAT_WAN2_IPv6_Address$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$::103}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-220 Dynamic DNS servers assignment for WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-220," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.dns_server == 2001:b021:2d:205::77:1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping -6 $IPv6_Domain$ -c 5} {10} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-215 Check GUI status page have IPv6 address information >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-215," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-230 Check if change to IPv6 only then back to IPv6/IPv4 Dual Stack can work normally >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-230," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}] 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-219 Check DUID type and the link-layer address of DUID, and it should be fixed every reboot > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-219," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_LType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_LType2$
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC" 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=700}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet1.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC"

# recovery
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {120} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-221 DNS servers manual configuration on WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-221," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Static} {$IPv6_Address=$IPoE_IPv6_Prefix$::103} {$Prefix_length=64} {$IPv6_Default_GW=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS1=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS2=$NAT_WAN2_IPv6_Address$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$::103++IPv6 WAN DNS1:|2001:b021:2d:205::77:1++IPv6 WAN DNS2:|2001:b021:2d:205::77:1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping -6 $IPv6_Domain$ -c 5} {10} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-223 Click the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-223," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 3} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-224 Unclick the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-224," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=SLAAC} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmpv6.type == 134 && icmpv6.opt.prefix == $IPoE_IPv6_Prefix$::} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-225 Click the option of Prefix Delegation(IA_PD) > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-225," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1 && dhcpv6.option.type == 25} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 7 && dhcpv6.option.type == 25} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-226 Unclick the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-226," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 25} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-233 Configure WAN interface to IPoE mode with dynamic IP address >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-233," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

# ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
# ::CONSOLE::CI_Cmd {} {reboot} 
# ::CONSOLE::Wait {60} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$Delegate_prefix=Internet ($IPoE_Delegated_IPv6_Prefix1_Len$)} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {10} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::WKS_IPv6}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $IPoE_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}

::DOSAPP::Dos_Cmd_Capture {ping -6 $NAT_WAN2_IPv6_Address$} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from $NAT_WAN2_IPv6_Address$} {$Result=PASS}]
::DOSAPP::Dos_Cmd_Capture {ping -6 $IPv6_Domain$} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from $NAT_WAN2_IPv6_Address$} {$Result=PASS}]

::WEB::OpenWebSite_Ping_Check {http://$IPv6_Domain$} 
::WEB::CloseWebSite

# ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
# ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$IPv6_Domain$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
# ::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-232 Check GUI status page have IPv6 address information >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-232," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-236 Dynamic DNS servers assignment for WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-236," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.dns_server == 2001:b021:2d:205::77:1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping -6 $IPv6_Domain$ -c 5} {10} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-239 Click the option of Get IPv6 Address From DHCPv6 Server(IA_NA) > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-239," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 3} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-240 Unclick the option of Get IPv6 Address From DHCPv6 Server(IA_NA) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-240," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=SLAAC} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmpv6.type == 134 && icmpv6.opt.prefix == $IPoE_IPv6_Prefix$::} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-244 Check if change to IPv6/IPv4 Dual Stack then back to IPv6 Only can work normally >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-244," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}] 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-241 Click the option of Prefix Delegation(IA_PD) >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-241," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1 && dhcpv6.option.type == 25} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 7 && dhcpv6.option.type == 25} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-242 Unclick the option of Prefix Delegation(IA_PD) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-242," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 25} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-234 Configure WAN interface with static IP address >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-234," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Static} {$IPv6_Address=$IPoE_IPv6_Prefix$::103} {$Prefix_length=64} {$IPv6_Default_GW=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS1=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS2=$NAT_WAN2_IPv6_Address$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$::103}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$NAT_WAN2_IPv6_Address$} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$IPv6_Domain$ --interface eth1} {PASS} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-235 Check DUID type and the link-layer address of DUID, and it should be fixed every reboot >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-235," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_LType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_LType2$
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dhcpv6.msgtype == 1} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'Link-layer address' packet1.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {Link-layer address:} "$::WAN_MAC"

# recovery
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-237 DNS servers manual configuration on WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-237," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv6} {$ipv6_Type=Static} {$IPv6_Address=$IPoE_IPv6_Prefix$::103} {$Prefix_length=64} {$IPv6_Default_GW=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS1=$NAT_WAN2_IPv6_Address$} {$IPv6_DNS2=$NAT_WAN2_IPv6_Address$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IPv6 Global IP:|$IPoE_IPv6_Prefix$::103++IPv6 WAN DNS1:|2001:b021:2d:205::77:1++IPv6 WAN DNS2:|2001:b021:2d:205::77:1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ping -6 $IPv6_Domain$ -c 5} {10} {64 bytes from} {2001:b021:2d:205::77:1} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- System ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3818 Check packet sent and packet received for WAN >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3818," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

::WEB::WebDrv_Mouse_Over {id} {systemMonitoring} {20}
::WEB::WebDrv_Click {id} {systemMonitoring-trafficStatus} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[4]} {::data_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[6]} {::byte_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[7]} {::data_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[9]} {::byte_rece} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_Mouse_Over {id} {systemMonitoring} {20}
::WEB::WebDrv_Click {id} {systemMonitoring-trafficStatus} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[4]} {::data1_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[6]} {::byte1_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[7]} {::data1_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[9]} {::byte1_rece} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {[expr $::data1_sent - $::data_sent] > 0 && [expr $::byte1_sent - $::byte_sent] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "sent traffic is correct, $::data1_sent, $::data_sent, $::byte1_sent, $::byte_sent"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "sent traffic is incorrect, $::data1_sent, $::data_sent, $::byte1_sent, $::byte_sent"
}

if {[expr $::data1_rece - $::data_rece] > 0 && [expr $::byte1_rece - $::byte_rece] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "receive traffic is correct, $::data1_rece, $::data_rece, $::byte1_rece, $::byte_rece"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "receive traffic is incorrect, $::data1_rece, $::data_rece, $::byte1_rece, $::byte_rece"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3819 Check packet sent and packet received for each WAN interface > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3819," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]

::WEB::WebDrv_Mouse_Over {id} {systemMonitoring} {20}
::WEB::WebDrv_Click {id} {systemMonitoring-trafficStatus} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[4]} {::voip_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[6]} {::voip_byte_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[4]} {::iptv_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[6]} {::iptv_byte_sent} {10} 

::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[7]} {::voip_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[9]} {::voip_byte_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[7]} {::iptv_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[9]} {::iptv_byte_rece} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< VoIP_UnRegister_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" {::result}

::WEB::WebDrv_Mouse_Over {id} {systemMonitoring} {20}
::WEB::WebDrv_Click {id} {systemMonitoring-trafficStatus} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[4]} {::voip1_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[6]} {::voip1_byte_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[4]} {::iptv1_sent} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[6]} {::iptv1_byte_sent} {10} 

::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[7]} {::voip1_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[4]/td[9]} {::voip1_byte_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[7]} {::iptv1_rece} {10} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[5]/td[9]} {::iptv1_byte_rece} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {[expr $::voip1_sent - $::voip_sent] > 0 && [expr $::voip1_byte_sent - $::voip_byte_sent] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "voip sent traffic is correct, $::voip1_sent, $::voip_sent, $::voip1_byte_sent, $::voip_byte_sent"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "voip sent traffic is incorrect, $::voip1_sent, $::voip_sent, $::voip1_byte_sent, $::voip_byte_sent"
}
if {[expr $::voip1_rece - $::voip_rece] > 0 && [expr $::voip1_byte_rece - $::voip_byte_rece] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "voip receive traffic is correct, $::voip1_rece, $::voip_rece, $::voip1_byte_rece, $::voip_byte_rece"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "voip receive traffic is incorrect, $::voip1_rece, $::voip_rece, $::voip1_byte_rece, $::voip_byte_rece"
}

if {[expr $::iptv1_sent - $::iptv_sent] > 0 && [expr $::iptv1_byte_sent - $::iptv_byte_sent] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "iptv sent traffic is correct, $::iptv1_sent, $::iptv_sent, $::iptv1_byte_sent, $::iptv_byte_sent"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "iptv sent traffic is incorrect, $::iptv1_sent, $::iptv_sent, $::iptv1_byte_sent, $::iptv_byte_sent"
}
if {[expr $::iptv1_rece - $::iptv_rece] > 0 && [expr $::iptv1_byte_rece - $::iptv_byte_rece] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "iptv receive traffic is correct, $::iptv1_rece, $::iptv_rece, $::iptv1_byte_rece, $::iptv_byte_rece"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "iptv receive traffic is incorrect, $::iptv1_rece, $::iptv_rece, $::iptv1_byte_rece, $::iptv_byte_rece"
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3841 Check IPv4 routing table >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3841," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=0.0.0.0|172.205.77.254|0.0.0.0|Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=$Default_DNS_1$|172.205.77.254|255.255.255.255|Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=$Default_DNS_2$|172.205.77.254|255.255.255.255|Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Routing Table} {$Check_Str_Arr=172.206.77.1|172.206.77.1|255.255.255.255|$VoIP_Name$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3778 [Device Information] Create Multi WAN, Check WAN Information >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3778," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_UType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_UType2$
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1} {$Check_Str_Arr=Encapsulation:|PPPoE++IPv6/IPv4 Dual Stack|DualStack++MAC Address:|$::WAN_MAC++IP Address : :|172.205.77.++IP Subnet Mask : :|255.255.255.255++Default Gateway:|172.205.77.254++Primary DNS:|$Default_DNS_1$++Secondary DNS:|$Default_DNS_2$++IPv6 Global IP:|$PPP_IPv6_Prefix$:++IPv6 Prefix Length:|64++IPv6 WAN DNS1:|2001:b021:2d:202::77:1}]

# VoIP
if {[string first "3," "$VoIP_BTN$"] != -1 } {
    set temp [split $DUT_LAN_MAC_UType2$ ":"]
    set char [format 0x%x [expr 0x[lindex $temp 5]+2]]
    set a [string range $char 2 3]
    set ::wanmac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|2} {$Check_Str_Arr=Encapsulation:|ENET ENCAP++IPv6/IPv4 Dual Stack|IPv4++MAC Address:|$::wanmac++IP Address : :|172.206.77.++IP Subnet Mask : :|255.255.255.0++Default Gateway:|172.206.77.1++Primary DNS:|172.206.77.1}]
} else {
    set temp [split $DUT_LAN_MAC_UType2$ ":"]
    set char [format 0x%x [expr 0x[lindex $temp 5]+3]]
    set a [string range $char 2 3]
    set ::wanmac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=Encapsulation:|ENET ENCAP++IPv6/IPv4 Dual Stack|IPv4++MAC Address:|$::wanmac++IP Address : :|172.206.77.++IP Subnet Mask : :|255.255.255.0++Default Gateway:|172.206.77.1++Primary DNS:|172.206.77.1}]
}

# IPTV
if {[string first "2," "$IPTV_BTN$"] != -1 } {
    set temp [split $DUT_LAN_MAC_UType2$ ":"]
    set char [format 0x%x [expr 0x[lindex $temp 5]+3]]
    set a [string range $char 2 3]
    set ::wanmac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=Encapsulation:|ENET ENCAP++IPv6/IPv4 Dual Stack|IPv4++MAC Address:|$::wanmac++IP Address : :|$IPTV_IP$++Primary DNS:|0.0.0.0}]
} else {
    set temp [split $DUT_LAN_MAC_UType2$ ":"]
    set char [format 0x%x [expr 0x[lindex $temp 5]+2]]
    set a [string range $char 2 3]
    set ::wanmac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|2} {$Check_Str_Arr=Encapsulation:|ENET ENCAP++IPv6/IPv4 Dual Stack|IPv4++MAC Address:|$::wanmac++IP Address : :|$IPTV_IP$++Primary DNS:|0.0.0.0}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3779 [Device Information] Plug in Multi LAN client, Check LAN Information > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3779," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Wait {120} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=link}] {::lan1_link_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::lan1_IPv6}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {60} {dhclient -6 eth1} {60}
::CONSOLE::Get_WKS_IP {DMZ_WKS} {eth1} {::dmz_ip} 
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {eth1} {::dmz_mac} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=DMZ_WKS} {$Interface=eth1} {$IPv6_Type=link}] {::dmz_link_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=DMZ_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::dmz_IPv6}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {60} {dhclient -6 eth1} {60}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {eth1} {::lan2_ip} 
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {eth1} {::lan2_mac} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=eth1} {$IPv6_Type=link}] {::lan2_link_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::lan2_IPv6}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Network Map} {$Check_Str_Arr=DMZ_WKS|$::dmz_ip|$::dmz_link_IPv6|$::dmz_IPv6|$::dmz_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Network Map} {$Check_Str_Arr=LAN1_WKS|$::lan1_ip|$::lan1_link_IPv6|$::lan1_IPv6|$::lan1_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Network Map} {$Check_Str_Arr=LAN2_WKS|$::lan2_ip|$::lan2_link_IPv6|$::lan2_IPv6|$::lan2_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3777 [Device Information] Check the related information in status page >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3777," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Check_Str_Arr=Host Name :|$Adv_GUI_User$++Model Name:|$ModelName$++Firmware Version:|$Firmware_Version$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3798 Check if Chrome can open GUI in specific timing via [fe80::1] >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3798," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=link}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite "http://\[$::WAN_IP\]" {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$password=$GUI_Pwd$}]
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {xpath} {//*[@id="home"]/img} {10} {PASS} ]
::MISC::ACTS_Dummy_Response {PASS} "$result"
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Login fail}
}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3791 [System Status] Reboot device and wait for 5 sec, check System Up Time >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3791," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Wait {180} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Get_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[2]/table[1]/tbody/tr[3]/td[2]} {::value} {10} 
if {"$::value" == "0 day: 0 hour: 3 minutes"} {
    ::MISC::ACTS_Dummy_Response {PASS} "System up time is correct, $::value"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "System up time is wrong, $::value"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3797 check logout button can work well >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3797," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::CONSOLE::Wait {10} 
    set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
    if {"$result" == "0"} {
        ::MISC::ACTS_Dummy_Response {FAIL} {Logout fail}
    } else {
        ::MISC::ACTS_Dummy_Response {PASS} {Logout success}        
    }
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Login fail}
}
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3788 [Interface] Check WAN Status and Rate >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3788," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

if {"$PON_Support$" == "yes" } {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ OFF 1}
        ::CONSOLE::Wait {10} 
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {off}
            ::CONSOLE::Wait {10} 
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {off}
            ::CONSOLE::Wait {10} 
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Get_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[2]/table[1]/tbody/tr[4]/td[2]} {::value} {10} 
if {"$::value" == "0 day: 0 hour: 0 minute: 0 second"} {
    ::MISC::ACTS_Dummy_Response {PASS} "PON disconnect, up time is correct, $::value"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "PON disconnect, up time is wrong, $::value"
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 

if {"$PON_Support$" == "yes" } {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
        ::CONSOLE::Wait {30} 
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {on}
            ::CONSOLE::Wait {30} 
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {on}
            ::CONSOLE::Wait {30} 
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Get_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[2]/table[1]/tbody/tr[4]/td[2]} {::value} {10}

set temp [split $::value ":"]
set char [string trim [lindex $temp 3]]
set sec [string range $char 0 1]
if {"$sec" < "60"} {
    ::MISC::ACTS_Dummy_Response {PASS} "PON connect, up time is correct, $::value"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "PON connect, up time is wrong, $::value"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3857 Modify Admin password >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3857," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Case 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=ABCdefghijklmnopqrstuvxyz123456}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$} {$expected=FAIL}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {old password should login fail}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {old password login fail}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=ABCdefghijklmnopqrstuvxyz123456}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
# Case 2
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=ABCdefghijklmnopqrstuvxyz123456} {$new_pwd=123456789012345678901234567890Ab}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=ABCdefghijklmnopqrstuvxyz123456} {$expected=FAIL}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {old password should login fail}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {old password login fail}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=123456789012345678901234567890Ab}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
# Case 3
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=123456789012345678901234567890Ab} {$new_pwd=!@123456789012345678901234567890}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=123456789012345678901234567890Ab} {$expected=FAIL}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {old password should login fail}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {old password login fail}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=!@123456789012345678901234567890}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3848 Change password via eWC, enter different password of old and new >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3848," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Case 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=ABCdefghijklmnopqrstuvxyz123456}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=ABCdefghijklmnopqrstuvxyz123456}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
# Case 2
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=ABCdefghijklmnopqrstuvxyz123456} {$new_pwd=123456789012345678901234567890Ab}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=123456789012345678901234567890Ab}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
# Case 3
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=123456789012345678901234567890Ab} {$new_pwd=!@123456789012345678901234567890}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=!@123456789012345678901234567890}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}

# Cancel btn can work
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {User Account} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {UserAccount_oldpassword} {!@123456789012345678901234567890} {20}
::WEB::WebDrv_Set_Value {id} {UserAccount_Password} {87654321ZY} {20}
::WEB::WebDrv_Set_Value {id} {UserAccount_PasswordConfirm} {{87654321ZY}} {20}
::WEB::WebDrv_Click {id} {Cancel_ID} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {UserAccount_oldpassword} {} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {UserAccount_Password} {} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {UserAccount_PasswordConfirm} {} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3849 Change password via eWC, login with new password >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3849," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=Zyad1234}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=Zyad1234}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3850 Change password via eWC, login with old password >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3850," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=Zyad1234}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$} {$expected=FAIL}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {old password should login fail}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {old password login fail}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3852 Login with changed account, check the GUI will redirect to home page not password change page >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3852," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=Zyad1234}]
::CONSOLE::Wait {5} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=Zyad1234}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {GUI will redirect to Home page after login with new password}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI should redirect to Home page after login with new password}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3853 Check the new password can work after enter the new password in the Password Change Page >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-3853," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=88888888B}]
::CONSOLE::Wait {5} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=88888888B}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {new password login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {new password should login success}        
}
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3874 Login with changed account, check the GUI will redirect to Login page not password change page >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3874," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=Zyad1234}]
::CONSOLE::Wait {5} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=Zyad1234}]
set result [::WEB::WebDrv_Click {id} {security} {20} {PASS}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {GUI will redirect to Home page after login with new password}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI should redirect to Home page after login with new password}        
}
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3882 Check login password format and length >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3882," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# 8-64
# contain at least two kinds of characters

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=zyad123}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {Password length is 8-64, less or more block success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Password length is 8-64, less or more should be block}
    ::CONSOLE::Wait {10} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=zyad123}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=zyad123} {$new_pwd=$Adv_GUI_Pwd$}]
    ::CONSOLE::Wait {10} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$Adv_GUI_Pwd$} {$new_pwd=88888888}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {Password contain at least two kinds of characters, invlid rule block success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Password contain at least two kinds of characters, invlid rule should be block}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Local
::TESTLINK::CI_Cmd_More_No_Prompt {} {} {2} {sys atbr} {2}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-3883 Check DUT will auto synchronize and get correct system time with NTP server after got WAN IP address >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-3883," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {TimeServerAddr} {time.google.com} {20}
::WEB::WebDrv_List_Select {id} {uiViewdateToolsTZ_Text} {option_value} {+08:00} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# Get DUT Date/Time
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {systemtime} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# trans datetime to seconds
set dutdate "[clock scan $::value -format {%d %b %Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "DUT datetime is $dutdate"

# Get Now
set ::time ""
set ::date ""
::MISC::Get_System_Time {::time}
::MISC::Get_System_Date {::date} {europe}
set date_time "$::date $::time"
set nowdate "[clock scan $date_time -format {%d-%m-%Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "Now datetime is $nowdate"

set count [expr abs ([expr $nowdate - $dutdate])]
if { $count < 60} {
    ::MISC::ACTS_Dummy_Response {PASS} "time sync success, $count"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "time sync fail, $count"
}

# get month
set month "[clock format $nowdate -format %m]"
::MISC::ACTS_Dummy_Response {PASS} "$month"

# Enable DaylightSaving
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Daylight_Active} {true} {20} {PASS}
if { $month == "12" || $month == "01" } {
    ::WEB::WebDrv_List_Select {id} {startMonth_Text} {option_value} {11} {20}
    ::WEB::WebDrv_List_Select {id} {endMonth_Text} {option_value} {2} {20}
} else {
    ::WEB::WebDrv_List_Select {id} {startMonth_Text} {option_value} {1} {20}
    ::WEB::WebDrv_List_Select {id} {endMonth_Text} {option_value} {12} {20}
}
::WEB::WebDrv_List_Select {id} {endWeek_Text} {option_value} {5} {20}
::WEB::WebDrv_Set_Value {id} {startTime_Text} {0} {20}
::WEB::WebDrv_Set_Value {id} {endTime_Text} {0} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# Get DUT Date/Time
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {systemtime} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# trans datetime to seconds
set dutdate "[clock scan $::value -format {%d %b %Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "DUT datetime is $dutdate"

# Get Now
set ::time ""
set ::date ""
::MISC::Get_System_Time {::time}
::MISC::Get_System_Date {::date} {europe}
set date_time "$::date $::time"
set nowdate "[clock scan $date_time -format {%d-%m-%Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "Now datetime is $nowdate"

set count [expr abs ([expr $nowdate - $dutdate])]
if { $count > 3540 && $count < 3660 } {
    ::MISC::ACTS_Dummy_Response {PASS} "Daylight Savings time sync success, $count"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "Daylight Savings time sync fail, $count"
}

# Disable DaylightSaving
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Daylight_Active} {false} {20} {PASS}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# Get DUT Date/Time
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {systemtime} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# trans datetime to seconds
set dutdate "[clock scan $::value -format {%d %b %Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "DUT datetime is $dutdate"

# Get Now
set ::time ""
set ::date ""
::MISC::Get_System_Time {::time}
::MISC::Get_System_Date {::date} {europe}
set date_time "$::date $::time"
set nowdate "[clock scan $date_time -format {%d-%m-%Y %H:%M:%S}]"
::MISC::ACTS_Dummy_Response {PASS} "Now datetime is $nowdate"

set count [expr abs ([expr $nowdate - $dutdate])]
if { $count < 60} {
    ::MISC::ACTS_Dummy_Response {PASS} "Disable Daylight Savings time sync success, $count"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "Disable Daylight Savings time sync fail, $count"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3636 Modify the MAC address by using ATWZ in debug mode >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3636," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_UType2$ ":"]
if {[string first "3," "$VoIP_BTN$"] != -1 } {
    set char [format 0x%x [expr 0x[lindex $temp 5]+2]]
    set a [string range $char 2 3]
    set ::wan2mac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    set char [format 0x%x [expr 0x[lindex $temp 5]+3]]
    set a [string range $char 2 3]
    set ::wan3mac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
} else {
    set char [format 0x%x [expr 0x[lindex $temp 5]+3]]
    set a [string range $char 2 3]
    set ::wan2mac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
    set char [format 0x%x [expr 0x[lindex $temp 5]+2]]
    set a [string range $char 2 3]
    set ::wan3mac "[lindex $temp 0]:[lindex $temp 1]:[lindex $temp 2]:[lindex $temp 3]:[lindex $temp 4]:$a"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$} {10}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_UType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_UType2$
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$}
::CONSOLE::CI_Cmd_Scan {} {ifconfig br0} {10} {HWaddr} {$DUT_LAN_MAC_UType2$}
::CONSOLE::CI_Cmd_Scan {} {ifconfig $ifconfig_IPoE$} {10} {HWaddr} "$::WAN_MAC"
::CONSOLE::CI_Cmd_Scan {} {ifconfig $ifconfig_VoIP$} {10} {HWaddr} "$::wan2mac"
::CONSOLE::CI_Cmd_Scan {} {ifconfig $ifconfig_IPTV$} {10} {HWaddr} "$::wan3mac"

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3637 Change country code in debug mode then check related settings >
# Version 4

<TCL_Block_Begin>
if {[string first "UTP-3637," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
if {[string first "2742" "$ModelName$"] == -1 } {
    ::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$ $other_Country_Code$ 01 00 8} {10}
} else {
    ::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$, $other_Country_Code$, 01, 00, 8} {10}
}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}] 
if {[string first "2742" "$ModelName$"] == -1 } {
    ::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$} {Default CountryCode} {$other_Country_Code$}
} else {
    ::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$} {Default Country Code} {$other_Country_Code$}
}

# Change back
for {set i 1} {$i < 6} {incr i} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
    ::CONSOLE::Wait {5}
    if {[string first "2742" "$ModelName$"] == -1 } {
        ::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$ $Country_Code$ 01 00 8} {10}
    } else {
        ::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$, $Country_Code$, 01, 00, 8} {10}
    }
    ::CONSOLE::CI_Cmd {} {atgo}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}] 
    if {[string first "2742" "$ModelName$"] == -1 } {
        set result [::TESTLINK::CI_Cmd_Scan_No_Prompt {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$} {Default CountryCode} {$Country_Code$}]
    } else {
        set result [::TESTLINK::CI_Cmd_Scan_No_Prompt {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$} {Default Country Code} {$Country_Code$}]
    }
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {change country code success}
        break
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {change country code fail}
    }
}
<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3640 ATSH to check firmware version >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3640," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_Scan {} {atsh} {10} {$Firmware_Title$} {$Firmware_Version$}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3638 ATSN to modify serial Number >
# Version 3

<TCL_Block_Begin>
if {[string first "UTP-3638," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atsn $Serial_Number$} {10}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}] 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Serial Number} {$Serial_Number$}

# Chile SN in GUI will always be MAC+1, not effect by atsn, so skip GUI check
if {"$Key_Account$" != "Chile"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
    # Serial Number
    ::WEB::WebDrv_Check_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[1]/div/table/tbody/tr[7]/td[2]} {$Serial_Number$} {20} {PASS} {full}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atsn $CPEID$} {10}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}] 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Serial Number} {$CPEID$}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3662 MAC ID address read/write (TE) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3662," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Debug_Mode >"
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_UType1$} {10}
::CONSOLE::CI_Cmd_Scan {} {atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$}
::CONSOLE::CI_Cmd_More {} {atbt 1} {10} {atwz $DUT_LAN_MAC_LType1$} {10}
::CONSOLE::CI_Cmd_Scan {} {atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$}
::CONSOLE::CI_Cmd {} {atgo}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}] 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3663 Serial number read/write (TE) > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3663," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {sys atbt 1} {10} {sys atsn $DUT_LAN_MAC_LType1$} {10}
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Serial Number} {$DUT_LAN_MAC_UType1$}
::CONSOLE::CI_Cmd {} {reboot} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Serial Number} {$DUT_LAN_MAC_UType1$}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3655 check reboot work well via CLI > 
# Version 3

<TCL_Block_Begin>
if {[string first "UTP-3655," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# SSID
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 2.4GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Get_Value {id} {SSID} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# SSID
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 2.4GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {SSID} "$::value" {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3641 Check firmware version >
# Version 3

<TCL_Block_Begin>
if {[string first "UTP-3641," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]

# set temp [split $Firmware_Version$ "_"]
# set version [lindex $temp 2]
# set part [lindex $temp 3]
# set a [ string range $version 0 0]
# set b [ string range $version 1 2]
# set c [ string range $version 3 5]
# set d [ string range $version 6 6]
# set e [ string range $part 0 [expr [string length $part]-2]]
# set fw_ver "V$a.$b\($c.$d\)$e"

::CONSOLE::CI_Cmd_Scan {} {sys atsh} {20} {$Firmware_Title$} {$Firmware_Version$}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3645 Check Ethernet port status >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-3645," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_Scan {} {lan portstatus} {10} {LAN1	     1G	        Up	  Full} {}
::CONSOLE::CI_Cmd_Scan {} {lan portstatus} {10} {LAN2	     1G	        Up	  Full} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3672 Ethernet Port function check (TE) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3672," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_Scan {} {lan portstatus} {10} {LAN2	     1G	        Up	  Full} {}
::CONSOLE::CI_Cmd_Scan {} {lan portstatus} {10} {LAN3	     1G	        Up	  Full} {}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3674 SIP function check (TE) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3674," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_Scan {} {voice set} {10} {proxy} {SIP proxy server}
::CONSOLE::CI_Cmd_Scan {} {voice set} {10} {sipDomain} {SIP user agent domain}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3678 Support route command via CLI >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3678," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {0.0.0.0         172.205.77.254} {$ifconfig_PPPoE$}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {$Default_DNS_1$    172.205.77.254} {$ifconfig_PPPoE$}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {$Default_DNS_1$    172.205.77.254} {$ifconfig_PPPoE$}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {172.205.77.254  0.0.0.0} {$ifconfig_PPPoE$}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {172.206.77.0    0.0.0.0} {$ifconfig_VoIP$}
::CONSOLE::CI_Cmd_Scan {} {net route disp} {10} {$LAN_Subnet$.0     0.0.0.0} {br0}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3646 Check Wireless Enable Disable >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3646," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_More {} {wlan config status 1 down} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Status} {Disabled}
::CONSOLE::CI_Cmd_More {} {wlan config status 1 up} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Status} {Enabled}

::CONSOLE::CI_Cmd_More {} {wlan5 config status -i 0 down} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Status} {Disabled}
::CONSOLE::CI_Cmd_More {} {wlan5 config status -i 0 up} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Status} {Enabled}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3647 Check Wireless SSID > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3647," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_More {} {wlan config ssid 1 Test5678} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {SSID} {Test5678}

::CONSOLE::CI_Cmd_More {} {wlan5 config ssid -i 0 Test5G1234} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {SSID} {Test5G1234}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3648 Check Wireless security mode >
# Version 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3648," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}

# 2.4G
::CONSOLE::CI_Cmd_More {} {wlan config security 1 9} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {OpenEnhancedOpen}

::CONSOLE::CI_Cmd_More {} {wlan config security 1 10} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {EnhancedOpen}

::CONSOLE::CI_Cmd_More {} {wlan config security 1 12} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {WPA3}

::CONSOLE::CI_Cmd_More {} {wlan config security 1 11} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {WPA2WPA3}

::CONSOLE::CI_Cmd_More {} {wlan config security 1 4} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {WPA2PSK}

# 5G
::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 3} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {EnhancedOpen}

::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 2} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {Open/EnhancedOpen}

::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 5} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {WPA3}

::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 4} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {WPA2/WPA3}

::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 1} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {WPA2-PSK}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3649 Check Wireless 20/40 MHz >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3649," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}

# 2.4G
::CONSOLE::CI_Cmd_More {} {wlan config bw 0} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan show bw} {20} {Bandwidth =} {20 MHz}

::CONSOLE::CI_Cmd_More {} {wlan config bw 2} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan show bw} {20} {Bandwidth =} {40 MHz}

::CONSOLE::CI_Cmd_More {} {wlan config bw 1} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan show bw} {20} {Bandwidth =} {20/40 MHz}

# 5G
::CONSOLE::CI_Cmd_More {} {wlan5 config bw 0} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show bw} {20} {Bandwidth =} {20MHz}

::CONSOLE::CI_Cmd_More {} {wlan5 config bw 1} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show bw} {20} {Bandwidth =} {40MHz}

::CONSOLE::CI_Cmd_More {} {wlan5 config bw 3} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show bw} {20} {Bandwidth =} {160MHz}

::CONSOLE::CI_Cmd_More {} {wlan5 config bw 2} {10}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show bw} {20} {Bandwidth =} {80MHz}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3650 Check Wireless No security >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3650," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}

::CONSOLE::CI_Cmd_More {} {wlan config security 1 9} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security} {OpenEnhancedOpen}

::CONSOLE::CI_Cmd_More {} {wlan5 config security -i 0 2} {10} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security -i 0} {10} {Security} {Open/EnhancedOpen}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3651 Check Wireless channel >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3651," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3} 

# 2.4G
::CONSOLE::CI_Cmd_More {} {wlan config channel 8} {20}
::CONSOLE::Wait {20} 
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 2.4GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::CONSOLE::CI_Cmd_More {} {wlan config channel 0} {20}
::CONSOLE::Wait {20} 
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 2.4GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {0} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# 5G
::CONSOLE::CI_Cmd_More {} {wlan5 config channel 100} {20}
::CONSOLE::Wait {20} 
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 5GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3652 Check Wireless all setting >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3652," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]

# 2.4G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 2.4GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Set_CheckBox {id} {wlRadio} {true} {20} {PASS}
::WEB::WebDrv_Set_Value {id} {SSID} {$SSID_24G$} {20}
::WEB::WebDrv_List_Select {id} {ChannelSelection} {option_value} {9} {20}
::WEB::WebDrv_List_Select {id} {moreSecurity} {text} {WPA2-PSK AES} {20}
::WEB::WebDrv_Set_Value {id} {PreSharedKey} {1234567890} {20}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS}
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {10}
::WEB::WebDrv_Click {id} {t4} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_List_Select {id} {wlMode} {text} {$ax_mode$} {20}
::WEB::WebDrv_List_Select {id} {wlHT_BW} {text} {20MHz} {20}
::WEB::WebDrv_Click {id} {sysSubmit} {20} {PASS}
::CONSOLE::Wait {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::CONSOLE::CI_Cmd_Scan {} {wlan show all} {10} {Channel =} {9} {Protocol =} {802.11ax} {Bandwidth =} {20 MHz} {SSID =} {$SSID_24G$} {Security =} {WPA2PSK} {PreSharedKey =} {1234567890}

# 5G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {Wireless 5GHz} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Set_CheckBox {id} {WlEnbl} {true} {20} {PASS}
::WEB::WebDrv_Set_Value {id} {SSID} {$SSID_24G$} {20}
::WEB::WebDrv_List_Select {id} {ChannelSelection} {option_value} {100} {20}
::WEB::WebDrv_List_Select {id} {AuthenticationSelection} {text} {WPA2-PSK AES} {20}
::WEB::WebDrv_Set_Value {id} {PreSharedKey} {1234567890} {20}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS}
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {20}
::WEB::WebDrv_Click {id} {t4} {20} {PASS}
::CONSOLE::Wait {7}
::WEB::WebDrv_List_Select {id} {Wirelessband} {text} {$ax_mode$} {20}
::WEB::WebDrv_List_Select {id} {Bandwidth} {text} {160MHz} {20}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {20}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show all} {10} {Channel =} {100} {Protocol =} {802.11ax} {Bandwidth =} {160MHz} {SSID =} {$SSID_24G$} {Security =} {WPA2-PSK} {PreSharedKey =} {1234567890}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3677 IP address check (TE) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3677," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::Wait {3}
::CONSOLE::CI_Cmd_More {} {lan config --ipaddr primary 192.168.3.1 255.255.255.0} {10} 
::CONSOLE::CI_Cmd_Scan {} {lan show} {10} {inet addr:192.168.3.1} {Mask:255.255.255.0}
::CONSOLE::CI_Cmd_More {} {lan config --ipaddr primary $LAN_IP$ 255.255.255.0} {10} 
::CONSOLE::CI_Cmd_Scan {} {lan show} {10} {inet addr:$LAN_IP$} {Mask:255.255.255.0}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3653 Check DUT supports 3 simultaneous CLI sessions >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3653," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {First MAC Address} {$DUT_LAN_MAC_UType1$}

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
::MISC::ACTS_Dummy_Response {PASS} {HB3 not support Telnet} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3659 Check console PIN function on system and all HW modules >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3659," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_Scan {} {} {10} {>} {}
::CONSOLE::CI_Cmd {} {exit}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$CPEUSERNAME$} {$password=$CPEPASSWORD$}]
::WEB::WebDrv_Click {id} {connectionStatus} {20} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=$CPEPASSWORD$} {$new_pwd=8A888888}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {8A888888} {} {}
::CONSOLE::CI_Cmd_Scan {} {} {10} {>} {}
::CONSOLE::CI_Cmd {} {exit}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$CPEUSERNAME$} {$password=8A888888}]
::WEB::WebDrv_Click {id} {connectionStatus} {20} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Change_Account_Pwd >" [list {$old_pwd=8A888888} {$new_pwd=99999999B}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$USER_LOGIN_NAME$} {$password=99999999B}]
::WEB::WebDrv_Click {id} {connectionStatus} {20} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$USER_LOGIN_NAME$} {99999999B} {} {}
::CONSOLE::CI_Cmd_Scan {} {} {10} {>} {}
::CONSOLE::CI_Cmd_More {} {sh} {5} {sys atbr} {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}  

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3710 Waiting page when device upgrade firmware or reset device >
# Version 1

<TCL_Block_Begin>
if {[string first "UTP-3710," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
if {"$Key_Account$" != "Chile"} {
    ::MISC::ACTS_Dummy_Response {PASS} {FW upgrade} 
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$CPEUSERNAME$} {$password=$CPEPASSWORD$}]
    ::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
    ::WEB::WebDrv_Click {linkText} {Firmware Upgrade} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$Firmware$} {10}
    ::WEB::WebDrv_Click {id} {Upload_Id} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Window {} 
    ::WEB::WebDrv_Check_Text {xpath} {//*[@id="simplemodal-data"]/div/table/tbody/tr[2]/td[2]} {Firmware upgrade in progress Do not Turn Off the Device} {20} {PASS} {partial}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"
    ::WEB::WebDrv_CloseBrowser {A1000}
}

::MISC::ACTS_Dummy_Response {PASS} {Reset device} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$CPEUSERNAME$} {$password=$CPEPASSWORD$}]
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Backup/Restore} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {Reset_ID} {20} {PASS}
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="simplemodal-data"]/div/table/tbody/tr[2]/td[2]} {Router is restarting now} {20} {PASS} {partial}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd {} {sys activation set Activated 1} 
::CONSOLE::Wait {3}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3708 Verify upgrade and downgrade FW from the previous beta version to this beta FW via GUI and TR069 >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3708," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

# GUI FW upgrade
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$FW_Previous$}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Previous_Version$} 

# restore default
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reset >"
::WEB::WebDrv_CloseBrowser {A1000}

# Modify config
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=TELNET} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=Netmeeting} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=IPSec} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=112} {$end_port=112} {$trigger_protocol=TCP} {$open_start=112} {$open_end=112} {$open_protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=AUTH\[TCP/113\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=DNS\[UDP/53\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=TCP_UDP} {$protocol=TCPorUDP} {$dst_port_start=223} {$dst_port_end=223} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_ALG >" [list {$active=no}]
if {"$VoIP_Support$" == "yes"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check service
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

# GUI FW upgrade
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$Firmware$}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

# Check settings
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
if {"$PON_Support$" == "no"} {
    ::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
set temp [split $5G_Channel$ "("]
set ::CH [string trim [lindex $temp 0]]
::MISC::ACTS_Dummy_Response {PASS} "$::CH"
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::CH" {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|test|112|112|TCP|112|112|TCP} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|TCP_UDP|$::interface|Protocol:TCPorUDP Dst Port:223:223|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=2|Yes|DNS|$::interface|Protocol:UDP Dst Port:53|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=3|Yes|AUTH|$::interface|Protocol:TCP Dst Port:113|Action:Permit} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {tefapp tr69 display} {10} {Server URL:} {$ACSURLHTTPS$} 

# Check service
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

# Modify and check the setting can be changed
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_5G$} {$Channel=3} {$Security=WPA2-PSK AES} {$Key=1112223334}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1112223334}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Download to FCS by TR069
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {ACTS} {1234}
::CONSOLE::CI_Cmd_More {} {dir} {10}
::CONSOLE::CI_Cmd_More {} {delete FCS.bin} {60}
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$FW_FCS$ FCS.bin} {60}
::CONSOLE::Wait {15}
::CONSOLE::Close_Shell {Shell_FTP}

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/FCS.bin} {ACTS} {1234} {0}
::USER_DEFINE::CloseTR069ACS {C1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$FCS_Version$} 

# Check setting
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
if {"$PON_Support$" == "no"} {
    ::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {3} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {40} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|test|112|112|TCP|112|112|TCP} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|TCP_UDP|$::interface|Protocol:TCPorUDP Dst Port:223:223|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=2|Yes|DNS|$::interface|Protocol:UDP Dst Port:53|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=3|Yes|AUTH|$::interface|Protocol:TCP Dst Port:113|Action:Permit} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {tefapp tr69 display} {10} {Server URL:} {$ACSURLHTTPS$} 

# Check service
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value}
::USER_DEFINE::CloseTR069ACS {C1000}

# GUI FW upgrade
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$Firmware$}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3726 Plug-in WAN cable line while DUT is upgrading F/W >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3726," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

if {"$PON_Support$" == "yes"} {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ OFF 1}
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {off}
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {off}
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
} elseif {"$ETHWAN_Support$" == "yes"} {
    ::MISC::Enable_Network_Interface {WAN1} {Disable}
} elseif {"$VDSL_Support$" == "yes"} {
    ::MISC::Enable_xDSL_Line {1} {disable}
}
::CONSOLE::Wait {10}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {id} {maintenance-firewareUpgrade} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {10}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$Firmware$} {10}
::WEB::WebDrv_Click {id} {Upload_Id} {20} {PASS}
::CONSOLE::Wait {25} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

if {"$PON_Support$" == "yes"} {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {on}
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {on}
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
} elseif {"$ETHWAN_Support$" == "yes"} {
    ::MISC::Enable_Network_Interface {WAN1} {Enable}
} elseif {"$VDSL_Support$" == "yes"} {
    ::MISC::Enable_xDSL_Line {1} {enable}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3705 Disconnect Ethernet LAN cable when upgrading firmware from LAN (WLAN) side >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3705," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {id} {maintenance-firewareUpgrade} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$FW_Dummy$} {10}
::WEB::WebDrv_Click {id} {Upload_Id} {20} {PASS}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::CONSOLE::Wait {30}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_More {} {weblogout} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan_Fail {} {sys atsh} {30} {$Firmware_Title$} {$Dummy_Version$} 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}] 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3706 Disconnect DSL line when upgrading firmware from WAN side >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3706," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=LAN & WAN} {$Range=all} {$Start_Trust_IP1=0.0.0.0} {$End_Trust_IP1=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=on}] 
::CONSOLE::Wait {10} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite "http://$::WAN_IP/cgi-bin/login_advance.cgi" {A1000}
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {id} {maintenance-firewareUpgrade} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$FW_Dummy$} {10}
::WEB::WebDrv_Click {id} {Upload_Id} {5} {PASS}

if {"$PON_Support$" == "yes"} {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ OFF 1}
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {off}
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {off}
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
    }
} elseif {"$ETHWAN_Support$" == "yes"} {
    ::MISC::Enable_Network_Interface {WAN1} {Disable}
} elseif {"$VDSL_Support$" == "yes"} {
    ::MISC::Enable_xDSL_Line {1} {disable}
}
::CONSOLE::Wait {10}

::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::CONSOLE::Wait {30}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_More {} {weblogout} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan_Fail {} {sys atsh} {30} {$Firmware_Title$} {$Dummy_Version$} 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=off}] 

if {"$PON_Support$" == "yes"} {
    if {"$PON_Switch_Type$" == "COM"} {
        ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
    } elseif {"$PON_Switch_Type$" == "POWER"} {
        if {"$use_shield_box$" == "false"} {
            ::MISC::Setup_Power_Switch {SW_2} {on}
        } else {
            ::MISC::Setup_Power_Switch {SW_4} {on}
        }
    } else {
        ::RUNNER::SkipCase "without pon switch, skip this case" {1}
    }
} elseif {"$ETHWAN_Support$" == "yes"} {
    ::MISC::Enable_Network_Interface {WAN1} {Enable}
} elseif {"$VDSL_Support$" == "yes"} {
    ::MISC::Enable_xDSL_Line {1} {enable}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-4004 (IPv6) TracerRoute domain / ip address >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4004," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv6}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=$IPv6_Domain$} {$button=TracerouteV6} {$check_string1= 1  2001:b021:2d:205::77:1 (2001:b021:2d:205::77:1)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001:b021:2d:202::77:1} {$button=TracerouteV6} {$check_string1= 1  2001:b021:2d:202::77:1 (2001:b021:2d:202::77:1)}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4/IPv6}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=$IPv6_Domain$} {$button=TracerouteV6} {$check_string1= 1  2001:b021:2d:205::77:1 (2001:b021:2d:205::77:1)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001:b021:2d:202::77:1} {$button=TracerouteV6} {$check_string1= 1  2001:b021:2d:202::77:1 (2001:b021:2d:202::77:1)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 
<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-4003 (IPv4) TracerRoute domain / ip address >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4003," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=domain.pqatest.com} {$button=TraceRoute} {$check_string1=1  172.205.77.254 (172.205.77.254)} {$check_string2=2  172.205.77.11 (172.205.77.11)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=11.0.0.1} {$button=TraceRoute} {$check_string1=1  11.0.0.1 (11.0.0.1)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-4005 (IPv4/IPv6)Traceroute: Check input a non-existent URL or IP address to do Traceroute >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4005," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001::1111} {$button=TracerouteV6} {$check_string1=2001:b021:100:202::1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=1.2.3.44} {$button=TraceRoute} {$check_string1= 1  172.205.77.254 (172.205.77.254)} {$check_string2=--IPv4 Test Fin--}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-4001 (IPv6) Ping domain / ip address >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4001," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv6}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=$IPv6_Domain$} {$button=PingV6} {$check_string1=0% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001:b021:2d:202::77:1} {$button=PingV6} {$check_string1=0% packet loss}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4/IPv6}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=$IPv6_Domain$} {$button=PingV6} {$check_string1=0% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001:b021:2d:202::77:1} {$button=PingV6} {$check_string1=0% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-4002 (IPv4/IPv6)Ping Test: Check input a non-existent URL or IP address to do Ping Test >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4002," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=2001::1111} {$button=PingV6} {$check_string1=100% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=1.2.3.44} {$button=Ping} {$check_string1=100% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-4000 (IPv4) Ping domain / ip address >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-4000," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=domain.pqatest.com} {$button=Ping} {$check_string1=0% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Test_Diagnostic >" [list {$address=11.0.0.1} {$button=Ping} {$check_string1=0% packet loss}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3744 Upgrade wrong configuration >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3744," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]

::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Backup/Restore} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$MOD_PATH$ca1.pem} {10}
::WEB::WebDrv_Click {id} {Upload_ID} {20} {PASS}
::CONSOLE::Wait {25} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# check setting
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {tefapp tr69 display} {10} {Server URL:} {$ACSURLHTTPS$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3751 Upload ROM file >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3751," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=romtest} {$start_port=120} {$end_port=120} {$trigger_protocol=TCP} {$open_start=120} {$open_end=120} {$open_protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]

::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Backup/Restore} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$ROM$} {10}
::WEB::WebDrv_Click {id} {Upload_ID} {20} {PASS}
::CONSOLE::Wait {25} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {FAIL} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {FAIL} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|FTP|20|21|20|21|$LAN_Subnet$.33} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|romtest|120|120|TCP|120|120|TCP} {$Result=FAIL}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {0.0.0.0} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {FAIL} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {FAIL} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::WEB::WebDrv_Click {linkText} {Backup/Restore} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_File_Dialog {id} {tools_FW_UploadFile} {$Firmware_Root$$ROM_Previous$} {10}
::WEB::WebDrv_Click {id} {Upload_ID} {20} {PASS}
::CONSOLE::Wait {25} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%                                                           
+CaseStart+
<< ---------------- System - Log ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3991 Click Refresh button to refresh all logs >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3991," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$secondary_DNS=172.202.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$TR069act=true} {$DHCPServeract=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$domain_URL=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=refresh}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3898 Active Log Category: WAN-DHCP and select Log Level, check system will record >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3898," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$WANDHCPsel=ALL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VoIP$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=WAN-DHCP} {$Check_Str_Arr=sending select++sending release++sending discover++lease of $::WAN_IP obtained}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3900 Check Mode=Local >
# :: Version : 2 ::

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3900," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$WANDHCPsel=ALL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VoIP$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$Check_Str_Arr=sending select++sending release++sending discover++lease of $::WAN_IP obtained}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3899 Inactive Log Category: WAN-DHCP, verify system won't record related logs any more >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3899," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=false} {$WANDHCPsel=ALL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VoIP$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=WAN-DHCP} {$Check_Str_Arr=sending renew++sending release++sending discover++lease of $::WAN_IP obtained} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3988 View Logs in WebGUI and check all details >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3988," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$TR069act=true} {$DHCPServeract=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$Check_Str_Arr=sending select++sending release++cwmp_rpc_get_method()++DHCP client connect++Web Login Successfully}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3992 Click Clear Logs to clear all logs >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3992," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$TR069act=true} {$DHCPServeract=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
::WEB::WebDrv_Switch_To_Frame {id} {viewlogframe} {20} 
set result [::WEB::WebDrv_Get_Text {xpath} "/html/body/table/tbody/tr\[2\]/td\[4\]" {::value} {10}]
if {[string first "-1 WebDriver Get_Text error" "$result"] == -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {Clear logs button clear all log success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Clear logs button should clear all log}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3990 View Logs by selected Level categories >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3990," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$TR069act=true} {$DHCPServeract=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=ERROR} {$Check_level=yes} {$Check_Str_Arr=ERROR}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=ERROR} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++WARNING++NOTICE++INFO++DEBUG} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=INFO} {$Check_level=yes} {$Check_Str_Arr=INFO}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=INFO} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++ERROR++WARNING++NOTICE++DEBUG} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=DEBUG} {$Check_level=yes} {$Check_Str_Arr=DEBUG}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=DEBUG} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++ERROR++WARNING++NOTICE++INFO} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3915 Active Log Category: TR069 and select Log Level, check system will record related logs >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3915," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$TR069act=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=TR069} {$level=ALL} {$Check_Str_Arr=cwmp_event_proc(): New a session object++cwmp_rpc_get_method(): methodName=cwmp:InformResponse}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3911 Inform event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3911," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$TR069act=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=TR069} {$level=ALL} {$Check_Str_Arr=cwmp_rpc_get_method(): methodName=cwmp:InformResponse}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 


<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3913 TransferComplete evnet > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3913," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$TR069act=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Put FW to HFS server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/$Firmware$} {acts} {1234} {0} 
::USER_DEFINE::CloseTR069ACS {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< wait_DUT_ready >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=TR069} {$level=ALL} {$Check_Str_Arr=cwmp_rpc_get_method(): methodName=cwmp:TransferCompleteResponse}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3916 Inactive Log Category: TR069, verify system won't record related logs any more >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3916," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$TR069act=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=TR069} {$level=ALL} {$Check_Str_Arr=cwmp_event_proc(): New a session object++cwmp_rpc_get_method(): methodName=cwmp:InformResponse} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3935 Remote HTTP login event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3935," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=LAN & WAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=Web Login Successfully from IP $::LAN_IP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$Key_Account$" != "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=on}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=WAN} {$Get_Info=IP}] {::WAN_PC}

    ::WEB::WebDrv_OpenWebSite "$Adv_GUI_Protocol$$::WAN_IP$Adv_GUI_URL$" {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=Web Login Successfully from IP $::WAN_PC}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=off}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3937 Remote SSH login event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3937," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]

if {"$Key_Account$" != "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3939 Remote SFTP login event > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3939," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd {} {rm rom-t}
::CONSOLE::CI_Cmd {} {sftp $CPEUSERNAME$@$LAN_IP$} {10}
set result [::CONSOLE::Wait_String {10} {RSA key fingerprint} {Don't Care}]
if {"$result" == "0"} {
    ::CONSOLE::CI_Cmd {} {yes}
}
::CONSOLE::CI_Cmd_Scan {} {$CPEPASSWORD$} {5} {sftp>} {}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {get rom-t} {10} {rom-t 100%} {}
::CONSOLE::CI_Cmd {} {exit}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]

if {"$Key_Account$" != "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 

    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
    ::CONSOLE::CI_Cmd {} {rm rom-t}
    ::CONSOLE::CI_Cmd {} "sftp $CPEUSERNAME$@$::WAN_IP" {10}
    set result [::CONSOLE::Wait_String {10} {RSA key fingerprint} {Don't Care}]
    if {"$result" == "0"} {
        ::CONSOLE::CI_Cmd {} {yes}
    }
    ::CONSOLE::CI_Cmd_Scan {} {$CPEPASSWORD$} {5} {sftp>} {}
    ::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {get rom-t} {10} {rom-t 100%} {}
    ::CONSOLE::CI_Cmd {} {exit}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3940 Remote SCP login event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3940," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd {} {rm rom-t}
::CONSOLE::CI_Cmd {} {scp $CPEUSERNAME$@$LAN_IP$:/rom-t /} {10}
set result [::CONSOLE::Wait_String {10} {RSA key fingerprint} {Don't Care}]
if {"$result" == "0"} {
    ::CONSOLE::CI_Cmd {} {yes}
}
::CONSOLE::CI_Cmd_Scan {} {$CPEPASSWORD$} {5} {rom-t} {100%}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]

if {"$Key_Account$" != "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip} 

    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
    ::CONSOLE::CI_Cmd {} {rm rom-t}
    ::CONSOLE::CI_Cmd {} "scp $CPEUSERNAME$@$::WAN_IP:/rom-t /" {10}
    set result [::CONSOLE::Wait_String {10} {RSA key fingerprint} {Don't Care}]
    if {"$result" == "0"} {
        ::CONSOLE::CI_Cmd {} {yes}
    }
    ::CONSOLE::CI_Cmd_Scan {} {$CPEPASSWORD$} {5} {rom-t} {100%}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3941 Remote HTTPs login event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3941," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN & WAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {$LAN_URL_HTTPS$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=Web Login Successfully from IP $::LAN_IP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$Key_Account$" != "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=on}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=WAN} {$Get_Info=IP}] {::WAN_PC}

    ::WEB::WebDrv_OpenWebSite "https://$::WAN_IP$Adv_GUI_URL$" {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=Web Login Successfully from IP $::WAN_PC}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=off}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3943 Active Log Category: Remote Management and select Log Level, system will record related logs >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3943," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_IP}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=true}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=Web Login Successfully from IP $::LAN_IP++SSH Login Successfully from IP $::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3944 Inactive Log Category: Remote Management, verify system won't record related logs any more >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3944," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$RemoteMGMTact=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=Remote Management} {$level=INFO} {$Check_Str_Arr=SSH Login Successfully from IP $::wks_ip} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3953 NTP update event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3953," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$secondary_DNS=172.202.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$NTPact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+08:00}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+01:00} 
::USER_DEFINE::CloseTR069ACS {} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=NTP} {$level=ALL} {$Check_Str_Arr=Time initialized by NTP server}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3955 Active Log Category: NTP and select Log Level, check system will record related logs > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3955," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$secondary_DNS=172.202.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$NTPact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+08:00}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+01:00} 
::USER_DEFINE::CloseTR069ACS {} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=NTP} {$level=ALL} {$Check_Str_Arr=Time initialized by NTP server}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3956 Inactive Log Category: NTP, verify system won't record related logs any more >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3956," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$NTPact=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+08:00}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+01:00} 
::USER_DEFINE::CloseTR069ACS {} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=NTP} {$level=ALL} {$Check_Str_Arr=Time initialized by NTP server} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3957 Check Mode=Local >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3957," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=172.205.77.1} {$secondary_DNS=172.202.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$NTPact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+08:00}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+01:00} 
::USER_DEFINE::CloseTR069ACS {} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=NTP} {$level=ALL} {$Check_Str_Arr=Time initialized by NTP server}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-3895 Check display log message of differnet Level and Category >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3895," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$WANDHCPact=true} {$TR069act=true} {$DHCPServeract=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_VoIP$} {$wait_time=20}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=ERROR} {$Check_level=yes} {$Check_Str_Arr=ERROR}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=ERROR} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++WARNING++NOTICE++INFO++DEBUG} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=INFO} {$Check_level=yes} {$Check_Str_Arr=INFO}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=INFO} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++ERROR++WARNING++NOTICE++DEBUG} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=DEBUG} {$Check_level=yes} {$Check_Str_Arr=DEBUG}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=ALL} {$level=DEBUG} {$Check_level=yes} {$Check_Str_Arr=EMERGENCY++ALERT++CRITICAL++ERROR++WARNING++NOTICE++INFO} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3947 DynDNS update event >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3947," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=8.8.8.8} {$secondary_DNS=168.95.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$DDNSact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.no-ip.com} {$interface=$ifconfig_PPPoE$} {$host_name=$NoIPHostname$} {$username=$NoIPUsername$} {$password=$NoIPPassword$}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=DDNS} {$level=ALL} {$Check_Str_Arr=DDNS update successfully}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-3949 Active Log Category: DDNS and select Log Level, check system will record related logs >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3949," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=8.8.8.8} {$secondary_DNS=168.95.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$DDNSact=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.no-ip.com} {$interface=$ifconfig_PPPoE$} {$host_name=$NoIPHostname$} {$username=$NoIPUsername$} {$password=$NoIPPassword$}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=DDNS} {$level=ALL} {$Check_Str_Arr=DDNS update successfully}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-3950 Inactive Log Category: DDNS, verify system won't record related logs any more >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3950," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=8.8.8.8} {$secondary_DNS=168.95.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Log >" [list {$active=true} {$mode=Local File} {$DDNSact=false}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$button=clear}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.no-ip.com} {$interface=$ifconfig_PPPoE$} {$host_name=$NoIPHostname$} {$username=$NoIPUsername$} {$password=$NoIPPassword$}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< View_Log >" [list {$category=DDNS} {$level=ALL} {$Check_Str_Arr=DDNS update successfully} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%
+CaseStart+
<< ---------------- NAT ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
set result [::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {10} {nameserver 168.95.1.1} {}]
if { "$result" != "PASS" } {
    ::CONSOLE::CI_Cmd_More {} {sed '1c nameserver 168.95.1.1' /etc/resolv.conf} {10} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1472 Verify UPnP traffic shouldn't forward to the WAN >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1472," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_4} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=120}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3} 
::CONSOLE::Close_Shell {Shell_4}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=ssdp} {$judge=fail}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=ssdp} {$judge=pass}] 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1445 Add one Port Triggering rule by Trigger port (Port Range) and Open Port (Port Range) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1445," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1010} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2010} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --proto udp --srcport 2000 --dstport 2005"

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --proto udp --srcport 2000 --dstport 1005"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2005} {$duration=100}]
::CONSOLE::Wait {10} 

::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2005 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1446 Add one Port Triggering rule by Trigger Protocol: TCP or UDP, verify WAN traffic >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1446," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1000} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2000} {$open_protocol=ALL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 1000"

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --ip-tos 80 --proto udp --srcport 2000 --dstport 2000"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2000} {$duration=100}]
::CONSOLE::Wait {10} 

::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2000 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1447 Add one Port Triggering rule by Trigger Protocol: TCP/UDP, verify WAN traffic >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1447," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1000} {$trigger_protocol=ALL} {$open_start=2000} {$open_end=2000} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 1000"

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --ip-tos 80 --proto udp --srcport 2000 --dstport 2000"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2000} {$duration=100}]
::CONSOLE::Wait {10} 

::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2000 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1442 Add one Port Triggering rule by Trigger port (Single Port) and Open Port (Single Port) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1442," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1000} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2000} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 1000"

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --ip-tos 80 --proto udp --srcport 2000 --dstport 2000"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2000} {$duration=100}]
::CONSOLE::Wait {10} 

::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2000 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1443 Add one Port Triggering rule by Trigger port (Single Port) and Open Port (Port Range)>
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1443," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1000} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2010} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2010} {$duration=300}]

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 1000"

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --ip-tos 80 --proto udp --srcport 2000 --dstport 2010"

::CONSOLE::Wait {10} 
::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2010 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1444 Add one Port Triggering rule by Trigger port (Port Range) and Open Port (Single Port) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1444," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=1000} {$end_port=1010} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2000} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_MAC {WAN_WKS} {eth2} {::wks_mac}
::CONSOLE::Get_WKS_IP {WAN_WKS} {eth2} {::wks_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

::CONSOLE::Start_Drone {LAN1_WKS}
::CONSOLE::Generate_Drone_Traffic {LAN1_WKS} "-b 10485760 -l 1500 -s $::lan1_mac -d $DUT_LAN_MAC_UType2$ -p IPv4 --ip-src $::lan1_ip --ip-dst $::wks_ip --ip-tos 80 --proto udp --srcport 2000 --dstport 1007"

::CONSOLE::Start_Drone {WAN_WKS}
::CONSOLE::Generate_Drone_Traffic {WAN_WKS} "-b 10485760 -l 1500 -s $::wks_mac -d $WANtoLAN_MAC$ -p IPv4 --ip-src $::wks_ip --ip-dst $::WAN_IP --ip-tos 80 --proto udp --srcport 2000 --dstport 2000"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$filter=udp port 2000} {$duration=100}]
::CONSOLE::Wait {10} 

::CONSOLE::Stop_Drone {LAN1_WKS}
::CONSOLE::Stop_Drone {WAN_WKS}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport == 2000 && ip.src == $::wks_ip} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=deleteBtn1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {30} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1448 Add Max Port Triggering rules (Reference ES defined) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1448," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max1} {$start_port=1000} {$end_port=1000} {$trigger_protocol=UDP} {$open_start=2000} {$open_end=2000} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max2} {$start_port=1001} {$end_port=1001} {$trigger_protocol=UDP} {$open_start=2001} {$open_end=2001} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max3} {$start_port=1002} {$end_port=1002} {$trigger_protocol=UDP} {$open_start=2002} {$open_end=2002} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max4} {$start_port=1003} {$end_port=1003} {$trigger_protocol=UDP} {$open_start=2003} {$open_end=2003} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max5} {$start_port=1004} {$end_port=1004} {$trigger_protocol=UDP} {$open_start=2004} {$open_end=2004} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max6} {$start_port=1005} {$end_port=1005} {$trigger_protocol=UDP} {$open_start=2005} {$open_end=2005} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max7} {$start_port=1006} {$end_port=1006} {$trigger_protocol=UDP} {$open_start=2006} {$open_end=2006} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max8} {$start_port=1007} {$end_port=1007} {$trigger_protocol=UDP} {$open_start=2007} {$open_end=2007} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max9} {$start_port=1008} {$end_port=1008} {$trigger_protocol=UDP} {$open_start=2008} {$open_end=2008} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max10} {$start_port=1009} {$end_port=1009} {$trigger_protocol=UDP} {$open_start=2009} {$open_end=2009} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max11} {$start_port=1010} {$end_port=1010} {$trigger_protocol=UDP} {$open_start=2010} {$open_end=2010} {$open_protocol=UDP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=max12} {$start_port=1011} {$end_port=1011} {$trigger_protocol=UDP} {$open_start=2011} {$open_end=2011} {$open_protocol=UDP}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Triggering} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
::CONSOLE::Wait {2} 
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {max rule is 12}
    if {"$Key_Account$" == "To2"} {
        ::MISC::ACTS_Dummy_Response {WARNING} {HB3 max rule not define}
    }
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {max rule should be 12}
    if {"$Key_Account$" == "To2"} {
        ::MISC::ACTS_Dummy_Response {WARNING} {HB3 max rule not define}
    }
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1586 Check Port Forwarding WWW, LAN and WAN PC access HTTP server > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1586," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Check MGMT default
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {maintenance-remotemgmt} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Is_Selected {id} {RemoteActiveRadio_Enabled} {::Value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 
if {"$::Value" == "true"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Active=Disable}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=WWW} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} "http://$::WAN_IP" {PASS} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http} {$judge=fail}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
if {"$::Value" == "true"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Active=Enable}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1587 Check Port Forwarding FTP, LAN and WAN PC access FTP server >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1587," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "$::WAN_IP" {root} {1234} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_FTP_Connect {DMZ_WKS} "$::WAN_IP" {root} {1234} {PASS} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ftp} {$judge=fail}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1588 Check Port Forwarding User Define, LAN and WAN PC access define port >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1588," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$srv_ip=$::wks_ip} {$start_port=8080} {$end_port=8090} {$protocol=TCP} {$open_start=80}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP:8080" {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} "http://$::WAN_IP:8080" {PASS} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=tcp.port==8080} {$judge=fail}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1406 Verify CPE Port Forwarding page, CPE should filter special character >
# Version : 6

<TCL_Block_Begin>
if {[string first "UTP-1406," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {}
# <>
::WEB::WebDrv_Set_Value {name} {start_port} {<>}
set result [::WEB::WebDrv_Click {name} {end_port} {20}]
if {"$result" == "0"} {
    twapi::send_keys {{ENTER}}
    ::MISC::ACTS_Dummy_Response {PASS} {<> is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {<> should be block}
}
# "'
::WEB::WebDrv_Set_Value {name} {start_port} {"'}
set result [::WEB::WebDrv_Click {name} {end_port} {20}]
if {"$result" == "0"} {
    twapi::send_keys {{ENTER}}
    ::MISC::ACTS_Dummy_Response {PASS} {"' is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {"' should be block}
}
# %;
::WEB::WebDrv_Set_Value {name} {start_port} {%;}
set result [::WEB::WebDrv_Click {name} {end_port} {20}]
if {"$result" == "0"} {
    twapi::send_keys {{ENTER}}
    ::MISC::ACTS_Dummy_Response {PASS} {%; is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {%; should be block}
}
# #&
::WEB::WebDrv_Set_Value {name} {start_port} {#&}
set result [::WEB::WebDrv_Click {name} {end_port} {20}]
if {"$result" == "0"} {
    twapi::send_keys {{ENTER}}
    ::MISC::ACTS_Dummy_Response {PASS} {#& is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {#& should be block}
}
# +-
::WEB::WebDrv_Set_Value {name} {start_port} {+-}
set result [::WEB::WebDrv_Click {name} {end_port} {20}]
if {"$result" == "0"} {
    twapi::send_keys {{ENTER}}
    ::MISC::ACTS_Dummy_Response {PASS} {+- is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {+- should be block}
}
::WEB::WebDrv_Click {id} {PortRule_Cancel} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}


# invild ip format
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$LAN_Subnet$.256}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {PortRule_Cancel} {20}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}    
    ::MISC::ACTS_Dummy_Response {PASS} {invild ip format is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {invild ip format should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$LAN_IP$}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {PortRule_Cancel} {20}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}    
    ::MISC::ACTS_Dummy_Response {PASS} {set ip as LAN_IP is block} 
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|FTP|20|21|20|21|$LAN_IP$} {$Result=FAIL}]
    ::MISC::ACTS_Dummy_Response {FAIL} {set ip as LAN_IP should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Capture_Response {} {tefapp tr69 display} {10} {::response} 
regexp {ConnetionRequest Port:  (.*?)\n} $::response -> ::value

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$start_port=$::value} {$end_port=$::value} {$srv_ip=$LAN_Subnet$.33} {$protocol=TCP} {$open_start=$::value}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {PortRule_Cancel} {20}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}    
    ::MISC::ACTS_Dummy_Response {PASS} {set tr69 port is block}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {set tr69 port should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1405 Verify CPE DMZ page, CPE should filter special character >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1405," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=><()\"'%;#&+-}]
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {0.0.0.0} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.256}]
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {0.0.0.0} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_IP$}]
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {0.0.0.0} {20} {PASS} {full} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1408 Verify CPE Trigger Port page, CPE should filter special character >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1408," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Triggering} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Set_Value {id} {ServiceName} {><()'%;#&+-} {20} 
::WEB::WebDrv_Click {id} {portTrigger_Apply} {20} {PASS}
::CONSOLE::Wait {3}
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {portTrigger_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {service with special character is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {service with special character should be block} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Capture_Response {} {tefapp tr69 display} {10} {::response} 
regexp {ConnetionRequest Port:  (.*?)\n} $::response -> ::value

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=$::value} {$end_port=$::value} {$trigger_protocol=TCP} {$open_start=$::value} {$open_end=$::value} {$open_protocol=TCP}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {portTrigger_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {confilt with tr069 connection port is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {confilt with tr069 connection port should be block} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1410 Verify CPE DDNS page, CPE should filter special character >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1410," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=><\"'%&+-;} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {special character ><\"'%&+-; is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {special character ><\"'%&+-; should be block} 
}

# &gt;&lt;
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=&gt;&lt;} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {special character &gt;&lt; is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {special character &gt;&lt; should be block} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1412 Verify CPE Static Route page, CPE should filter special character >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1412," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=><\"'%&+-;} {$mask=255.255.255.255} {$GW=172.205.77.10} {$metirc=1} {$interface=Internet}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {SRouteSubnet_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {special character is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {special character should be block} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.8.256} {$mask=255.255.255.255} {$GW=172.205.77.10} {$metirc=1} {$interface=Internet}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {SRouteSubnet_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {invlid ip format is block} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {invlid ip format should be block} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-1422 Verify add Port Forwarding rule with port = service control port (HTTP, HTTPS, SSH, TELENET, FTP) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1422," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=LAN & WAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$start_port=80} {$end_port=80} {$srv_ip=$::wks_ip} {$protocol=TCP} {$open_start=80}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {PortRule_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {CPE decline user to add 80 port} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE should decline user to add 80 port} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=LAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$start_port=80} {$end_port=80} {$srv_ip=$::wks_ip} {$protocol=TCP} {$open_start=80}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {PortRule_Cancel} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {FAIL} {MGMT only access LAN, should not effect port forwarding add rules} 
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {MGMT only access LAN, not effect port forwarding add rules} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Active=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1423 Verify add Port Forwarding rule which specifies port range (the range is Symmetrical port) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1423," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$start_port=2000} {$end_port=2010} {$srv_ip=$::wks_ip} {$protocol=UDP} {$open_start=3000}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|User Define|2000|2010|3000|3010|$::wks_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=500}]

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {3000} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {-u} {no} {Don't Care} 
# ::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {3000} {-u}
::CONSOLE::Wait {5} 

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {3010} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2010} {10} {-u} {no} {Don't Care} 
# ::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2010} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {3010} {-u}

::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport==3000} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=udp.dstport==3010} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1428 RG can change service from HTTP or TCP or TELENT ... to user define >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1428," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=Netmeeting} {$srv_ip=$::wks_ip}]

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {1720} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {1720} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {1720} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=editBtn_0} {$active=true} {$service=Telnet} {$start_port=23} {$end_port=23} {$srv_ip=$::wks_ip} {$protocol=TCP} {$open_start=23}]

::CONSOLE::Check_WKS_Telnet_Exist {WAN_WKS} "$::WAN_IP 23" {root} {1234} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-1431 Add Port Forwarding Rule by select Service Name: WWW >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1431," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=WWW} {$srv_ip=$::wks_ip}]
# 2841_Spain Remote MGMT is off
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {maintenance-remotemgmt} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Is_Selected {id} {RemoteActiveRadio_Enable_Disabled} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {Remote MGMT default is off} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Remote MGMT default should be off} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1432 Add Port Forwarding Rule by select Service Name: HTTPS >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1432," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=HTTPS} {$srv_ip=$::wks_ip}]
# 2841_Spain Remote MGMT is off
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {maintenance-remotemgmt} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Is_Selected {id} {RemoteActiveRadio_Enable_Disabled} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {Remote MGMT default is off} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Remote MGMT default should be off} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {443} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {443} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {443} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-1433 Add Port Forwarding Rule by select Service Name: FTP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1433," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=FTP} {$srv_ip=$::wks_ip}]
# 2841_Spain Remote MGMT is off
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {maintenance-remotemgmt} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Is_Selected {id} {RemoteActiveRadio_Enable_Disabled} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {Remote MGMT default is off} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Remote MGMT default should be off} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_FTP_Connect {WAN_WKS} "$::WAN_IP" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1435 Add Port Forwarding Rule by select Service Name: E-mail(SMTP and POP3) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1435," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=E-mail(POP3)} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=E-mail(SMTP)} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {25} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {25} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {25} {}
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {110} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {110} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {110} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1436 Add Port Forwarding Rule by select Service Name: PPTP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1436," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=PPTP} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {1723} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {1723} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {1723} {}
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {1723} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {1723} {10} {-u} {no} {Don't Care} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {1723} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {1723} {-u}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1437 Add Port Forwarding Rule by select Service Name: IPSec >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1437," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=IPSec} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {500} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {500} {10} {-u} {no} {Don't Care} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {500} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {500} {-u}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1438 Add Port Forwarding Rule by select Service Name: TFTP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1438," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=TFTP} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {69} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {69} {10} {-u} {no} {Don't Care} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {69} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {69} {-u}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1439 Add Port Forwarding Rule by select Service Name: SSH >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1439," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=SSH} {$srv_ip=$::wks_ip}]
# 2841_Spain Remote MGMT is off
::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {maintenance-remotemgmt} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Is_Selected {id} {RemoteActiveRadio_Enable_Disabled} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {Remote MGMT default is off} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Remote MGMT default should be off} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {root} {1234} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1440 Add Port Forwarding Rule by select Service Name: VNC >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1440," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=VNC} {$srv_ip=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {5900} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {5900} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {5900} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1419 Add Port Forwarding rule by User Defined: TCP, verify WAN traffic >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1419," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true}  {$service=User Define} {$start_port=2000} {$end_port=2010} {$srv_ip=$::wks_ip} {$protocol=TCP} {$open_start=2000}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2000} {}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2010} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2010} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2010} {}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2011} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2011} {10} {} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2011} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1420 Add Port Forwarding rule by User Defined: UDP, verify WAN traffic >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1420," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true}  {$service=User Define} {$start_port=2000} {$end_port=2010} {$srv_ip=$::wks_ip} {$protocol=UDP} {$open_start=2000}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|User Define|2000|2010|2000|2010|$::wks_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2000} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {-u} {no} {Don't Care} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2000} {-u}
::CONSOLE::Wait {10} 

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2010} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2010} {10} {-u} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2010} {-u}
::CONSOLE::Wait {60} 

::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2011} {-u} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2011} {10} {-u} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2011} {-u}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1424 Verify add Port Forwarding rule which Internal port range exceed External port range >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1424," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {}

set result [::WEB::WebDrv_Click {id} {oEnd} {20}]
if {"$result" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {CPE doen't allow customer modify Translation End Port}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE should not allow customer modify Translation End Port}
}
::WEB::WebDrv_Click {id} {PortRule_Cancel} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1429 Verify Port Forwarding rule worked on IP Alias LAN Host >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1429," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN_Alias >" [list {$enable=yes} {$alias_ip=192.168.2.1} {$alias_mask=255.255.255.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$start_port=2000} {$end_port=2000} {$srv_ip=192.168.2.33} {$protocol=ALL} {$open_start=2000}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Setup_WKS_IP_Address {DMZ_WKS} {eth1} {Static} {192.168.2.33} {255.255.255.0} {192.168.2.1}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::CONSOLE::Start_WKS_iPerf_Server {DMZ_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {DMZ_WKS} {2000} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=editBtn_0} {$active=false}]

::CONSOLE::Start_WKS_iPerf_Server {DMZ_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {DMZ_WKS} {2000} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Start_WKS_iPerf_Server {DMZ_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {} {no} {FAIL} 
::CONSOLE::Stop_WKS_iPerf_Server {DMZ_WKS} {2000} {}
::CONSOLE::Setup_WKS_IP_Address {DMZ_WKS} {eth1} {DHCP} {$LAN_IP$} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1430 Check Port Forwarding rule can be added after DUT reset and plug in the WAN cable >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1430," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::Enable_Network_Interface {WAN1} {Disable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::MISC::Enable_Network_Interface {WAN1} {Enable}
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true}  {$service=User Define} {$start_port=2000} {$end_port=2010} {$srv_ip=$::wks_ip} {$protocol=TCP} {$open_start=2000}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} "User Define 2000 2010 2000 2010 $::wks_ip" {20} {PASS} {partial} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {2000} {}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=deleteBtn_0} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1426 Verify if CPE can forward ICMP fragment packet to WAN >
# Version : 3

<TCL_Block_Begin>
if {[string first "UTP-1426," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {10.1.9.1} {PASS} {5000} {10} {1} {1} {128} {IPv4} {no}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1418 Verify if CPE can forward unicast fragment packet to WAN and LAN. (Use Jperf tool) >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1418," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf3_Connect {LAN1_WKS} {172.205.77.11} {2000} {10} {-u -M 4000} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {2000} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {2000} {} 
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" {2000} {10} {-u -M 4000} {no} {PASS} 
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {2000} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-1486 Dynamic DNS can update successfully >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1486," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
set result [::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {10} {nameserver 168.95.1.1} {}]
if { "$result" != "PASS" } {
    ::CONSOLE::CI_Cmd_More {} {sed '1c nameserver 168.95.1.1' /etc/resolv.conf} {10} 
}

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=168.95.1.1} {$secondary_DNS=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=168.95.1.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http.host == members.dyndns.org} {$judge=pass}]

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "Repeat $i"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Wait {60} 
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}    
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}
    ::CONSOLE::Close_Shell {Shell_3}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http.host == members.dyndns.org} {$judge=pass}]
}
::CONSOLE::Wait {10} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {20}

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http.host == members.dyndns.org} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1490 HTTP Remote Access when using DNS-name >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1490," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

if {"$MGMT_HTTPS_WAN_Support$" == "no"} {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=168.95.1.1} {$secondary_DNS=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=168.95.1.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]

if {"$PROJECT$" == "HB3"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enable_HTTPS_WAN >" [list {$user=test} {$pwd=12345}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN & WAN} {$Range=all}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}
}    

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=on}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::DOSAPP::Dos_Cmd {netsh interface ip set dns "WAN" 8.8.8.8 168.95.1.1}
::CONSOLE::Wait {10} 

::WEB::WebDrv_OpenWebSite {https://$DDNS_Hostname$} {A1000}
::CONSOLE::Wait {3}

if {"$PROJECT$" == "HB3"} {
    twapi::send_keys {test{TAB}}
    twapi::send_keys {12345{ENTER}}
    ::CONSOLE::Wait {5}

    set result [::WEB::WebDrv_Click {id} {Survey0} {20} {PASS}]
    if {"$result" == 0} {
        ::MISC::ACTS_Dummy_Response {PASS} {login success}
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {login fail} 
    }
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$password=$GUI_Pwd$}]

    set result [::WEB::WebDrv_Click {xpath} {//*[@id="home"]/img} {10} {PASS} ]
    if {"$result" == "0"} {
        ::MISC::ACTS_Dummy_Response {PASS} {Login success}
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {login fail} 
    }
}
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=WAN} {$enable=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1491 After DDNS was added, check if it is possible to remove enterded values >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1491," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]

# disable and remove enterded values
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {DDNSRadio_Disable} {20} {PASS}
::WEB::WebDrv_Click {id} {DDNS_IPv6_Radio_Disable} {20} {PASS}
::WEB::WebDrv_Set_Value {name} {sysDNSHost} {} {20}
::WEB::WebDrv_Set_Value {name} {sysDNSUser} {} {20}
::WEB::WebDrv_Set_Value {name} {sysDNSPassword} {} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# check
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {DDNSRadio_Disable} {::value} {20} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DDNS is disabled}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DDNS should be disabled}
}
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSPassword} {} {20} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1487 Unplug then plug DSL/Ethernet cable, check DUT will auto update DDNS >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-1487," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=168.95.1.1} {$secondary_DNS=8.8.8.8}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=168.95.1.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "Loop $i"

    if {"$ETHWAN_Support$" == "yes" } {
        ::MISC::Enable_Network_Interface {WAN1} {Disable}
        ::CONSOLE::Wait {2}
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
        ::MISC::Enable_Network_Interface {WAN1} {Enable}
        ::CONSOLE::Wait {120}
    }
    if {"$PON_Support$" == "yes" } {
        if {"$PON_Switch_Type$" == "COM"} {
            ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
            ::CONSOLE::Wait {2}
            ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
        } elseif {"$PON_Switch_Type$" == "POWER"} {
            if {"$use_shield_box$" == "false"} {
                ::MISC::Setup_Power_Switch {SW_2} {off}
                ::CONSOLE::Wait {2} 
                ::MISC::Setup_Power_Switch {SW_2} {on}
            } else {
                ::MISC::Setup_Power_Switch {SW_4} {off}
                ::CONSOLE::Wait {2} 
                ::MISC::Setup_Power_Switch {SW_4} {on}
            }
        } else {
            ::RUNNER::SkipCase "without pon switch, skip this case" {1} 
        }

        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
        ::CONSOLE::Wait {120}
    }

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}
    ::CONSOLE::Close_Shell {Shell_3}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http.host == members.dyndns.org} {$judge=pass}]
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1489 Edit Hostname, Username or Password null character, check DUT shouldn't reboot >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-1489," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=168.95.1.1} {$secondary_DNS=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=test pqa1.dyndns.biz} {$username=test pqa1.dyndns.biz} {$password=123 456}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup}
} else {
    ::MISC::ACTS_Dummy_Response {WARNING} {there is no popup window} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {test pqa1.dyndns.biz} {20} {FAIL} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {test PQA1} {20} {FAIL} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSPassword} {123 456} {20} {FAIL} {full} 
 ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
 ::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1488 Verify DUT will auto update DDNS after got new WAN IP address >
# Version : 2$LAN_IP_Port$

<TCL_Block_Begin>
if {[string first "UTP-1488," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=168.95.1.1} {$secondary_DNS=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=yes} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

for {set i 1} {$i < 6} {incr i} {
    ::MISC::ACTS_Dummy_Response {PASS} "Loop $i"
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]    
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_DATA$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=$Connect_DATA$} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}
    ::CONSOLE::Wait {60}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    set result [::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}]
    if { "$result" == "PASS" } {
        ::MISC::ACTS_Dummy_Response {PASS} {nslookup $DDNS_Hostname$ success}
    } else {
        ::CONSOLE::Wait {60} 
        ::CONSOLE::CI_Cmd_Scan {} {nslookup $DDNS_Hostname$} {30} "Address: $::WAN_IP" {}
    }
    ::CONSOLE::Close_Shell {Shell_3}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=http.host == members.dyndns.org} {$judge=pass}]
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- Routing ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1547 Verify Static Route work on LAN (br0 + Gateway) >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1547," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.4.4} {$mask=255.255.255.255} {$GW=$::wks_ip} {$metirc=1} {$interface=LAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {300} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-1549 Verify Static Route rules work on WAN (By WAN interface + Gateway) >
# Version : 2
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1549," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.4.4} {$mask=255.255.255.255} {$GW=172.205.77.11} {$metirc=1} {$interface=Internet}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=fail}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1551 Delete some Static Route rule, packet should follow default WAN interface >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1551," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.4.4} {$mask=255.255.255.255} {$GW=$::wks_ip} {$metirc=1} {$interface=LAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {300} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1552 After CPE reboot, verify all Static Route rules still work well >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1552," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.4.4} {$mask=255.255.255.255} {$GW=$::wks_ip} {$metirc=1} {$interface=LAN}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1553 Check SIP traffic can go back to use original static route >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1553," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345} {$mulit_wan=Internet}]
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=sip && ip.src == $::WAN_IP} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VoIP$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth3} {$capture_file=packet1.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345} {$mulit_wan=VoIP}]
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=sip && ip.src == $::WAN_IP} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-1576 By default settings, check RIP can work on all WAN interface >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1576," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

# VoIP WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_VoIP$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$RIP_Direction=Both}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth3} {$capture_file=packet.pcap} {$duration=70}]
::CONSOLE::Wait {60} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=rip && ip.src == $::WAN_IP} {$judge=pass}]

# IPTV WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_IPTV$} {$IPv4_Or_IPv6=IPv4} {$IPv4_check=no}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$IPTV_BTN$} {$RIP_Direction=Both}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth4} {$capture_file=packet.pcap} {$duration=70}]
::CONSOLE::Wait {60} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=rip && ip.src == $::WAN_IP} {$judge=pass}]

# Data WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$RIP_Direction=Both}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=70}]
::CONSOLE::Wait {60} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_IPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=rip && ip.src == $::WAN_IP} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1550 Add Max Static Route rules (Reference ES defined) >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1550," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Static Route}] {::rule_no}
::MISC::ACTS_Dummy_Response {PASS} "$::rule_no"

set start [expr $::rule_no+1]
for {set ::x $start} {$::x < 33} {incr ::x} {
    set ::port [expr 0 + $::x]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_Route >" [list {$index=-1} {$dst_ip=8.8.4.$::x} {$mask=255.255.255.255} {$GW=$::wks_ip} {$metirc=1} {$interface=LAN}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Static Route}] {::rule_no}
if {"$::rule_no" == "32"} {
    ::MISC::ACTS_Dummy_Response {PASS} "static route max rule is $::rule_no"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "static route max rule should be 32, now is $::rule_no"
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-routing} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup : max static rule is 32}
} else {
    ::MISC::ACTS_Dummy_Response {WARNING} {there is no popup window to block over max static rule} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.4} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.4} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {8.8.4.30} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmp && ip.dst == 8.8.4.30} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- LAN ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-612 IPv4 Address validation check >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-612," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# vaild
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$Subnet_mask=255.255.0.0} {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=168.95.1.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.0.0} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {168.95.1.1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {8.8.8.8} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
# illegal
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_Subnet$.258} {$Subnet_mask=255.255.255.255} {$DHCP=Enable} {$pool_start=$LAN_Subnet$.259} {$pool_size=300}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {there is no popup window} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-613 IPv6 Address validation check >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-613," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_LType2$ ":"]
set char [format 0x%x [expr 0x[lindex $temp 0]+2]]
set a [string range $char 2 3]
set ::theip "fe80::$a[lindex $temp 1]:[lindex $temp 2]ff:fe[lindex $temp 3]:[lindex $temp 4][lindex $temp 5]"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# valid
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Link_Local_Addr_Type=Manual} {$Link_Local_Addr=$::theip} {$Link_Local_Prefix=64} {$DHCPv6_Server=Enable} {$Pool_Start=::50} {$Pool_End=::150} {$DNSv6_Mode=Manual} {$Primary_DNS=2001:b021:2d:202::77:1} {$Secondary_DNS=2001:b021:2d:205::77:1}]

::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {uiViewIPv6Addr} "$::theip" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewIPv6Prefix} {64} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {Address_Pool_start} {::50} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {Address_Pool_end} {::150} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {uiPrimaryDNSDHCP6} {2001:b021:2d:202::77:1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {uiSecondaryDNSDHCP6} {2001:b021:2d:205::77:1} {10} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# illeage
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Link_Local_Addr_Type=Manual} {$Link_Local_Addr=$::theip} {$Link_Local_Prefix=128}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {there is no popup window} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Link_Local_Addr_Type=Manual} {$Link_Local_Addr=fe80::h2tt:zz:123::55:0} {$Link_Local_Prefix=2} {$DHCPv6_Server=Enable} {$Pool_Start=::50} {$Pool_End=::150} {$DNSv6_Mode=Manual} {$Primary_DNS=2001:b021:yy:202::77:1} {$Secondary_DNS=2001:b021:kk:205::77:1}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {there is no popup window} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-614 Set DHCP pool with illegal range, check the error message >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-614," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$LAN_Subnet$.33} {$pool_size=300}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {there is warning popup}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {there is no popup window} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-662 Add new Static DHCP rule >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-662," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::GUIAPP::Get_Site_Number {::ACTS_Site_No}
set ::pc_mac "00:50:56:00:0$::ACTS_Site_No:01"
::MISC::ACTS_Dummy_Response {PASS} "$::pc_mac"
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {eth1} {::dmz_mac}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Get start IP
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Value {id} {StartIp} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
set temp [split $::value "."]
set i [lindex $temp 3]
set ::ip1 $LAN_Subnet$.[expr $i+5]
set ::ip2 $LAN_Subnet$.[expr $i+6]
set ::ip3 $LAN_Subnet$.[expr $i+7]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$active=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::pc_mac} {$ip=$::ip1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::lan1_mac} {$ip=$::ip2}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::dmz_mac} {$ip=$::ip3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}
::CONSOLE::Wait {5}
::DOSAPP::IPConfig {ipconfig /all} {LAN1} {IPv4 Address} "$::ip1" {PASS}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip2"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.100}
}
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip3"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DMZ_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DMZ_WKS should get $LAN_Subnet$.150}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}
::CONSOLE::Wait {5}
::DOSAPP::IPConfig {ipconfig /all} {LAN1} {IPv4 Address} "$::ip1" {PASS}
::USER_DEFINE::Check_PC_Ping {11.0.0.1} {100} {20} {1} {PASS}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip2"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.100}
}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip3"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DMZ_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DMZ_WKS should get $LAN_Subnet$.150}
}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_3} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_2} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-667 Add one Static DHCP rule which IP is not belong DHCP Pool subet >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-667," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:12:34:56} {$ip=192.168.2.50}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
::MISC::ACTS_Dummy_Response {PASS} "$result"
if { "$result" == "0" } {
    ::MISC::ACTS_Dummy_Response {FAIL} {DUT should pop up warning remind user can not add the rule with invalid IP address}
} else {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::MISC::ACTS_Dummy_Response {PASS} {DUT pop up warning block user add the rule with invalid IP address}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-663 Edit the Static DHCP rule >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-663," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$active=true} {$index=-1} {$rule_enable=true} {$mac=$::lan1_mac} {$ip=$LAN_Subnet$.100}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$LAN_Subnet$.100"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.100}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=editBtn_1} {$ip=$LAN_Subnet$.123}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="dhcp_static_list"]/table/tbody/tr[2]} "$::lan1_mac $LAN_Subnet$.123" {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$LAN_Subnet$.123"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.123}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-664 Remove the Static DHCP rule >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-664," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$active=true} {$index=-1} {$rule_enable=true} {$mac=$::lan1_mac} {$ip=$LAN_Subnet$.100}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$LAN_Subnet$.100"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.100}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-665 Add maximum number of static DHCP entry >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-665," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::GUIAPP::Get_Site_Number {::ACTS_Site_No}
set ::pc_mac "00:50:56:00:0$::ACTS_Site_No:01"
::MISC::ACTS_Dummy_Response {PASS} "$::pc_mac"
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {eth1} {::dmz_mac}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$active=true}]

# Get start IP
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Value {id} {StartIp} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
set temp [split $::value "."]
set ::j [lindex $temp 3]
set ::ip1 $LAN_Subnet$.[expr $::j+5]
set ::ip2 $LAN_Subnet$.[expr $::j+6]
set ::ip3 $LAN_Subnet$.[expr $::j+7]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::pc_mac} {$ip=$::ip1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::lan1_mac} {$ip=$::ip2}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::dmz_mac} {$ip=$::ip3}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Static DHCP}] {::rule_no}
set start [expr $::rule_no+1]
for {set ::x $start} {$::x < 9} {incr ::x} {
    set ::IP $LAN_Subnet$.[expr [expr $::j+5]+$::x]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:ab:11:0$::x} {$ip=$::IP}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Static DHCP}] {::rule_no}
if {"$::rule_no" == "8"} {
    ::MISC::ACTS_Dummy_Response {PASS} "static dhcp max rule is $::rule_no"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "static dhcp max rule should be 8, now is $::rule_no"
}

# Exceed maximun entries
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:11:11:66} {$ip=$LAN_Subnet$.130}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" != "0"} {
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::MISC::ACTS_Dummy_Response {PASS} {Exceed maximun entries add blocked}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Exceed maximun entries should be blocked}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}
::CONSOLE::Wait {5}
::DOSAPP::IPConfig {ipconfig /all} {LAN1} {IPv4 Address} "$::ip1" {PASS}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip2"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.100}
}
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$::ip3"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DMZ_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DMZ_WKS should get $LAN_Subnet$.150}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_Table_Rule >" [list {$Check_Table_Name=Static DHCP}] {::rule_no}
if {"$::rule_no" == "8"} {
    ::MISC::ACTS_Dummy_Response {PASS} "static dhcp rule not change after reboot"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "static dhcp max rule should not change after reboot"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_8} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_7} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_6} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_5} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_4} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_3} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_2} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-666 After setup IPv4 fixed ip rule,and LAN PC release/renew ip,check if GUI show correct information >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-666," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
::MISC::ACTS_Dummy_Response {PASS} "LAN1 IP is $::wks_ip"
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$active=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=$::lan1_mac} {$ip=$LAN_Subnet$.57}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
if {"$::wks_ip" == "$LAN_Subnet$.57"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS get correct ip}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1_WKS should get $LAN_Subnet$.57}
}

::WEB::WebDrv_Click {id} {connectionStatus} {20} {PASS}
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN1_WKS} {$ip_addr=$LAN_Subnet$.57} {$mac=$::lan1_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-668 Config DNS values with Dynamic (Proxy DNS) > 
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-668," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {30} {nameserver} {$LAN_IP$} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_4} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.zyxel.com.tw} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Wait {3}
::CONSOLE::Close_Shell {Shell_4}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns && ip.dst == $LAN_IP$} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && !(udp.srcport == 53)} {$judge=pass}]

# first dns unexist
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=1.2.3.4} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {30} {nameserver 1.2.3.4} {} {nameserver 8.8.8.8} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_4} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Wait {3}
::CONSOLE::Close_Shell {Shell_4}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 1.2.3.4} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 8.8.8.8} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 1.2.3.4} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 8.8.8.8} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-669 Config DNS values with Static DNS >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-669," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=10.10.10.10} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=20.20.20.20}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {30} {nameserver 10.10.10.10} {} {nameserver 20.20.20.20} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_4} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.google.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Wait {3}
::CONSOLE::Close_Shell {Shell_4}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 10.10.10.10} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 20.20.20.20} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 10.10.10.10} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 20.20.20.20} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-643 Set DUT as DHCP server, check if host can get IP address from DUT >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-643," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::lan1_ip} {PASS}
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::dmz_ip} {PASS}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# 10.0.0.x
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=10.0.0.1} {$DHCP=Enable}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {10.0.0.1} {::lan1_ip} {PASS} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {10.0.0.1} {::dmz_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {10.0.0.55} {255.255.255.0} {10.0.0.1} {1}

# 172.16.0.x
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$10.0.0.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=172.16.0.1} {$DHCP=Enable}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {172.16.0.1} {::lan1_ip} {PASS} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {172.16.0.1} {::dmz_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {172.16.0.55} {255.255.255.0} {172.16.0.1} {1}

# 192.168.0.x
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$172.16.0.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=192.168.0.1} {$DHCP=Enable}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {192.168.0.1} {::lan1_ip} {PASS} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {192.168.0.1} {::dmz_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {192.168.0.55} {255.255.255.0} {192.168.0.1} {1}

# default
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.0.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$DHCP=Enable}]
::WEB::WebDrv_CloseBrowser {A1000}
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-670 Config DNS values with From ISP >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-670," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {30} {nameserver} {172.205.77.1} {nameserver} {168.95.1.1}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.apple.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 172.205.77.1 && !(udp.srcport == 53)} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-671 DNS Server switch if first DNS Server unreachable or no reponse >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-671," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=10.10.10.10} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=8.8.8.8}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::CI_Cmd_Scan {} {cat /etc/resolv.conf} {30} {nameserver} {10.10.10.10} {nameserver} {8.8.8.8}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.apple.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 packet.pcap} {30}

set f [file exist $LogPath$]
::MISC::ACTS_Dummy_Response {PASS} "$f"
if {"$f" == "0"} {
    file mkdir $LogPath$
} else {
    set g [file exist $LogPath$packet.pcap]
    ::MISC::ACTS_Dummy_Response {PASS} "$g"
    if {"$g" == "0"} {
        file delete $LogPath$packet.pcap
    }
}
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "dns && ip.dst == 10.10.10.10" "dns && ip.dst == 8.8.8.8"

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-672 The RG MUST not offer the DNS Server on the WAN Interface >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-672," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {true > /etc/resolv.conf} {30}
::TESTLINK::CI_Cmd_More_No_Prompt {} "echo nameserver $::WAN_IP >> /etc/resolv.conf" {30} {echo search example.org >> /etc/resolv.conf} {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} {www.zyxel.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=packet.pcap} {$filter=ip.src==$::WAN_IP and dns} {$judge=fail}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::TESTLINK::CI_Cmd_More_No_Prompt {} {reboot} {5}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-680 Check CPE forward DNS server Failure response > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-680," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=168.95.1.1} {$secondary_DNS=1.1.5.5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=100}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {free.es} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dns.flags.rcode == 2} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-644 Set LAN DHCP server= Non, check if host can not get IP from DUT >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-644," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Get_Value {id} {StartIp} {::startip} {20} 
::WEB::WebDrv_Get_Value {id} {PoolSize} {::pool} {20} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {FAIL} 
::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {Static} {$LAN_Subnet$.55} {255.255.255.0} {$LAN_IP$} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {StartIp} "$::startip" {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PoolSize} "$::pool" {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {DHCP} {$LAN_IP$} {PASS} 
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-655 User change LAN PC configure from DHCP to Static, or from Static to Static,check LAN>status page >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-655," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Subnet$.45} {255.255.255.0} {$LAN_IP$} {1}
::CONSOLE::Wait {20}
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Subnet$.57} {255.255.255.0} {$LAN_IP$} {1}
::CONSOLE::Wait {60}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=MAC}] {::LAN_MAC}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=} {$ip_addr=$LAN_Subnet$.57} {$mac=$::LAN_MAC}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Fail >" [list {$check_parameter=$LAN_Subnet$.45}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-657 The IP address should not be saved if the address is subnet address or broadcast address >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-657," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_Subnet$.7} {$Subnet_mask=255.255.255.248}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.0} {20} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-656 CPE shall reconfigure DHCP start address of DHCP server when default ip address of LAN is changed >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-656," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_Subnet$.50} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$pool_size=50}]
if {"$PROJECT$" != "HB3"} {
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
    set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
    if {"$result" != "0"} {
        twapi::send_keys {{ENTER}}
        ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    } else {
        ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    }
    ::WEB::WebDrv_CloseBrowser {A1000} 
} else {
    ::WEB::WebDrv_CloseBrowser {A1000}

    ::WEB::WebDrv_OpenWebSite {http://$LAN_Subnet$.50$Adv_GUI_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {network} {20}
    ::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Subnet$.51} {20} {PASS} {full}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0}]
    ::WEB::WebDrv_CloseBrowser {A1000}
}

set check [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_Subnet$.50} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}]
::MISC::ACTS_Dummy_Response {PASS} "$check"
if {"$check" != "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {CPE block 'DHCP Pool range include LAN IP address'}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE should block 'DHCP Pool range include LAN IP address'}
    ::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$$LAN_Subnet$.50$Adv_GUI_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0}]
    ::WEB::WebDrv_CloseBrowser {A1000}    
}
<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-30006 If PC1 is set to 1st IP of LAN's DHCP range, check if PC2 can get IP address by DHCP >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-30006," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Subnet$.150} {255.255.255.0} {$LAN_IP$} {1} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$LAN_Subnet$.150} {$pool_size=50} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Subnet$.150} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PoolSize} {50} {10} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_IP {LAN1_WKS} {eth1} {$LAN_Subnet$.151} {PASS} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=arp.dst.proto_ipv4 == $LAN_Subnet$.150} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$Default_Start_IP$} {$pool_size=$Defaul_Pool_Size$} {$DCS_Pool_State=Enable} {$DCS_Pool2_State=Enable} {$DCS_Pool3_State=Enable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-649 Check LAN>status page,check if LAN client that is not connected to RG any more will disappear or not >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-649," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {eth1} {::wks_ip} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=DMZ_WKS} {$ip_addr=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::Enable_Network_Interface {DMZ} {Disable}
::CONSOLE::Wait {65} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Fail >" [list {$check_parameter=DMZ_WKS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::Enable_Network_Interface {DMZ} {Enable}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-650 Check deive support verification of address availability prior to making it avai >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-650," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Subnet$.55} {255.255.255.0} {$LAN_IP$} {1} 
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {eth1} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$LAN_Subnet$.31} {$pool_size=5} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}
::CONSOLE::Wait {10} 
::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}
::CONSOLE::Wait {5}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_PC}
set temp [split $::LAN_PC "."]
set char [lindex $temp 3]
if {"$char" < "36" && "$char" > "30" } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN PC get ip between 31~35}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN PC should get ip between 31~35, $char"
}

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {Static} {$LAN_Subnet$.32} {255.255.255.0} {$LAN_IP$} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
set temp [split $::wks_ip "."]
set char [lindex $temp 3]
if {"$char" < "36" && "$char" > "30" } {
    ::MISC::ACTS_Dummy_Response {PASS} {DMZ_WKS get ip between 31~35}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "DMZ_WKS should get ip between 31~35, $char"
}
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$Default_Start_IP$} {$pool_size=$Defaul_Pool_Size$} {$DCS_Pool_State=Enable} {$DCS_Pool2_State=Enable} {$DCS_Pool3_State=Enable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {DHCP} {$LAN_IP$} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-651 The CPE MUST offer DHCP only on the LAN Interface. MUST NOT offer DHCP on WAN interfaces >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-651," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Release_WKS_IP_Address {WAN_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {WAN_WKS} {eth1} {172.202.77.1} {::wks_ip} {PASS} 
::CONSOLE::Close_Shell {Shell_3}

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_UType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_UType2$
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dhcp && eth.src == $::WAN_MAC} {$judge=fail}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-654 After modify DHCPv4 pool,and LAN PC release/renew ip, check if GUI show correct information >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-654," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::MISC::ACTS_Dummy_Response {PASS} "$::wks_ip"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$LAN_Subnet$.100} {$pool_size=20} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::lan1_ip} {PASS} 
::MISC::ACTS_Dummy_Response {PASS} "$::lan1_ip"
::CONSOLE::Wait {10} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN1_WKS} {$ip_addr=$::lan1_ip} {$mac=}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Fail >" [list {$check_parameter=$::wks_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-646 Modify DHCP Server IP starting address and pool check host can work correctly >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-646," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=192.168.100.1} {$DHCP=Enable} {$pool_start=192.168.100.20} {$pool_size=30} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {192.168.100.1} {Don't Care}
::CONSOLE::Wait {5}
::DOSAPP::IPConfig {ipconfig /all} {LAN1} {IPv4 Address} {192.168.100.20} {PASS}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {192.168.100.1} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_IP {LAN1_WKS} {eth1} {192.168.100.21} {PASS} 

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.100.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_size=2}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {192.168.100.1} {::wks_ip} {FAIL} 

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.100.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$DHCP=Enable} {$pool_start=$Default_Start_IP$} {$pool_size=$Defaul_Pool_Size$} {$DCS_Pool_State=Enable} {$DCS_Pool2_State=Enable} {$DCS_Pool3_State=Enable}]
::CONSOLE::Wait {10} 
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-647 DHCP Server Lease Time >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-647," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Wait {20} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Get_Value {id} {dhcp_LeaseTime} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=100}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=bootp} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {grep 'Lease Time' packet.txt > check.txt} {10} 
::CONSOLE::CI_Cmd_Scan {} {cat check.txt} {10} {IP Address Lease Time:} "$::value"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$lease_time=100}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=LAN1} {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=180}]
::CONSOLE::Wait {180} 
::TESTLINK::Capture_Interval_Chk "$LogPath$Capture.pcap" "dhcp.option.dhcp == 3" "50"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$lease_time=43200}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-620 When the rule with the same IP address(different format) in the IPv4 Static DHCP page cannot save >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-620," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$LAN_Subnet$.2} {$pool_size=150} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:00:00:00:00:01} {$ip=$LAN_Subnet$.07}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:00:00:00:00:02} {$ip=$LAN_Subnet$.7}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {same ip rule should be block}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {same ip rule blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=04:0e:3c:17:b8:2a} {$ip=$LAN_Subnet$.50}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=04:0E:3C:17:B8:2A} {$ip=$LAN_Subnet$.100}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {same mac rule should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {same mac rule blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$pool_start=$Default_Start_IP$} {$pool_size=$Defaul_Pool_Size$} {$DCS_Pool_State=Enable} {$DCS_Pool2_State=Enable} {$DCS_Pool3_State=Enable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-621 IP Address validation check > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-621," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN_Alias >" [list {$enable=yes} {$alias_ip=192.168.2.1} {$alias_mask=255.255.255.0}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {uiViewAliasIPAddr} {192.168.2.1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewAliasNetMask} {255.255.255.0} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN_Alias >" [list {$enable=yes} {$alias_ip=192.168.3.258} {$alias_mask=255.255.259.0}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {illeage IP should be blocked}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {illeage ip blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-622 Vender ID validation check >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-622," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$DCS_Pool_State=Enabled} {$DCS_Pool_VenderID=abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {ConSerOpt60} {abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {ConSerOpt60} {~|;'"<>} {20}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {ConSerOpt60} {~|;'"<>} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-636 Check LAN IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-636," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Local
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_Scan {} {ifconfig br0} {10} {inet addr:} {$LAN_IP$} {Mask:} {255.255.255.0}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-637 Check ARP table >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-637," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::wks_mac} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {10} {ifconfig wlan0 down} {10} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::dmz_ip} {PASS} 
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {eth1} {::dmz_mac} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {10} {ifconfig wlan0 down} {10} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {eth1} {$LAN_IP$} {::lan2_ip} {PASS} 
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {eth1} {::lan2_mac} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} "$::wks_ip" "$::wks_mac * br0"
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} "$::dmz_ip" "$::dmz_mac * br0"
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} "$::lan2_ip" "$::lan2_mac * br0"
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} {172.206.77.1} {$ifconfig_VoIP$}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-616 Duplicate IP or MAC address assign rule check >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-616," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Get start IP
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Value {id} {StartIp} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
set temp [split $::value "."]
set ::j [lindex $temp 3]
set ::ip1 $LAN_Subnet$.[expr $::j+1]
set ::ip2 $LAN_Subnet$.[expr $::j+8]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:ab:cd:32} {$ip=$::ip1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:ab:cd:32} {$ip=$::ip2}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {same mac rule should be block}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {same mac rule blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=ac:c6:62:ab:cd:57} {$ip=$::ip1}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {same ip rule should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {same ip rule blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-617 IP and MAC address validation check > 
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-617," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Get start IP
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Get_Value {id} {StartIp} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
set temp [split $::value "."]
set ::j [lindex $temp 3]
set ::ip1 $LAN_Subnet$.[expr $::j+1]
set ::ip2 $LAN_Subnet$.[expr $::j+8]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:ab:cd:32} {$ip=$::ip1}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="dhcp_static_list"]/table/tbody/tr[2]} "1 00:13:49:ab:cd:32 $::ip1" {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=00:13:49:ab:cd:20} {$ip=$LAN_Subnet$.257}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {illeage ip should be block}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {illeage ip blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=-1} {$rule_enable=true} {$mac=Ac:c6:62:XE:WM:57} {$ip=$::ip2}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {illeage mac should be block}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {illeage mac blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Click {id} {StaticDhcp_CancleBtn} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Static_DHCP >" [list {$index=deleteBtn_1} {$delete=true}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-685 Check device can learning APR and handing ARP caches >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-685," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IP}] {::LAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=MAC}] {::LAN_MAC}
::MISC::ACTS_Dummy_Response {PASS} "LAN1 IP is $::LAN_IP"
::MISC::ACTS_Dummy_Response {PASS} "LAN1 MAC is $::LAN_MAC"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} "$::LAN_IP" "$::LAN_MAC"

::MISC::Enable_Network_Interface {LAN1} {Disable}
::CONSOLE::Wait {600} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_ScanIgnoreBlank_Fail {} {arp show} {10} "$::LAN_IP" "$::LAN_MAC"

::MISC::Enable_Network_Interface {LAN1} {Enable}
::CONSOLE::Wait {60} 
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {arp show} {10} "$::LAN_IP" "$::LAN_MAC"

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-686 It is compulsory the availability of proxy ARP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-686," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$ipv4_address=172.205.77.123} {$ipv4_netmask=255.255.255.0} {$ipv4_default_gw=3.4.5.6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.205.77.11} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 

if {"$WAN_MAC_END$" == "1"} {
    set ::WAN_MAC $DUT_WAN_MAC2_LType2$
} else {
    set ::WAN_MAC $DUT_WAN_MAC1_LType2$
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=arp && eth.src == $::WAN_MAC} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-687 Ping test. Ethernet connection. 2000 packages of a size of 20000 bytes to the mo >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-687," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm ping.txt} {10} 
::CONSOLE::CI_Cmd_More {} {ping $LAN_IP$ -s 19992 -c 2000 > ping.txt &} {10}
::CONSOLE::Wait {2005} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
while 1 {
    set result [::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {ps aux | grep ping} {10} {00 ping} {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress not finish"
        ::CONSOLE::Wait {20} 
    } else {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress done"
        break
    }
}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {grep 'loss' ping.txt} {10} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-688 Ping test. Ethernet connection. 2000 packages of a size of 1000 bytes to WAN IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-688," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm ping.txt} {10} 
::CONSOLE::CI_Cmd_More {} {ping 172.205.77.11 -s 992 -c 2000 > ping.txt &} {10}
::CONSOLE::Wait {2005} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
while 1 {
    set result [::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {ps aux | grep ping} {10} {00 ping} {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress not finish"
        ::CONSOLE::Wait {20} 
    } else {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress done"
        break
    }
}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {grep 'loss' ping.txt} {10} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-689 Ping test. Ethernet connection. 2000 packets of size 5000 bytes to domain name >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-689," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=172.205.77.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=172.205.77.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm ping.txt} {10} 
::CONSOLE::CI_Cmd_More {} {ping domain.pqatest.com -s 4992 -c 2000 > ping.txt &} {10}
::CONSOLE::Wait {2005} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
while 1 {
    set result [::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {ps aux | grep ping} {10} {00 ping} {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress not finish"
        ::CONSOLE::Wait {20} 
    } else {
        ::MISC::ACTS_Dummy_Response {PASS} "ping progress done"
        break
    }
}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {grep 'loss' ping.txt} {10} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- IPv6_LAN ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-691 Set LAN IPv6 Address Setup with Delegation prefix from WAN >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-691," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_LType2$ ":"]
set char [format 0x%x [expr 0x[lindex $temp 0]+2]]
set a [string range $char 2 3]
set ::theip "$a[lindex $temp 1]:[lindex $temp 2]ff:fe[lindex $temp 3]:[lindex $temp 4][lindex $temp 5]"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Disable} {$DHCPv6_Server=Disable} {$Max_RA_Interval=60}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Address:|$PPP_Delegated_IPv6_Prefix1$:$::theip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo ifdown eth1} {5} {sudo ifup eth1} {5}
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=500}]
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {5} {dhclient -6 eth1} {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}
::CONSOLE::Wait {70} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.prefix == $PPP_Delegated_IPv6_Prefix1$::} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet1.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {30} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet1.pcap} {$filter=icmpv6.opt.prefix == $PPP_Delegated_IPv6_Prefix1$::} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo ifdown eth1} {5} {sudo ifup eth1} {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet2.pcap} {$duration=200}]
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {15} {dhclient -6 eth1} {15}
::CONSOLE::CI_Cmd_Scan_Fail {} {ifconfig eth1} {5} {inet6 addr:} {$PPP_Delegated_IPv6_Prefix1$}
::CONSOLE::Wait {70} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet2.pcap} {$filter=icmpv6.opt.prefix.valid_lifetime == 0} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-693 Check GUI status page have IPv6 address information >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-693," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_LType2$ ":"]
set char [format 0x%x [expr 0x[lindex $temp 0]+2]]
set a [string range $char 2 3]
set ::theip "$a[lindex $temp 1]:[lindex $temp 2]ff:fe[lindex $temp 3]:[lindex $temp 4][lindex $temp 5]"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Address:|$PPP_Delegated_IPv6_Prefix1$:$::theip++Link-Local IPv6 Address:|fe80::$::theip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-694 Check DUT sends router advertisement(RA) if it is enable >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-694," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Disable} {$DHCPv6_Server=Disable} {$Set_RA=yes} {$Min_RA_Interval=45} {$Max_RA_Interval=60}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=500}]
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3}

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.188} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Interval_Chk "$LogPath$packet.pcap" "icmpv6.type == 134" "45~60.1"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet1.pcap} {$duration=500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
::CONSOLE::Wait {30} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet1.pcap} {$filter=icmpv6.type == 134} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-697 Check the M(Managed) and O(Other config) flag values of router advertisement which DUT sends >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-697," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay} {$Set_RA=yes} {$Min_RA_Interval=3} {$Max_RA_Interval=60}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=500}]
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.nd.ra.flag.m == 1 && icmpv6.nd.ra.flag.o == 1} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-698 Check the source link-layer address of router advertisement which DUT sends >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-698," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay} {$Set_RA=yes} {$Min_RA_Interval=45} {$Max_RA_Interval=60}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.linkaddr == $DUT_LAN_MAC_LType2$} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-703 LAN IPv6 Address assign Setup: stateless + DNS send by RADVD (DHCPv6 server disable) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-703," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Disable} {$DHCPv6_Server=Disable}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.nd.ra.flag.m == 0 && icmpv6.nd.ra.flag.o == 0} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.rdnss == 2001:b021:2d:202::77:1} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-704 LAN IPv6 Address assign Setup: stateless + DNS send by DHCPv6 (DHCPv6 server enable) >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-704," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {30} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::Wait {120} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.nd.ra.flag.m == 0 && icmpv6.nd.ra.flag.o == 1} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dhcpv6.option.type == 13 && dhcpv6.status_code == 2} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dhcpv6.dns_server == 2001:b021:2d:202::77:1} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-706 LAN IPv6 Address assign Setup: stateful + DHCPv6 relay (DHCPv6 relay enable) >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-706," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm /var/lib/dhcp/dhclient6.leases} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {20} {dhclient -6 eth1} {20} 
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN client get ipv6 fail}
}
::CONSOLE::Check_WKS_DHCP_DNS {LAN1_WKS} {eth1} {2001:b021:2d:202::77:1} {PASS} {IPv6}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-707 [Negative Test]Check DHCPv6 server pool size >
# Version : 1
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-707," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Static} {$Static_IPv6_Prefix=3fee::} {$Prefix_length=64} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$Pool_Start=::2} {$Pool_End=::3} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::CI_Capture_Response {} "ifconfig eth1 | grep 'Scope:Global'" {15} {::response} 
set WKS_IPv6 [string range "$::response" [string first "3fee" "$::response"] [expr [string first "/" "$::response"] - 1]]
if {[string first "3fee::2" "$WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN1_WKS get ipv6 success, $WKS_IPv6"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN1_WKS get ipv6 fail, $WKS_IPv6"
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::CI_Capture_Response {} "ifconfig eth1 | grep 'Scope:Global'" {15} {::response} 
set WKS_IPv6 [string range "$::response" [string first "3fee" "$::response"] [expr [string first "/" "$::response"] - 1]]
if {[string first "3fee::3" "$WKS_IPv6"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN2_WKS get ipv6 success, $WKS_IPv6"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN2_WKS get ipv6 fail, $WKS_IPv6"
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ifconfig eth1} {10} {inet6 addr: 3fee::} {Scope:Global} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-708 Setup DHCPv6 period,check if this function can work >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-708," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Static} {$Static_IPv6_Prefix=3fee::} {$Prefix_length=64} {$Preferred_Lifetime=200} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$Pool_Start=::33} {$Pool_End=::254} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {60} {dhclient -6 eth1} {60} 
::CONSOLE::Wait {220} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=dhcpv6.iaaddr.pref_lifetime == 200} {$judge=pass}]

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.188} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet.pcap $LogPath$708.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Interval_Chk "$LogPath$708.pcap" "dhcpv6.iaaddr.pref_lifetime == 200 && dhcpv6.msgtype == 5" "100"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$Pool_Start=::33} {$Pool_End=::254} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-709 Device MUST NOT filter ICMPv6 Packets >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-709," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {10} {dhclient -6 eth1} {10} 
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}

::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-720 Configure IPv6 DNS server1/2/3 with From ISP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-720," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {10} {dhclient -6 eth1} {10} 
::CONSOLE::Wait {10} 
::CONSOLE::Check_WKS_DHCP_DNS {LAN1_WKS} {eth1} {2001:b021:2d:202::77:1} {PASS} {IPv6}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-721 Configure IPv6 DNS server1/2/3 with UserDefined >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-721," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Manual} {$Primary_DNS=2001:b010:2e:206::88:1} {$Secondary_DNS=2001:b010:2e:206::88:1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {rm /var/lib/dhcp/dhclient6.leases} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 -r eth1} {60} {dhclient -6 eth1} {60} 
::CONSOLE::Wait {10} 
::CONSOLE::Check_WKS_DHCP_DNS {LAN1_WKS} {eth1} {2001:b010:2e:206::88:1} {PASS} {IPv6}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-725 IPv6 DNS cache >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-725," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}]
::MISC::ACTS_Dummy_Response {PASS} "ping check is $result"
if {"$result" != "PASS"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WKS_IPv6" {PASS} {64} {10} {1} {1} {128} {IPv6}    
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateful} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Proxy} {$DNS_Query_Mode=IPv6 DNS Server Only}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60}
::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10} 
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
set result [::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1_WKS ping ipv6test.autopqa.net PASS}
} else {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60}
    ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6}
}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet1.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {eth1} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Close_Shell {Shell_3} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns.qry.name == ipv6test.autopqa.net} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ipv6.dst == 2001:b021:2d:205::77:1} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=dns.qry.name == ipv6test.autopqa.net} {$judge=fail}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet1.pcap} {$filter=ipv6.dst == 2001:b021:2d:205::77:1} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$DNS_Query_Mode=IPv4 DNS Server First}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-726 Configure LAN IPv6 ULA Address and prefix,check it can work well >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-726," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=Auto Generate}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {IPv6 LAN Setup} {20} {PASS}
::WEB::WebDrv_Get_Value {id} {IPv6LanULAAddr} {::value} {10}
::MISC::ACTS_Dummy_Response {PASS} "IPv6 ULA Addr $::value"
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {20}

::WEB::WebDrv_OpenWebSite "http://\[$::value\]" {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$password=$GUI_Pwd$}]
::CONSOLE::Wait {5} 
set result [::WEB::WebDrv_Click {xpath} {//*[@id="home"]/img} {10} {PASS} ]
::MISC::ACTS_Dummy_Response {PASS} "$result"
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Login success}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Login fail}
}
::WEB::WebDrv_CloseBrowser {A1000} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-727 The ULA preferred lifetime should be smaller than valid lifetime >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-727," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=Auto Generate} {$Global_Addr_Type=Static} {$Static_IPv6_Prefix=3fee::} {$Prefix_length=64} {$Preferred_Lifetime=3600} {$Valid_Lifetime=1800} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
set result [::WEB::WebDrv_Switch_To_Frame {default} {} {20}]
if {"$result" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI should pop-up warning message}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {illeage lifetime setting blocked}
    twapi::send_keys {{ENTER}}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=Auto Generate} {$Global_Addr_Type=Static} {$Static_IPv6_Prefix=3fee::} {$Prefix_length=64} {$Preferred_Lifetime=1800} {$Valid_Lifetime=3600} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {IPv6 LAN Setup} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Check_Value {id} {IPv6PreferredTime} {1800} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {IPv6ValidLifeTime} {3600} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {60} {ifconfig eth1 up} {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::CI_Cmd_More {} {dhclient -6 eth1} {60} 
::CONSOLE::Wait {70} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.prefix.valid_lifetime == 3600} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.prefix.preferred_lifetime == 1800} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-728 Default state(Disable ULA) should not show ULA prefix on status page >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-728," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_LType2$ ":"]
set char [format 0x%x [expr 0x[lindex $temp 0]+2]]
set a [string range $char 2 3]
set ::theip "$a[lindex $temp 1]:[lindex $temp 2]ff:fe[lindex $temp 3]:[lindex $temp 4][lindex $temp 5]"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_ipv6_mode=IPv4/IPv6}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {IPv6 LAN Setup} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Is_Selected {id} {IPv6ULAType_None} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {ULA default is off}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ULA default should be off}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Address:|$PPP_Delegated_IPv6_Prefix1$:$::theip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=Manual} {$IPv6_ULA_Address=fd54:f3ac:38f9:0::1}]
if {[string first "2742" "$PROJECT$"] == -1 } {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Address:|$PPP_Delegated_IPv6_Prefix1$:$::theip fd54:f3ac:38f9::1} {$Result=PASS}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Address:|fd54:f3ac:38f9::1 $PPP_Delegated_IPv6_Prefix1$:$::theip} {$Result=PASS}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$IPv6_ULA_Type=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-729 Overview and Home Network -> Overview only show GUA IPv6 Addresses for the LAN addresses >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-729," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

set temp [split $DUT_LAN_MAC_LType2$ ":"]
set char [format 0x%x [expr 0x[lindex $temp 0]+2]]
set a [string range $char 2 3]
set ::theip "$a[lindex $temp 1]:[lindex $temp 2]ff:fe[lindex $temp 3]:[lindex $temp 4][lindex $temp 5]"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=Link-Local IPv6 Address:|fe80::$::theip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-21527 LAN client should remove IPv6 address under disable IPv6 service from WAN or LAN interface > 
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-21527," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4/IPv6} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes} ]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_IPv6_LAN >" [list {$Global_Addr_Type=Delegate prefix} {$IPv6_Addr_Assign_Setup=Stateless} {$DHCPv6_assign_DNS=Enable} {$DHCPv6_Server=Enable} {$DNSv6_Mode=Relay}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$PPP_IPv6_Prefix$:}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=LAN Information} {$Check_Str_Arr=IPv6 Prefix:|$PPP_Delegated_IPv6_Prefix1$::}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "LAN PC get IPv6 $::LAN_IP"
if {[string first "2001" "$::LAN_IP"] == -1 } {
    ::MISC::ACTS_Dummy_Response {WARNING} {DUT can't send IPv6 to LAN client}
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::LAN_IP"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client get ipv6 fail, $::LAN_IP"
}

::USER_DEFINE::Check_PC_Ping {domain.pqatest.com} {100} {20} {1} {PASS}
::DOSAPP::Dos_Cmd_Capture {ping -6 ipv6test.autopqa.net} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from 2001:b021:2d:205::77:1:} {$Result=PASS}]

# Disable IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=packet.pcap} {$duration=300}]
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1} {$Check_Str_Arr=IPv6 Global IP:|$PPP_IPv6_Prefix$:} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=packet.pcap} {$filter=icmpv6.opt.prefix.valid_lifetime == 0} {$judge=pass}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r -6 eth1} {20} {dhclient -v -6 eth1} {100}
::CONSOLE::Wait {30} 
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::CONSOLE::CI_Cmd_Scan_Fail {} {ifconfig eth1} {10} {inet6 addr:} {$PPP_Delegated_IPv6_Prefix1$} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {ipv6test.autopqa.net} {FAIL} {64} {10} {1} {1} {128} {IPv6} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "LAN PC get IPv6 $::LAN_IP"
if {[string first "2001" "$::LAN_IP"] == -1 } {
    ::MISC::ACTS_Dummy_Response {WARNING} {DUT can't send IPv6 to LAN client}
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
if {[string first $PPP_Delegated_IPv6_Prefix1$ "$::LAN_IP"] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN client get ipv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client get ipv6 fail, $::LAN_IP"
}

::USER_DEFINE::Check_PC_Ping {domain.pqatest.com} {100} {20} {1} {PASS}
::DOSAPP::Dos_Cmd_Capture {ping -6 ipv6test.autopqa.net} {C:\ping.txt}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=C:\ping.txt} {$Check_String=Reply from 2001:b021:2d:205::77:1:} {$Result=PASS}]

<TCL_Block_End>
-CaseEnd-


<<**************************************** Open server069 in 2003 server ****************************************>>
%ENV-BAT|L1|L2%                                                      
+CaseStart+
<< ---------------- Open server069 in 2003 server ---------------- >>
::DOSAPP::Dos_Cmd "C:"
::DOSAPP::Dos_Cmd "cd C:\\PSTools"
::DOSAPP::Dos_Cmd "psexec \\\\172.202.77.10 -u administrator -p exchange taskkill /f /im javaw.exe"
::DOSAPP::Dos_Cmd "psexec \\\\172.202.77.10 -u administrator -p exchange D:\\acts\\TR069\\server069.exe"
-CaseEnd-

<<**************************************** MGMT ****************************************>>
%ENV-BAT|L1|L2%                                                      
+CaseStart+
<< ---------------- MGMT ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-2644 Maximum/Special characters TR-069 ACS URL > 
# Bug: special cahracter '|' can't input success but not pop up error message
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2644," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong URL format
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSURL} "@#\$%^&*()_+;><:|\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input wrong URL format"   
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# Test special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSURL} "http://192.168.2.50@#\$%^&*()_+;><:|\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input non-supported characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2645 Maximum/Special characters TR-069 periodic interval > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2645," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong URL format
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_PeriodInterval} "-60" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input negative number"   
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# Test special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_PeriodInterval} "@#\$%^&*()_+;><:|\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input special characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2646 Maximum/Special characters TR-069 username > 
# Redmine ID 157037 & 157034
# BUG: when set incorrect value, DUT should pop up error message 
# Note: 2841 tr69 page only support 63 chars, so use 64 chars to test
# Note: 2841 tr69 page input `;|>< and apply, page crash
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2646," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong value 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# 256 characters
::WEB::WebDrv_Set_Value {id} {CWMP_ACSUserName} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Username:} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {set ACS UserName 256 characters, CPE change value success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE ACS UserName should support 256 characters}
}
# set page_status [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}] 
# if {[string first "-1" $page_status] != -1} {
#     ::MISC::ACTS_Dummy_Response {PASS} {When set ACS UserName 64 characters, CPE pop up error message successfully}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {When set ACS UserName 64 characters, CPE must pop up error message}
# }
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSUserName} "@#\$%^&*()_+:\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Username:} "@#\$%^&*()_+:\]\[-!"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Set ACS Username supported special characters success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Set ACS Username supported special characters fail, DUT need to support special characters}
}

# none supported special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSUserName} "`;><|" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input none-supported special characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2647 Maximum/Special characters TR-069 password > 
# Redmine ID 157037 & 157034
# BUG: when set incorrect value, DUT should pop up error message 
# Note: 2841 tr69 page only support 63 chars, so use 64 chars to test
# Note: 2841 tr69 page input `;|>< and apply, page crash
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2647," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong URL format
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# 64 characters
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Password:} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {set ACS Password 256 characters, CPE change value success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE ACS Password should support 256 characters}
}
# set page_status [::WEB::WebDrv_Get_Value {id} {CWMP_ACSPassword} {::value} {10}]
# if {[string first "-1" $page_status] != -1} {
#     ::MISC::ACTS_Dummy_Response {PASS} {When set ACS pwd 64 characters, CPE pop up error message successfully}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {When set ACS pwd 64 characters, CPE must pop up error message}
# }
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# supported special chars
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "@#\$%^&*()_+:\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Password:} "@#\$%^&*()_+:\]\[-!"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Set ACS pwd supported special characters success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Set ACS pwd supported special characters fail, DUT need to support special characters}
}
# none supported special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "`;><|" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSPassword} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input none-supported special characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2648 Maximum/Special characters TR-069 connection requestion username > 
# Redmine ID 157037 & 157034
# BUG: when set incorrect value, DUT should pop up error message 
# Note: 2841 tr69 page only support 63 chars, so use 64 chars to test
# Note: 2841 tr69 page input `;|>< and apply, page crash
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2648," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong URL format
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# 64 characters
::WEB::WebDrv_Set_Value {id} {CWMP_ConnectionRequestUserName} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {ConnectionRequestUsername:} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {set ACS ConnReq Username 256 characters, CPE change value success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE ConnReq Username should support 256 characters}
}
# set page_status [::WEB::WebDrv_Get_Value {id} {CWMP_ConnectionRequestUserName} {::value} {10}]
# if {[string first "-1" $page_status] != -1} {
#     ::MISC::ACTS_Dummy_Response {PASS} {When set ACS Connection Request UserName 64 characters, CPE pop up error message successfully}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {When set ACS Connection Request UserName 64 characters, CPE must pop up error message}
# }
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ConnectionRequestUserName} "@#\$%^&*()_+:\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {ConnectionRequestUsername:} "@#\$%^&*()_+:\]\[-!"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Set ACS connReq username supported special characters success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Set ACS connReq username supported special characters fail, DUT need to support special characters}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# none supported special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ConnectionRequestUserName} "`;><|" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ConnectionRequestUserName} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input none-supported special characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2649 Maximum/Special characters TR-069 connection requestion password > 
# Redmine ID 157037 & 157034
# BUG: when set incorrect value, DUT should pop up error message 
# Note: 2841 tr69 page only support 63 chars, so use 64 chars to test
# Note: 2841 tr69 page input `;|>< and apply, page crash
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2649," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Test wrong URL format
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# 64 characters
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {ConnectionRequestUsername:} "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaB"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {set ACS Connreq pwd 256 characters, CPE change value success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE Connreq pwd should support 256 characters}
}
# set page_status [::WEB::WebDrv_Get_Value {id} {CWMP_ACSPassword} {::value} {10}]
# if {[string first "-1" $page_status] != -1} {
#     ::MISC::ACTS_Dummy_Response {PASS} {When set ACS Connreq pwd 64 characters, CPE pop up error message successfully}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {When set ACS Connreq pwd 64 characters, CPE must pop up error message}
# }
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "@#\$%^&*()_+:\]\[-!" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Get_Value {id} {CWMP_ACSPassword} {::value} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
set result [::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {ConnectionRequestPassword:} "@#\$%^&*()_+:\]\[-!"]
if {"$result" == "PASS"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Set ACS Connreq pwd supported special characters success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Set ACS Connreq pwd supported special characters fail, DUT need to support special characters}
}
# none supported special character
::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Set_Value {id} {CWMP_ACSPassword} "`;><|" {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Apply_ID} {20}
::CONSOLE::Wait {5}
set result [::WEB::WebDrv_Get_Value {id} {CWMP_ACSPassword} {::value} {10}]
if {[string first "-1" "$result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} "GUI pop error message success"
    twapi::send_keys {{ENTER}}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "GUI should pop error message, when input none-supported special characters"   
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-2664 WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2664," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable all
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$LAN_IP$} {FAIL} 
if {"$MGMT_HTTP_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {FAIL}     
}
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=WAN}]

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$LAN_IP$} {FAIL} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2668 Allowed WAN side user with Trust Domain - Host > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2668," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Only http WAN Enable
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.11} {$End_Trust_IP1=172.205.77.11}]

::CONSOLE::Check_WKS_Web_Exist {NAT} "http://$::WAN_IP" {FAIL} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2669 Allowed WAN side user with Trust Domain - Range > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2669," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Only http WAN Enable
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.9} {$End_Trust_IP1=172.205.77.15}]

::CONSOLE::Check_WKS_Web_Exist {NAT} "http://$::WAN_IP" {FAIL} 
::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2671 Allow LAN and WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2671," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable LAN & WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=LAN & WAN}]
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$LAN_IP$} {PASS} 
if {"$MGMT_HTTP_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_Web_Exist {NAT} "http://$::WAN_IP" {PASS} 
    ::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {PASS}     
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2672 Disallow LAN and WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2672," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable LAN & WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTP} {$Server_Access=Disable}]
::CONSOLE::Wait {20} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://$LAN_IP$} {FAIL} 
if {"$MGMT_HTTP_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_Web_Exist {WAN_WKS} "http://$::WAN_IP" {FAIL} 
}
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2674 LAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2674," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 
if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}

# Disable LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=WAN}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 
if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan_Fail {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2675 WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2675," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 
if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}

# Enable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=WAN}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 
if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan_Fail {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2679 Allowed WAN side user with Trust Domain - Host > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2679," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.11} {$End_Trust_IP1=172.205.77.11}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2680 Allowed WAN side user with Trust Domain - Host > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2680," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.9} {$End_Trust_IP1=172.205.77.13}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2682 Allow LAN and WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2682," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN & WAN} {$Range=all}]

if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan_Fail {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=LAN} {$Range=all}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2683 Disallow LAN and WAN side user with Default Port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2683," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=HTTPS} {$Server_Access=Disable}]
if {"$MGMT_HTTPS_WAN_Support$" == "yes"} {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan {} "curl https://$::WAN_IP$Adv_GUI_URL$ -k -m 8" {20} {(28)} {Connection timed out} 
}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} "curl $LAN_URL_HTTPS$ -k -m 8" {20} {(28)} {Connection timed out} 
::WEB::WebDrv_CloseBrowser {A1000} 

# recover ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2724 LAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2724," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set PPPoE WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable LAN ICMP $ ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

#Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

#Back to default settint (Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2725 WAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2725," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable WAN ICMP $ ping
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

#Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

#Back to default settint (Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2728 Allowed WAN side user with Trust Domain - Host >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2728," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Set ICMP WAN trust domain & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.11} {$End_Trust_IP1=172.205.77.11}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}

::CONSOLE::Check_WKS_Ping {NAT} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

#Back to default setting(Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2729 Allowed WAN side user with Trust Domain - Range >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2729," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Set ICMP WAN trust domain & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.10} {$End_Trust_IP1=172.205.77.100}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}

::CONSOLE::Check_WKS_Ping {NAT} {eth2} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

#Back to default setting(Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2731 Allow LAN and WAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2731," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable LAN & WAN ICMP $ ping
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2732 Disallow LAN and WAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2732," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable LAN & WAN ICMP $ ping
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {} {$LAN_IP$} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IP" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no}

# back default
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN}]

# logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2707 LAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2707," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}
}
#Enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$9} {FAIL} 
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}
}
#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-2708 WAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2708," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
#Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}    
} 
#Enable SSH WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]
::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$9} {FAIL}    
} 
# Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

# logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-2712 Allowed WAN side user with Trust Domain - Host >
# Chile not support mgmt ssh login
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2712," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable WAN SSH with trust domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.11} {$End_Trust_IP1=172.205.77.11}]

if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {NAT} "$::WAN_IP -p 22 -b 172.205.77.1" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22 -b 172.205.77.11" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2713 Allowed WAN side user with Trust Domain - Range >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2713," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable WAN SSH with trust domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=172.205.77.10} {$End_Trust_IP1=172.205.77.100}]

if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {NAT} "$::WAN_IP -p 22 -b 172.205.77.1" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22 -b 172.205.77.11" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2714 Allowed WAN side user with Trust Domain - Multiple rules >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2714," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::LAN1_IP} 

#Enable LAN & WAN SSH with trust domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN} {$Range=range} {$Start_Trust_IP1=$::LAN1_IP} {$End_Trust_IP1=$::LAN1_IP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN} {$Range=range} {$Start_Trust_IP2=172.205.77.9} {$End_Trust_IP2=172.205.77.15}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN} {$Range=range} {$Start_Trust_IP3=172.205.77.11} {$End_Trust_IP3=172.205.77.11}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22}  {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {LAN2_WKS} {$LAN_IP$ -p 22}  {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {NAT} "$::WAN_IP -p 22 -b 172.205.77.1" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22 -b 172.205.77.11" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2715 Allow LAN side user with Default Port - used SFTP >
# Redmine ID 166952
# Bug: test.txt file upload fail 
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2715," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable LAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#LAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} {sftp $CPEUSERNAME$@$LAN_IP$}
::CONSOLE::Wait {2} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {3}
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {10} {sftp>} {}]
if {[string first "PASS" $Result] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN client sftp login success" 
    ::CONSOLE::CI_Cmd {} {put test.txt}
    ::CONSOLE::Wait {5}
    ::CONSOLE::CI_Cmd {} {put test.cfg}
    ::CONSOLE::Wait {5} 
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
    ::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20}
    ::CONSOLE::CI_Cmd {} {get rom-t}
    ::CONSOLE::Wait {15}  
    ::CONSOLE::CI_Cmd_More {} {exit} {5}        
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client sftp login fail" 
}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    #WAN client connect fail
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
    ::CONSOLE::CI_Cmd {} "sftp $CPEUSERNAME$@$::WAN_IP"
    ::CONSOLE::Wait {3} 
    ::CONSOLE::CI_Cmd {} {$CPEPASSWORD$}
    ::CONSOLE::Wait {3}
    set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}] 
    if {[string first "not find" $Result] > 0} {
        ::MISC::ACTS_Dummy_Response {PASS} "WAN client sftp login fail" 
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} "WAN client sftp login success" 
        ::CONSOLE::CI_Cmd_More {} {exit} {5}
    }
}
#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2716 Allow WAN side user with Default Port - used SFTP >
# Redmine ID 166952
# Bug: test.txt file upload fail 
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2716," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable WAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]

#LAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd {} {sftp $CPEUSERNAME$@$LAN_IP$}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {3} 
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}]
if {[string first "not find" $Result] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN client sftp login fail" 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client sftp login success, expectation is fail" 
    ::CONSOLE::CI_Cmd_More {} {exit} {5}
}

if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    #WAN client connect success
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
    ::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
    ::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
    ::CONSOLE::CI_Cmd {} "sftp $CPEUSERNAME$@$::WAN_IP"
    ::CONSOLE::Wait {2} 
    ::CONSOLE::CI_Cmd {} {yes}
    ::CONSOLE::Wait {3} 
    ::CONSOLE::CI_Cmd {} {$CPEPASSWORD$}
    ::CONSOLE::Wait {3} 
    set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}] 
    if {[string first "PASS" $Result] >= 0} {
        ::MISC::ACTS_Dummy_Response {PASS} "WAN client sftp login success" 
        ::CONSOLE::CI_Cmd {} {put test.txt}
        ::CONSOLE::Wait {5}
        ::CONSOLE::CI_Cmd {} {put test.cfg}
        ::CONSOLE::Wait {5} 
        ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
        ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
        ::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20}
        ::CONSOLE::CI_Cmd {} {get rom-t}
        ::CONSOLE::Wait {15}  
        ::CONSOLE::CI_Cmd_More {} {exit} {5}
    } else {     
        ::MISC::ACTS_Dummy_Response {FAIL} "WAN client sftp login fail, expectation is pass"  
    }
}
#Back to LAN SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2717 Allow LAN side user with Default Port - used SCP >
# BUG: Can't upload test.cfg & test.txt file
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2717," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

#Enable LAN SSH(SCP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

#LAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} {scp $CPEUSERNAME$@$LAN_IP$:/rom-t /root}
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
# Upload test.cfg
::CONSOLE::CI_Cmd {} {scp test.cfg $CPEUSERNAME$@$LAN_IP$:/var/tmp/sftp_root/}
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
# Upload test.txt
::CONSOLE::CI_Cmd {} {scp test.txt $CPEUSERNAME$@$LAN_IP$:/var/tmp/sftp_root/}
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
# Download
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {10} {rm test.cfg} {10}      

if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    # WAN client connect fail
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
    ::CONSOLE::CI_Cmd_More {} {rm test.txt} {5} {rm test.cfg} {5} {rm rom-t} {5}
    ::CONSOLE::CI_Cmd_More {} {touch test.txt} {5} 
    ::CONSOLE::CI_Cmd {} "scp test.txt $CPEUSERNAME$@$::WAN_IP:/var/tmp/sftp_root/"
    ::CONSOLE::Wait {3} 
    ::CONSOLE::CI_Cmd {} {$CPEPASSWORD$}
    ::CONSOLE::Wait {3}

    ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
    ::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
    ::CONSOLE::CI_Cmd_Scan_Fail {} {ls -a} {10} {test.txt} {} 
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2718 Allow WAN side user with Default Port - used SCP >
# Redmine ID 166958
# BUG: Can't upload test.cfg & test.txt file
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2718," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
<TCL_Block_End>
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable to WAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]

# WAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
# Download rom-t from CPE
::CONSOLE::CI_Cmd {} "scp $CPEUSERNAME$@$::WAN_IP:/rom-t /root"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
# Upload test.cfg
::CONSOLE::CI_Cmd {} "scp test.cfg $CPEUSERNAME$@$::WAN_IP:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
# Upload test.txt
::CONSOLE::CI_Cmd {} "scp test.txt $CPEUSERNAME$@$::WAN_IP:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {10} {rm test.cfg} {10}      

# LAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} 
::CONSOLE::CI_Cmd {} {scp test.txt $CPEUSERNAME$@$LAN_IP$:/var/tmp/sftp_root/}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$CPEPASSWORD$}
::CONSOLE::Wait {3}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls -a} {10} {test.txt} {} 

# Back to LAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

# logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2719 Allow LAN and WAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2719," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

# Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Enable SSH LAN & WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS} 
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {PASS}
}
# logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2720 Disallow LAN and WAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2720," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} {$LAN_IP$ -p 22} {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL} 
if {"$MGMT_SSH_WAN_Support$" == "yes"} {
    ::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IP -p 22" {$CPEUSERNAME$} {$CPEPASSWORD$} {FAIL}
}

# Enable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2723 Check Dropbear SSH Server version >
# BUG: Redmine ID 100764
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2723," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# renew ACTS LAN IP
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 

#Get SSH version from website (2020.81 - 29 October 2020)
::WEB::WebDrv_OpenWebSite {https://matt.ucc.asn.au/dropbear/CHANGES} {A1000} {No} {No}
::CONSOLE::Wait {15} 
::WEB::WebDrv_Get_Text {xpath} {/html/body/pre} {::value} {20} 
::MISC::ACTS_Dummy_Response {PASS} "Website: $::value"
::WEB::WebDrv_CloseBrowser {A1000} 

#get SSH version from console 
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Capture_Response {} {dropbear -V} {30} {::response} 
set ::version [string range "$::response" [string first "2" "$::response"] [string first "2" "$::response"]+6]
::MISC::ACTS_Dummy_Response {PASS} "Console: $::version"
#Check version
set ::test [string first "$::version" "$::value"]
if {"$::test" == "-1"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {DUT SSH version should be latest version} 
}
<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2763 Allow Disallow LAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2763," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set PPPoE WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable LAN ICMP $ ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 

#Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 

#Back to default settint (Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2764 Allow Disallow WAN side user >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2764," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable WAN ICMP $ ping
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no} 

#Disable ICMP & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no} 

#Back to default settint (Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no} 
::CONSOLE::Check_WKS_Ping {WAN_WKS} {} "$::WAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2765 Allowed WAN side user with Trust Domain - Host >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2765," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get WAN_WKS IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}

#Set ICMP WAN trust domain & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=$::WKS_IPv6} {$End_Trust_IP1=$::WKS_IPv6}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}

::CONSOLE::Check_WKS_Ping {NAT} {eth2} "$::WAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no}

#Back to default setting(Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2766 Allowed WAN side user with Trust Domain - Range >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2766," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get WAN_WKS IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WKS_IPv6}

#Set ICMP WAN trust domain & ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=$WAN_WKS_IPv6_Prefix$::1} {$End_Trust_IP1=$WAN_WKS_IPv6_Prefix$:ffff:ffff:ffff:ffff}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}

::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth1} "$::WAN_IPv6" {FAIL} {64} {5} {1} {1} {128} {IPv6} {no}
::CONSOLE::Check_WKS_Ping {WAN_WKS} {eth2} "$::WAN_IPv6" {PASS} {64} {5} {1} {1} {128} {IPv6} {no}

#Back to default setting(Both)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=ICMP} {$Server_Access=LAN & WAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2754 Allow Disallow LAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2754," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::DUT_WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::DUT_LAN_IPv6}

#Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::DUT_LAN_IPv6%eth1 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::DUT_WAN_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

#Enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::DUT_LAN_IPv6%eth1 -p 22"  {$SSH_User$} {$SSH_Pwd$} {PASS} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::DUT_WAN_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2755 Allow Disallow WAN side user with Default Port >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2755," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::DUT_WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::DUT_LAN_IPv6}


#Disable SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=Disable}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::DUT_LAN_IPv6%eth1 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::DUT_WAN_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}

#Enable SSH WAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]

::CONSOLE::Check_WKS_SSH_Exist {LAN1_WKS} "$::DUT_LAN_IPv6%eth1 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::DUT_WAN_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {PASS}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2756 Allowed WAN side user with Trust Domain - Host >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2756," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get WAN_WKS IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WAN_WKS_IPv6}
#Get NAT IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=NAT} {$Interface=eth2} {$IPv6_Type=Global}] {::NAT_IPv6}

#Enable WAN SSH with trust domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=$::WAN_WKS_IPv6} {$End_Trust_IP1=$::WAN_WKS_IPv6}]

::CONSOLE::Check_WKS_SSH_Exist {NAT} "$::WAN_IPv6 -b $::NAT_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL} 
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IPv6 -b $::WAN_WKS_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {PASS}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2757 Allowed WAN side user with Trust Domain - Range >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2757," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get WAN_WKS IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WAN_WKS_eth1_IPv6}
#Get WAN_WKS IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=WAN_WKS} {$Interface=eth2} {$IPv6_Type=Global}] {::WAN_WKS_eth2_IPv6}

#Enable WAN SSH with trust domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN} {$Range=range} {$Start_Trust_IP1=2001:b021:2d:205::1} {$End_Trust_IP1=2001:b021:2d:205:ffff:ffff:ffff:ffff}]

::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IPv6 -b $::WAN_WKS_eth1_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {FAIL}
::CONSOLE::Check_WKS_SSH_Exist {WAN_WKS} "$::WAN_IPv6 -b $::WAN_WKS_eth2_IPv6 -p 22" {$SSH_User$} {$SSH_Pwd$} {PASS}

#Back to default enable SSH LAN
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN} {$Range=all}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2758 Allow LAN side user with Default Port - used SFTP >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2758," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable LAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#LAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} "sftp $SSH_User$@\[$::LAN_IPv6%eth1\]"
::CONSOLE::Wait {2} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {3}
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {10} {sftp>} {}]
if {[string first "PASS" $Result] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN client sftp login success" 
    ::CONSOLE::CI_Cmd {} {put test.txt}
    ::CONSOLE::Wait {5}
    ::CONSOLE::CI_Cmd {} {put test.cfg}
    ::CONSOLE::Wait {5} 
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
    ::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20}
    ::CONSOLE::CI_Cmd {} {get rom-t}
    ::CONSOLE::Wait {15}  
    ::CONSOLE::CI_Cmd_More {} {exit} {5}        
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client sftp login fail" 
}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

#WAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
::CONSOLE::CI_Cmd {} "sftp $SSH_User$@\[$::WAN_IPv6\]"
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$}
::CONSOLE::Wait {3}
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}] 
if {[string first "not find" $Result] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "WAN client sftp login fail" 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "WAN client sftp login success" 
    ::CONSOLE::CI_Cmd_More {} {exit} {5}
}
#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2759 Allow WAN side user with Default Port - used SFTP >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2759," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable WAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]

#LAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd {} "sftp $SSH_User$@\[$::LAN_IPv6%eth1\]"
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {3} 
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}]
if {[string first "not find" $Result] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN client sftp login fail" 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN client sftp login success, expectation is fail" 
    ::CONSOLE::CI_Cmd_More {} {exit} {5}
}

#WAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} "sftp $SSH_User$@\[$::WAN_IPv6\]"
::CONSOLE::Wait {2} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$}
::CONSOLE::Wait {3} 
set Result [::CONSOLE::CI_Cmd_Scan {} {atbt} {20} {sftp>} {}] 
if {[string first "PASS" $Result] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "WAN client sftp login success" 
    ::CONSOLE::CI_Cmd {} {put test.txt}
    ::CONSOLE::Wait {5}
    ::CONSOLE::CI_Cmd {} {put test.cfg}
    ::CONSOLE::Wait {5} 
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
    ::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
    ::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20}
    ::CONSOLE::CI_Cmd {} {get rom-t}
    ::CONSOLE::Wait {15}  
    ::CONSOLE::CI_Cmd_More {} {exit} {5}
} else {     
    ::MISC::ACTS_Dummy_Response {FAIL} "WAN client sftp login fail, expectation is pass"  
}
#Back to LAN SSH
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2760 Allow LAN side user with Default Port - used SCP >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2760," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable LAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

#LAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} "scp $SSH_User$@\[$::LAN_IPv6%eth1\]:/rom-t /root"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd {} "scp test.cfg $SSH_User$@\[$::LAN_IPv6%eth1\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd {} "scp test.txt $SSH_User$@\[$::LAN_IPv6%eth1\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {10} {rm test.cfg} {10}      

#WAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {5} {rm test.cfg} {5} {rm rom-t} {5}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {5} 
::CONSOLE::CI_Cmd {} "scp test.txt $SSH_User$@\[$::WAN_IPv6\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$}
::CONSOLE::Wait {3}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls -a} {10} {test.txt} {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2761 Allow WAN side user with Default Port - used SCP >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2761," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]

#Get DUT WAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IPv6}
#Get DUT LAN IPv6
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Local}] {::LAN_IPv6}

#Enable to WAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=WAN}]

#WAN client connect success
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts}
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20} {rm test.cfg} {20} {rm rom-t} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} {touch test.cfg} {20} 
::CONSOLE::CI_Cmd {} "scp $SSH_User$@\[$::WAN_IPv6\]:/rom-t /root"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {yes}
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd {} "scp test.cfg $SSH_User$@\[$::WAN_IPv6\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd {} "scp test.txt $SSH_User$@\[$::WAN_IPv6\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {1} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$} 
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {rom-t} {} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.txt} {}
::CONSOLE::CI_Cmd_Scan {} {ls -a} {10} {test.cfg} {} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {10} {rm test.cfg} {10}      

#LAN client connect fail
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm /root/.ssh/known_hosts} 
::CONSOLE::CI_Cmd_More {} {rm test.txt} {20}
::CONSOLE::CI_Cmd_More {} {touch test.txt} {20} 
::CONSOLE::CI_Cmd {} "scp test.txt $SSH_User$@\[$::LAN_IPv6%eth1\]:/var/tmp/sftp_root/"
::CONSOLE::Wait {3} 
::CONSOLE::CI_Cmd {} {$SSH_Pwd$}
::CONSOLE::Wait {3}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd {} {cd /var/tmp/sftp_root/} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ls -a} {10} {test.txt} {} 

#Back to LAN SSH(SFTP)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_MGMT >" [list {$Service=SSH} {$Server_Access=LAN}]

#logout GUI & Close
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>

-CaseEnd-

<<*************************************** TR069 ****************************************>>
%ENV-BAT|L1|L2%                                              
+CaseStart+
<< ---------------- TR069 ---------------- >>

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {chmod 777 /var/www/html/file} {20} 
::CONSOLE::CI_Cmd_More {} {chmod 777 /var/www/html/file_auth} {20} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-2768 Device connect to ACS first time with default SSL encryption > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2768," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# # Case 1 # #
# Reset
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Connect ACS with domain URL
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$domain_URL=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {30} 

# Check IGD can work & DeviceInfo value is correct
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_IGD >" [list {}] {::IGD_Result}
::MISC::ACTS_Dummy_Response {PASS} "Final Result ---->\n$::IGD_Result"
# ManufacturerOUI
if {[string first "InternetGatewayDevice.DeviceInfo.ManufacturerOUI : $ManufacturerOUI$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ManufacturerOUI value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ManufacturerOUI value is wrong}
}
# ModelName
if {[string first "InternetGatewayDevice.DeviceInfo.ModelName : $ModelName$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ModelName value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ModelName value is wrong}
}
# ProductClass
if {[string first "InternetGatewayDevice.DeviceInfo.ProductClass : $ProductClass$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ProductClass value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ProductClass value is wrong}
}
# Serial_Number
if {[string first "InternetGatewayDevice.DeviceInfo.SerialNumber : $CPEID$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.SerialNumber value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.SerialNumber value is wrong}
}
# HardwareVersion
if {[string first "InternetGatewayDevice.DeviceInfo.HardwareVersion : $HardwareVersion$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.HardwareVersion value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.HardwareVersion value is wrong}
}
# SoftwareVersion
if {[string first "InternetGatewayDevice.DeviceInfo.SoftwareVersion : $Firmware_Version$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.SoftwareVersion value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.SoftwareVersion value is wrong}
}
# ProvisioningCode
if {[string first "InternetGatewayDevice.DeviceInfo.ProvisioningCode :," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ProvisioningCode value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ProvisioningCode value is wrong}
}
# # Case 2 # #
# Reset
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Connect ACS with IP URL
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {30} 

# Check IGD can work & DeviceInfo value is correct
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_IGD >" [list {}] {::IGD_Result}
::MISC::ACTS_Dummy_Response {PASS} "Final Result ---->\n$::IGD_Result"
# ManufacturerOUI
if {[string first "InternetGatewayDevice.DeviceInfo.ManufacturerOUI : $ManufacturerOUI$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ManufacturerOUI value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ManufacturerOUI value is wrong}
}
# ModelName
if {[string first "InternetGatewayDevice.DeviceInfo.ModelName : $ModelName$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ModelName value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ModelName value is wrong}
}
# ProductClass
if {[string first "InternetGatewayDevice.DeviceInfo.ProductClass : $ProductClass$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ProductClass value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ProductClass value is wrong}
}
# Serial_Number
if {[string first "InternetGatewayDevice.DeviceInfo.SerialNumber : $CPEID$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.SerialNumber value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.SerialNumber value is wrong}
}
# HardwareVersion
if {[string first "InternetGatewayDevice.DeviceInfo.HardwareVersion : $HardwareVersion$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.HardwareVersion value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.HardwareVersion value is wrong}
}
# SoftwareVersion
if {[string first "InternetGatewayDevice.DeviceInfo.SoftwareVersion : $Firmware_Version$," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.SoftwareVersion value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.SoftwareVersion value is wrong}
}
# ProvisioningCode
if {[string first "InternetGatewayDevice.DeviceInfo.ProvisioningCode :," "$::IGD_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.DeviceInfo.ProvisioningCode value is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ProvisioningCode value is wrong}
}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2773 Default acsURL should be https:// > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2773," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

if {"$TR069_GUI_Support$" == "no"} {
    # set wan
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}  
    # set tr69  
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
    ::CONSOLE::CI_Cmd_Scan {} {tefapp tr69 display} {10} {Server URL:} {https://}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_Console >" [list {$http_or_https=$TR069_Protocol$} {$Auth_User=admin} {$Auth_Pwd=1234} {$ConnReq_User=admin} {$ConnReq_Pwd=1234} {$Periodic_Enable=on} {$Periodic_Time=60}]
} else {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Get_Value {id} {CWMP_ACSURL} {::value} {10} 
    if {[string first "https://" "$::value"] != -1} {
        ::MISC::ACTS_Dummy_Response {PASS} {default acsURL is correct}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {Default acsURL should be https://}
    }
    ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}     
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2775 Check default TR-069 Certification Period of Validity > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2775," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Get default trust CA
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Capture_Response {} {cat /var/cert/ca/CA1.pem} {10} {::response} 
set x [file delete $LogPath$/CA_encode.txt]
set x [file delete $LogPath$/CA_decode.txt]
set fp [open $LogPath$/CA_encode.txt w]
puts $fp $::response
close $fp

::DOSAPP::Dos_Cmd "certutil -dump $LogPath$/CA_encode.txt > $LogPath$/CA_decode.txt"

set fp [open $LogPath$/CA_decode.txt r]
set file_data [read $fp]
close $fp

set start_year [string range $file_data [expr [string first "/20" $file_data [string first "NotBefore" $file_data]]+1] [expr [expr [string first "/20" $file_data [string first "NotBefore" $file_data]]+1]+4]]
set end_year [string range $file_data [expr [string first "/20" $file_data [string first "NotAfter" $file_data]]+1] [expr [expr [string first "/20" $file_data [string first "NotAfter" $file_data]]+1]+4]]
set systime [clock seconds]
set current_year [clock format $systime -format %Y]
if {$current_year > $start_year && $current_year < $end_year} {
    ::MISC::ACTS_Dummy_Response {PASS} "currnet year is in CA time period, current_year: $current_year, start_year: $start_year, end_year: $end_year"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "currnet year isn't in CA time period, current_year: $current_year, start_year: $start_year, end_year: $end_year"   
}

# recover env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3073 Configure non-writable parameter which is related to Voice Status > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3073," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
<TCL_Block_End>
#set TR069
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

#Check from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}

#Set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.CallWaitingStatus
::MISC::ACTS_Dummy_Response {PASS} {-> set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.CallWaitingStatus=SecondaryConnected} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.} {CallWaitingStatus} {SecondaryConnected}]
::CONSOLE::Wait {5}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value}
::CONSOLE::Wait {3} 
::MISC::ACTS_Dummy_Response {PASS} $::ret_value

#Set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.ConferenceCallingStatus
::MISC::ACTS_Dummy_Response {PASS} {-> set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.ConferenceCallingStatus=InConferenceCall} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.} {ConferenceCallingStatus} {50}]
::CONSOLE::Wait {5}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value}
::CONSOLE::Wait {3} 
::MISC::ACTS_Dummy_Response {PASS} $::ret_value

#Set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.ConferenceCallingSessionCount
::MISC::ACTS_Dummy_Response {PASS} {-> set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.ConferenceCallingSessionCount=5} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallingFeatures.} {ConferenceCallingSessionCount} {5}]
::CONSOLE::Wait {5}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value}
::CONSOLE::Wait {3} 
::MISC::ACTS_Dummy_Response {PASS} $::ret_value

#SetParameterValues InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Status
::MISC::ACTS_Dummy_Response {PASS} {-> set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Status=Registering} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Status} {Registering}]
::CONSOLE::Wait {5}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value}
::CONSOLE::Wait {3} 
::MISC::ACTS_Dummy_Response {PASS} $::ret_value

#InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallState
::MISC::ACTS_Dummy_Response {PASS} {-> set InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.CallState=Hold} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {CallState} {Hold}]
::CONSOLE::Wait {5}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value}
::CONSOLE::Wait {3} 
::MISC::ACTS_Dummy_Response {PASS} $::ret_value
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3075 Check VoIP Line Status > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3075," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#set TR069
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
if {"$PROJECT$" == "HB3"} {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

#Start SIP server
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

#Check from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}

#Disable & Get sip status
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.} {Enable} {disabled}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Enable} {disabled}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Status} {Disabled}
::CONSOLE::Wait {5}

#set sip Enable & Get sip status (Up)
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.} {Enable} {Enabled}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Enable} {Enabled}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Status} {Up}
::CONSOLE::Wait {5}

#set sip wrong setting & Get sip status (Registering)
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.} {RegistrarServer} {8.8.8.8} {OutboundProxy} {8.8.8.8}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.} {Status} {Registering}
::CONSOLE::Wait {5}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3082 Check CPE's Codec List Information > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3082," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#set TR069
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
if {"$sysName$" == "GPT-2841GX4X5"} {
   ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}] 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

#Start SIP server
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"
::CONSOLE::Wait {20} 

#Check from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
# HB3
if {"$sysName$" == "DSL-2492BX4X8UD-R3V v2"} {
    for {set ::i 1} {$::i < 8} {incr ::i} {   
        set SilenceSuppression 0
        set Enable 1
        set PacketizationPeriod 20
        set BitRate 64000
        if {"$::i" == 1} {
            set Codec G.722
        } 
        if {"$::i" == 2} {
            set Codec G.711ALaw
        }
        if {"$::i" == 3} {
            set Codec G.711MuLaw
        }
        if {"$::i" == 4} {
            set Codec G.726
        }
        if {"$::i" == 5} {
            set Codec G.729
        }
        if {"$::i" == 6} {
            set Codec G.729a
        }
        if {"$::i" == 7} {
            set Codec G.729b
        }    
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} "InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Codec.List.$::i." {EntryID} "$::i" {BitRate} "$BitRate" {Priority} "$::i" {SilenceSuppression} "$SilenceSuppression" {Enable} "$Enable" {Codec} "$Codec" {PacketizationPeriod} "$PacketizationPeriod"
        ::CONSOLE::Wait {2}
    }
    ::USER_DEFINE::CloseTR069ACS {}
    ::CONSOLE::Wait {5}
}
# 2841-Spain
if {"$sysName$" == "GPT-2841GX4X5" && "$Key_Account$" == "Spain"} {
    for {set ::i 1} {$::i < 9} {incr ::i} {
        set SilenceSuppression 0
        set Enable 1
        set PacketizationPeriod 20
        set BitRate 64000
        if {"$::i" == 1} {
            set Codec G.729
            set BitRate 8000
            set Priority 3
            set EntryID 1
        } 
        if {"$::i" == 2} {
            set Codec G.711ALaw
            set Priority 1
            set EntryID 8
        }
        if {"$::i" == 3} {
            set Codec G.711MuLaw
            set Priority 2
            set EntryID 9
        }
        if {"$::i" == 4} {
            set Codec G.726-32
            set Priority 101
            set EntryID 6
        }
        if {"$::i" == 5} {
            set Codec G.722
            set Priority 101
            set EntryID 10
        }
        if {"$::i" == 6} {
            set Codec G.723
            set Priority 101
            set EntryID 2
        }
        if {"$::i" == 7} {
            set Codec T.38
            set Priority 101
            set EntryID 32
        }
        if {"$::i" == 8} {
            set Codec RFC2833
            set Priority 101
            set EntryID 101
        }
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} "InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Codec.List.$::i." {EntryID} "$EntryID" {BitRate} "$BitRate" {Priority} "$Priority" {SilenceSuppression} "$SilenceSuppression" {Enable} "$Enable" {Codec} "$Codec" {PacketizationPeriod} "$PacketizationPeriod"
        ::CONSOLE::Wait {2}
    }
    ::USER_DEFINE::CloseTR069ACS {}
    ::CONSOLE::Wait {5}

    # Check on Adv GUI
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {voip} {20}
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Click {id} {voip-sip} {20} {PASS}
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Click {id} {editBtn} {20} {PASS}
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Switch_To_Window {} 
    # G.711ALaw -> 1, G.711MuLaw -> 2, G.729 -> 0
    ::WEB::WebDrv_Get_Value {name} {Primary_Compression_Type_Name} {::Primary_Codec} {10} 
    ::MISC::ACTS_Dummy_Response {PASS} "$::Primary_Codec"
    ::WEB::WebDrv_Get_Value {name} {Second_Compression_Type_Name} {::Second_Codec} {10} 
    ::WEB::WebDrv_Get_Value {name} {Third_Compression_Type_Name} {::Third_Codec} {10} 
    if {"$::Primary_Codec" == "1" && "$::Second_Codec" == "2" && "$::Third_Codec" == "0"} {
        ::MISC::ACTS_Dummy_Response {PASS} {priority is correct}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {priority isn't correct}        
    }
    ::WEB::WebDrv_Click {id} {LTECancleBtn} {20} {PASS}
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3021 SetParameterValues LAN DHCP setting parameters consecutively > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3021," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Check from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}

# setting parameters consecutively
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {5} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPInterface.1.IPInterfaceIPAddress} {$LAN_IP$}]
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPInterface.1.IPInterfaceIPAddress} {$LAN_Subnet$.1} {MinAddress} {$LAN_Subnet$.40} {MaxAddress} {$LAN_Subnet$.105} {IPRouters} {$LAN_Subnet$.1} {DHCPConditionalServingPool.1.VendorClassIDMode} {Substring} {DHCPConditionalServingPool.1.MinAddress} {192.168.3.200} {DHCPConditionalServingPool.1.MaxAddress} {192.168.3.223} {DHCPConditionalServingPool.1.DNSServers} {172.26.23.3} {DHCPConditionalServingPool.1.IPRouters} {192.168.3.1} 

::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.2.} "" 
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.} {DeviceInfo.SoftwareVersion} {$Firmware_Version$} {LANConfigSecurity.} {} {WANDevice.1.WANConnectionDevice.} {} {Layer3Forwarding.} {} {LANDevice.1.X_TELEFONICA-ES_IGMPSnoop.} {} {LANDevice.1.LANEthernetInterfaceConfig.1.MACAddress} {} {X_TELEFONICA-ES_IGMPProxy.Enabled} {} {X_TELEFONICA-ES_Firewall.} {} {LANDevice.1.WLANConfiguration.} {} {LANDevice.1.LANHostConfigManagement.} {} {.WANDevice.1.WANCommonInterfaceConfig.WANAccessType;InternetGatewayDevice.Layer2Bridging.} {} {Services.VoiceService.1.VoiceProfile.1.Line.1.SIP.AuthUserName} {}]
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.} {LANHostConfigManagement.} {}]
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPInterface.1.IPInterfaceIPAddress} {$LAN_Subnet$.1} {MinAddress} {$LAN_Subnet$.40} {MaxAddress} {$LAN_Subnet$.105} {IPRouters} {$LAN_Subnet$.1} {DHCPConditionalServingPool.1.VendorClassIDMode} {Substring} {DHCPConditionalServingPool.1.MinAddress} {192.168.4.200} {DHCPConditionalServingPool.1.MaxAddress} {192.168.4.223} {DHCPConditionalServingPool.1.DNSServers} {172.26.23.3} {DHCPConditionalServingPool.1.IPRouters} {192.168.4.1} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# Check CPE doesn't hang up
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {$Firmware_Version$} {} 

# Back to test env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3084 Check RingMuteStatus > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3084," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get RingMuteStatus
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.RingMuteStatus}] {::value}
if {"$::value" == "0" || "$::value" == "1"} {
    ::MISC::ACTS_Dummy_Response {PASS} {RingMuteStatus value is boolean type} 
} else {
    ::MISC::ACTS_Dummy_Response {PASS} "RingMuteStatus value isn't boolean type, Value = $::value" 
}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3085 Check ServiceProviderInfo Information > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3085," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get ConfigFile from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
if {"$PROJECT$" == "HB3"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.ServiceProviderInfo.} {EmailAddress} {} {Name} {} {URL} {} {ContactPhoneNumber} {}
} elseif {"$PROJECT$" == "2841_Spain"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.ServiceProviderInfo.} {EmailAddress} {} {Name} {Telefonica} {URL} {www.movistar.es} {ContactPhoneNumber} {}
}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3088 IPPing Diagnostics with Invalid Hostname > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3088," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# case 1
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {1000} {DataBlockSize} {128} {DSCP} {0} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {2.3.4.5} {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {DiagnosticsState} {Error_Other} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# case 2
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {1000} {DataBlockSize} {128} {DSCP} {0} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {aaa.bbb.ccc.ddd} {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {DiagnosticsState} {Error_CannotResolveHostName} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3060 Check WLAN 2.4G WiFi WMM status > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3060," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=Auto} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# set WMMEnable , UAPSDEnable off
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {WMMEnable} {0} {UAPSDEnable} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {WMMSupported} {1} {UAPSDSupported} {1} {WMMEnable} {0} {UAPSDEnable} {0} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {5} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {5} {PASS}
::WEB::WebDrv_Check_Value {id} {WMM} {0} {5} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show wmm 1} {5} {WMM = } {Disabled}

# set WMMEnable , UAPSDEnable on
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {WMMEnable} {1} {UAPSDEnable} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {WMMSupported} {1} {UAPSDSupported} {1} {WMMEnable} {1} {UAPSDEnable} {1} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {5} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {5} {PASS}
::WEB::WebDrv_Check_Value {id} {WMM} {1} {5} {PASS} {full} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show wmm 1} {5} {WMM = } {Enabled}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3061 Check WLAN 2.4G WiFi AP WMM information > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3061," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set & check parameter value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.APWMMParameter.1.} {AIFSN} {3} {ECWMax} {7} {ECWMin} {5} {TXOP} {1} {AckPolicy} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.APWMMParameter.1.} {AIFSN} {3} {ECWMax} {7} {ECWMin} {5} {TXOP} {1} {AckPolicy} {0}
# Back to default
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.APWMMParameter.1.} {AIFSN} {2} {ECWMax} {6} {ECWMin} {4} {TXOP} {0} {AckPolicy} {1}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3062 Check WLAN 2.4G WiFi STA WMM information > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3062," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Check WLAN 2.4G WiFi STA WMM information from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.STAWMMParameter.1.} {ECWMax} {11} {ECWMin} {4} {TXOP} {1} {AIFSN} {4} {AckPolicy} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.STAWMMParameter.1.} {ECWMax} {11} {ECWMin} {4} {TXOP} {1} {AIFSN} {4} {AckPolicy} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.STAWMMParameter.1.} {ECWMax} {10} {ECWMin} {3} {TXOP} {0} {AIFSN} {3} {AckPolicy} {1} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3064 Configure incorrect WLAN 2.4G SSID > 
# (BUG: 2841-Spain only return 9007, it should return 9003 + 9007)
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3064," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
::CONSOLE::Wait {5}
# set WLAN 2.4G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# set incorrect 2.4G SSID
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {ABCDEFGHIJKLMNOPQRSTUVWXYZ_33Char}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} "$SSID_24G$" 
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G SSID is original value form Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {SSID} {::value} {10} 
if {"$::value" != "$SSID_24G$"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {value shouldn't changed}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 2.4G SSID is original value form CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {SSID =} {$SSID_24G$} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3065 Configure incorrect WLAN 5G SSID > 
# (BUG: 2841-Spain only return 9007, it should return 9003 + 9007)
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3065," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
::CONSOLE::Wait {5}
# set WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# set incorrect 5G SSID
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {ABCDEFGHIJKLMNOPQRSTUVWXYZ_33Char}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} "$SSID_5G$" 
::USER_DEFINE::CloseTR069ACS {} 

# Check 5G SSID is original value form Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {SSID} {::value} {10} 
if {"$::value" != "$SSID_5G$"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {value shouldn't changed}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 5G SSID is original value form CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {SSID =} {$SSID_5G$} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3099 Check capabilities of the Performance Diagnostics > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3099," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set & check parameter value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Capabilities.PerformanceDiagnostic.DownloadTransports}] {::DownloadTransports}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Capabilities.PerformanceDiagnostic.UploadTransports}] {::UploadTransports}
if {"$::DownloadTransports" != "0" && "$::DownloadTransports" != "" && "$::UploadTransports" != "0" && "$::UploadTransports" != "" } {
    ::MISC::ACTS_Dummy_Response {PASS} {DownloadTransports and UploadTransports aren't none-zero value} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "DownloadTransports or UploadTransports is none-zero value, DownloadTransports = $::DownloadTransports , UploadTransports = $::UploadTransports ."
}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3121 Configure NTP Time > 

<TCL_Block_Begin> 
# Check if project has this AA case
if {[string first "UTP-3121," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# must change to IPv4 only, because auto env can't resolv IPv6 DNS  
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$ipv4_ipv6_mode=IPv4} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# capture dns & ntp packet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=time.pcap} {$duration=360}]

# Set Time setting from TR069
::CONSOLE::Wait {10} 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {Enable} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {NTPServer1} {time1.google.com} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {NTPServer2} {time2.google.com} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZone} {+08:00} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {DaylightSavingsUsed} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Time.} {LocalTimeZoneName} {}
::USER_DEFINE::CloseTR069ACS {} 

::CONSOLE::Wait {250}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=time.pcap} {$filter=dns.resp.name == \"time1.google.com\"} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=time.pcap} {$filter=ntp} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} {cat time.txt | grep 'Internet Protocol Version 4'} {10} {Src: 216.239.35.0} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

# Get current date
set ::systime [clock seconds]
set ::year [clock format $::systime -format %Y]
set ::month [clock format $::systime -format %m]
set ::day [clock format $::systime -format %d]
for {set ::index 1} {$::index < 10} {incr ::index} {
    if {"$::month" == "0$::index"} {
        set ::month $::index
    }
    if {"$::day" == "0$::index"} {
        set ::day $::index
    }
}
# Check Time setting value from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Time.} {Enable} {1} {NTPServer1} {time1.google.com} {NTPServer2} {time2.google.com} {LocalTimeZone} {+08:00} {DaylightSavingsUsed} {1} {Status} {Synchronized}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Time.LocalTimeZoneName}] {::value}
if {"$::value" == "" || "$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} "LocalTimeZoneName should be correct value, not zero or empty"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Time.DaylightSavingsStart}] {::value}
if {"$::value" == "" || "$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} "LocalTimeZoneName should be correct value, not zero or empty"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Time.DaylightSavingsEnd}] {::value}
if {"$::value" == "" || "$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} "LocalTimeZoneName should be correct value, not zero or empty"
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Time.} {CurrentLocalTime} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "$::year, $::month, $::day" {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Check from Adv GUI
if {"$ModelName$" == "GPT-2841GX4X5" || "$ModelName$" == "GPT-2742GX4X5v6"} {
} else {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {maintenance} {20}
    ::WEB::WebDrv_Click {linkText} {Time Setting} {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Check_Value {id} {TimeServerAddr} {time1.google.com} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {TimeServerAddr2} {time2.google.com} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {uiViewdateToolsTZ_Text} {+08:00} {10} {PASS} {full} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}     
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2902 Modify Default LAN IPInterface > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2902," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set LAN config
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} {1} {IPInterfaceIPAddress} {192.168.3.1} {IPInterfaceSubnetMask} {255.255.255.0} {IPInterfaceAddressingType} {Static} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} {1} {IPInterfaceIPAddress} {192.168.3.1} {IPInterfaceSubnetMask} {255.255.255.0} {IPInterfaceAddressingType} {Static} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Capture_Response {} {lan detail} {10} {::response} 
if {[string first "192.168.3.1" "$::response" ] >= 0 && [string first "255.255.255.0" "$::response" ] >= 0 && [string first "Static" "$::response" ] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {br0 info is correct} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} br0 is wrong, current br0 info : "$::response" 
}

# Check LAN PC login GUI successfully
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {192.168.3.50} {255.255.255.0} {192.168.3.1} {1} 
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.3.1$Adv_GUI_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# set LAN to default
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} {1} {IPInterfaceIPAddress} {$LAN_Subnet$.1} {IPInterfaceSubnetMask} {255.255.255.0} {IPInterfaceAddressingType} {Static} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2903 Configure LAN DHCP Option Value(DHCP Server) without configure Enable and Tag > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2903," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set & check parameter value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {12345678}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {MjQw} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {MjQw} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2904 Configure LAN Conditional Serving Pool without configure Enable and Tag > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2904," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set & check parameter value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {12345678}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {12345678}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {MjQw} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {MjQw} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2909 Reprovision DHCP conditional serving pool association with DHCP client MAC Address > 
# Redmine ID: 157632
# Bug: Need to support Parameter ClientID, ChaddrExclude, ClientIDExclude
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2909," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "MSFT 5.0";/send vendor-class-identifier "PQA_Test";/g' /etc/dhcp/dhclient.conf} {10} 

# Get LAN1_WKS eth1 Mac
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::LAN1_MAC} 

# Modify VendorClassID to PQA_Test
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# Get DHCP Pool MinAddress
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.MinAddress}] {::MinAddress}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {Enable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {PQA_Test}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassIDExclude} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassIDMode} {Substring}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {ClientID} "$::LAN1_MAC"
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {ChaddrExclude} {0}
::USER_DEFINE::CloseTR069ACS {} 

# renew LAN1 eth1 IP
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} "$LAN_IP$" {::LAN1_IP} {PASS}

::MISC::ACTS_Dummy_Response {PASS} "Min = $::MinAddress , LAN1_NOW = $::LAN1_IP"
# Check LAN1_IP in DHCP Pool
if {"$::MinAddress" == "$::LAN1_IP"} {
    ::MISC::ACTS_Dummy_Response {PASS} "LAN1_IP in DHCP Pool, LAN1_IP = \"$::LAN1_IP\""
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN1_IP not in DHCP Pool, LAN1_IP = \"$::LAN1_IP\""
}

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Enable: } {Yes} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID Exclude: } {0}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID mode: } {Substring}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID: } {PQA_Test}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} {LAN} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Value {id} {ConSerOpt60} {PQA_Test} {10} {PASS} {full} 
::WEB::WebDrv_Is_Selected {id} {ConSerOpt60Type_Substring} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Mode should be Substring}
} 
::WEB::WebDrv_Is_Selected {id} {ConSerVendorIdExRadio_Disable} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID exclude should be disable}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Modify ClientIDExclude is 1
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {ClientIDExclude} {1}
::USER_DEFINE::CloseTR069ACS {} 

# renew LAN1 eth1 IP
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} "$LAN_IP$" {::LAN1_IP} {PASS}

# Check LAN1_IP can't get from DHCP Pool
if {"$::MinAddress" == "$::LAN1_IP"} {
    ::MISC::ACTS_Dummy_Response {FAIL} "LAN1_IP should not in DHCP Pool, MinAddress = \"$::MinAddress\", LAN1_IP = \"$::LAN1_IP\""
} else {
    ::MISC::ACTS_Dummy_Response {PASS} "Expectation: LAN1_IP should not in DHCP Pool, MinAddress = \"$::MinAddress\", LAN1_IP = \"$::LAN1_IP\""
}

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Enable: } {Yes} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID Exclude: } {1}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID mode: } {Substring}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID: } {PQA_Test}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} {LAN} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Value {id} {ConSerOpt60} {PQA_Test} {10} {PASS} {full} 
::WEB::WebDrv_Is_Selected {id} {ConSerOpt60Type_Substring} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Mode should be Substring}
} 
::WEB::WebDrv_Is_Selected {id} {ConSerVendorIdExRadio_Disable} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Exclude should be disable}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# disable dhcp pool
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {Default_String}
::USER_DEFINE::CloseTR069ACS {} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {} {$LAN_IP$} {::wks_ip} {PASS} 

# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "PQA_Test";/send vendor-class-identifier "MSFT 5.0";/g' /etc/dhcp/dhclient.conf} {10} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2910 Reprovision DHCP conditional serving pool with UseAllocatedWAN and AssociatedConnection > 
# Bug: need to support parameter UseAllocatedWAN, AssociatedConnection

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2910," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "MSFT 5.0";/send vendor-class-identifier "PQA_Test";/g' /etc/dhcp/dhclient.conf} {10}

# Set DHCP pool setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {Enable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {UseAllocatedWAN} {Passthrough} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {AssociatedConnection} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {PQA_Test}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassIDExclude} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassIDMode} {Substring}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {MinAddress} {$LAN_Subnet$.216}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {MaxAddress} {$LAN_Subnet$.223}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {SubnetMask} {255.255.255.0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {DNSServers} {168.95.1.1,8.8.8.8}
::USER_DEFINE::CloseTR069ACS {} 

# renew & Get LAN1_IP, Check IP & DNS
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {} {$LAN_IP$} {::LAN1_IP} {PASS} 
if {$::LAN1_IP == "$LAN_Subnet$.216"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {can't get ip from dhcpconditionalservingpool range}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {get ip from default dhcp pool range}
}
::CONSOLE::Check_WKS_DHCP_DNS {LAN1_WKS} {} {168.95.1.1,8.8.8.8} {PASS} {IPv4} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Enable: } {Yes} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID Exclude: } {0}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID mode: } {Substring}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID: } {PQA_Test}
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Start IP Address: } {$LAN_Subnet$.216} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {End IP Address: } {$LAN_Subnet$.223} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {DNS Server1: } {168.95.1.1} 
::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {DNS Server2: } {8.8.8.8} 

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} {LAN} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Value {id} {ConSerOpt60} {PQA_Test} {10} {PASS} {full} 
::WEB::WebDrv_Is_Selected {id} {ConSerOpt60Type_Substring} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Mode is Substring}
} 
::WEB::WebDrv_Is_Selected {id} {ConSerVendorIdExRadio_Disable} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Exclude should be Disable}
} 
::WEB::WebDrv_Check_Value {id} {ConSerStart} {$LAN_Subnet$.216} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSerEnd} {$LAN_Subnet$.223} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSerDNS1} {168.95.1.1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSerDNS2} {8.8.8.8} {10} {PASS} {full} 

::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# disable dhcp pool
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {Default_String}
::USER_DEFINE::CloseTR069ACS {} 

# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "PQA_Test";/send vendor-class-identifier "MSFT 5.0";/g' /etc/dhcp/dhclient.conf} {10} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2911 Create a new Conditional Serving Pool, and Modify All Conditional Serving Pool setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2911," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set DHCP pool setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {12345678} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {Enable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {PoolOrder} {2} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassID} {PQA_Test}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassIDExclude} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassIDMode} {Exact}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {LocallyServed} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {MinAddress} {192.168.6.6}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {MaxAddress} {192.168.6.66}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {SubnetMask} {255.255.255.0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {DNSServers} {4.4.4.4}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {IPRouters} {192.168.6.1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {DHCPLeaseTime} {22222}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {UseAllocatedWAN} {Normal}
# Check from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {Enable} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {PoolOrder} {2} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassID} {PQA_Test}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassIDExclude} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {VendorClassIDMode} {Exact}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {LocallyServed} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {MinAddress} {192.168.6.6}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {MaxAddress} {192.168.6.66}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {SubnetMask} {255.255.255.0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {DNSServers} {4.4.4.4}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {IPRouters} {192.168.6.1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {DHCPLeaseTime} {22222}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {UseAllocatedWAN} {Normal} 
::USER_DEFINE::CloseTR069ACS {} 

# # Check from CLI command (Can't check from CLI command,  no command can show all dhcp pool info)
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Enable: } {Yes} 
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID Exclude: } {0}
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID mode: } {Substring}
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Vendor Class ID: } {PQA_Test}
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {Start IP Address: } {192.168.1.216} 
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {End IP Address: } {192.168.1.223} 
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {DNS Server1: } {168.95.1.1} 
# ::CONSOLE::CI_Cmd_Scan {} {dhcpcondserv show} {10} {DNS Server2: } {8.8.8.8} 

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} {LAN} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Is_Selected {id} {dhcpConSer2TypeRadio_Enable} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {State should be Enable}
}
::WEB::WebDrv_Check_Value {id} {ConSer2Gateway} {192.168.6.1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2SubnetMask} {255.255.255.0} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2Start} {192.168.6.6} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2End} {192.168.6.66} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2DNS1} {4.4.4.4} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2Opt60} {PQA_Test} {10} {PASS} {full} 
::WEB::WebDrv_Is_Selected {id} {ConSer2Opt60Type_Exact} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Mode is Exact}
} 
::WEB::WebDrv_Is_Selected {id} {ConSer2VendorIdExRadio_Disable} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Exclude should be disable}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# disable dhcp pool
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {12345678} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2605 Verify DUT Restore to default during provision process > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2605," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Reset default & connect ACS , VoIP need to provision successfully
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {40} 

# Check SIP status
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >" 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2931 Add Port Forwarding Rule on GUI, Modify and Delete Port Forwarding Rule from ACS Server > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2931," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Add Port Forwarding Rule
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=User Define} {$srv_ip=$LAN_Subnet$.33} {$start_port=1000} {$end_port=1000} {$open_start=1500} {$protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule value from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPort} {1000} {ExternalPortEndRange} {1000} {InternalPort} {1500} {PortMappingEnabled} {1} {PortMappingProtocol} {TCP} {PortMappingDescription} {User Define} {InternalClient} {$LAN_Subnet$.33}

# Modify rule value from TR069
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {1000} {ExternalPortEndRange} {1250} {InternalPort} {1500} {PortMappingProtocol} {UDP} {InternalClient} {$LAN_Subnet$.33} {RemoteHost} "$::WAN_IP" {PortMappingDescription} {test1}
::USER_DEFINE::CloseTR069ACS {} 

# Check modified rule value from adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {id} {network-nat} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {10} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Get_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} {::value} {10}
# if {"$External_IP_Field_Support$" == "no"} {
    if {"$::value" == "1 test1 1000 1250 1500 1750 $LAN_Subnet$.33"} {
        ::MISC::ACTS_Dummy_Response {PASS} {rule info is correct}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} "rule info is wrong, rule_info = $::value"
    } 
# }
# if {"$External_IP_Field_Support$" == "yes"} {
#     if {"$::value" == "1 test1 N/A 1000 1250 1500 1750 192.168.1.33"} {
#         ::MISC::ACTS_Dummy_Response {PASS} {rule info is correct}
#     } else {
#         ::MISC::ACTS_Dummy_Response {FAIL} "rule info is wrong, rule_info = $::value"
#     } 
# }  
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule value from TR069 again
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPort} {1000} {ExternalPortEndRange} {1250} {InternalPort} {1500} {PortMappingEnabled} {1} {PortMappingProtocol} {UDP} {PortMappingDescription} {test1} {InternalClient} {$LAN_Subnet$.33} {RemoteHost} "$::WAN_IP"

# Disable rule from TR069
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {0} 

# Check rule disable
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {No} {} 

# DeleteObject
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {} 
::USER_DEFINE::CloseTR069ACS {} 

# Check rule table is empty
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {id} {network-nat} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {10} {PASS}
::CONSOLE::Wait {2}
set x [::WEB::WebDrv_Get_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} {::value} {10}]
if {[string first "Get_Text error" "$x"] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {rule is empty}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {rule should be empty}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2932 Add Port Forwarding Rule from ACS Server, Modify and Delete Port Forwarding Rule on GUI > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2932," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Add Port Forwarding Rule
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {} 

# Modify rule value
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {1000} {ExternalPortEndRange} {1250} {InternalPort} {1500} {PortMappingProtocol} {UDP} {InternalClient} {$LAN_Subnet$.33} {RemoteHost} "$::WAN_IP" {PortMappingDescription} {test1}

# Check rule value from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {1000} {ExternalPortEndRange} {1250} {InternalPort} {1500} {PortMappingProtocol} {UDP} {InternalClient} {$LAN_Subnet$.33} {RemoteHost} "$::WAN_IP" {PortMappingDescription} {test1}
::USER_DEFINE::CloseTR069ACS {} 

# Check modified rule value from adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {id} {network-nat} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {10} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Get_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} {::value} {10}
# if {"$External_IP_Field_Support$" == "no"} {
    if {"$::value" == "1 test1 1000 1250 1500 1750 $LAN_Subnet$.33"} {
        ::MISC::ACTS_Dummy_Response {PASS} {rule info is correct}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} "rule info is wrong, rule_info = $::value"
    } 
# }
# if {"$External_IP_Field_Support$" == "yes"} {
#     if {"$::value" == "1 test1 N/A 1000 1250 1500 1750 192.168.1.33"} {
#         ::MISC::ACTS_Dummy_Response {PASS} {rule info is correct}
#     } else {
#         ::MISC::ACTS_Dummy_Response {FAIL} "rule info is wrong, rule_info = $::value"
#     } 
# }  
::WEB::WebDrv_Click {id} {editBtn_0} {10} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Set_Value {id} {oStart} {2500} {10} 
::WEB::WebDrv_List_Select {id} {PortRuleEdit_Protocol} {option_value} {TCP} {10} 
::WEB::WebDrv_Set_Value {id} {uiViewIpAddressMark} {$LAN_Subnet$.34} {10} 
::WEB::WebDrv_Set_Value {id} {uiViewPvcVpi2} {2000} {10} 
::WEB::WebDrv_Set_Value {id} {uiViewPvcVpi1} {2000} {10} 
::WEB::WebDrv_Set_Value {id} {appName} {test} {10} 
::WEB::WebDrv_Click {id} {PortRuleEdit_Apply} {10} {PASS} 
::CONSOLE::Wait {8} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule value from TR069 again
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPort} {2000} {ExternalPortEndRange} {2000} {InternalPort} {2500} {PortMappingEnabled} {1} {PortMappingProtocol} {TCP} {PortMappingDescription} {test} {InternalClient} {$LAN_Subnet$.34} {RemoteHost} "$::WAN_IP"

# Data WAN(PPPoE) can't down
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {ifconfig $ifconfig_PPPoE$} {10} {172.205.77} {}

# DeleteObject
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-2935 Add Port Forwarding Rule - Set Incorrect parameter values > 
# # Axiros ACS server block error type, invalid literal for int() with base 10: 'abcd', because PortMappingLeaseDuration(int) can't input abcd(str type)
# # (Bug: PortMappingLeaseDuration doesn't return fault code, it return status: 0)
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2935," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# # Get LAN1 IP
# ::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::LAN1_IP} 

# # Add object from TR069
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {12345678} 

# # case 1
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {2000} {ExternalPortEndRange} {3000} {InternalPort} {4000} {PortMappingProtocol} {TCP} {InternalClient} {pepito} {PortMappingDescription} {test}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.InternalClient} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value}

# # case 2
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {2000} {ExternalPortEndRange} {3000} {InternalPort} {4000} {PortMappingProtocol} {TCP} {InternalClient} "$::LAN1_IP" {RemoteHost} {wft45tw4egt54twf} {PortMappingDescription} {test}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.RemoteHost} {::ret_value}
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value}

# # case 3
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {2000} {ExternalPortEndRange} {3000} {InternalPort} {4000} {PortMappingProtocol} {TCP} {InternalClient} "$::LAN1_IP" {PortMappingDescription} {test} {PortMappingLeaseDuration} {abcd}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.PortMappingLeaseDuration} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value}

# # Delete object from TR069
# ::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {12345678}
# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2936 Add Port Forwarding Rule - External End Port less than External Start Port value > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2936," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get LAN1 IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::LAN1_IP} 

# Add object from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {12345678} 

# Set value 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {2222} {ExternalPortEndRange} {1000} {InternalPort} {1111} {PortMappingProtocol} {TCP} {InternalClient} "$::LAN1_IP" {PortMappingDescription} {test}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 

# Delete object from TR069
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {12345678}

::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L2%
# +CaseStart+
# < UTP-2939 Check LAN Device that supports Device-Gateway Association > 
# # Redmine ID: 167128
# # Bug: need support InternetGatewayDevice.ManagementServer.ManageableDevice.{i}.Host
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2939," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# # Check LAN device para is all correct
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ManageableDeviceNumberOfEntries} {1}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {ManufacturerOUI} {$LAN_Device_ManufacturerOUI$}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {SerialNumber} {$LAN_Device_SerialNumber$}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {ProductClass} {$LAN_Device_ProductClass$}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {Host} {1}
# ::USER_DEFINE::CloseTR069ACS {} 

# <TCL_Block_End>

# -CaseEnd-

# %ENV-L1%
# +CaseStart+
# < UTP-2940 Check all information on LAN Device and IGD Device > 

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2940," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# # Check ManageableDeviceNumberOfEntries
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ManageableDeviceNumberOfEntries} {1} 
# ::USER_DEFINE::CloseTR069ACS {} 

# <TCL_Block_End>

# -CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-2942 Gateway / Device Association > 

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2942," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# # Get LAN device info
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {ManufacturerOUI} {$LAN_Device_ManufacturerOUI$} {SerialNumber} {$LAN_Device_SerialNumber$} {ProductClass} {$LAN_Device_ProductClass$}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# <TCL_Block_End>

# -CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-2943 Check Device Association Profile > 

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2943," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# # Check LAN device para is all correct
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.ManagementServer.} {NextLevel} {True} {'InternetGatewayDevice.ManagementServer.ManageableDeviceNumberOfEntries': False} 
# ::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {NextLevel} {True} {'InternetGatewayDevice.ManagementServer.ManageableDevice.1.ManufacturerOUI': False} 
# ::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.ManagementServer.ManageableDevice.1.} {NextLevel} {True} {'InternetGatewayDevice.ManagementServer.ManageableDevice.1.SerialNumber': False} 
# ::USER_DEFINE::CloseTR069ACS {} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-22745 Change LAN Interface IP and all DHCP conditional pool need auto updated > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-22745," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Config Env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::USER_DEFINE::CheckTR069DeviceExistsInACS {$CPEID$} {PASS} 
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {20} 

# Change LAN IP to 192.168.3.X
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPRouters} "$LAN_Change_IP$"
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPRouters} {$LAN_Change_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MinAddress} {$LAN_Change_Min_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MaxAddress} {$LAN_Change_Max_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPInterface.1.IPInterfaceIPAddress} {$LAN_Change_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPConditionalServingPool.1.IPRouters} {$LAN_Change_IP$} 
::USER_DEFINE::CloseTR069ACS {} 

# Change PC LAN IP to 192.168.3.X
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Change_Subnet$.80} {255.255.255.0} {$LAN_Change_IP$} {1} 

# Check LAN setting from Adv GUI
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$$LAN_Change_IP$$Adv_GUI_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} {LAN} {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Min_IP$} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Modify LAN IP to default
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPRouters} {$LAN_IP$}
::USER_DEFINE::CloseTR069ACS {} 
::CONSOLE::Wait {15} 

# Change PC LAN IP back to DHCP
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2970 Upgrade Firmware from HTTPS Server > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2970," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Reset ENV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Put FW to Apache server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {root} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.205.77.11:9090/file_auth/$Firmware$} {acts} {1234} {0} 
::USER_DEFINE::CloseTR069ACS {} 
::CONSOLE::Local
::CONSOLE::Wait_String {360} {$Reboot_String$} {PASS} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2963 Upgrade Firmware from server with non-existent file > 
# Bug: 2841-Spain return transfer complete, it should return 9010
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2963," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set Env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Put FW to HFS server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://domain.pqatest.com:9090/file/NotExists_$Firmware$} {acts} {1234} {0}
::CONSOLE::Wait {25} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9010', 'FaultString': 'Download failure'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Local
::CONSOLE::Wait_String {300} {$Reboot_String$} {FAIL} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2964 Upgrade Firmware from non-existent domain HTTP Server > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2964," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Put FW to apache server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://mt031766.bsqa.com.tw:8080/file_auth/$Firmware$} {acts} {1234} {0}
::CONSOLE::Wait {25} 
# Because file doesn't be transfered yet, so check in TR069Get_and_Check_Last_Result, instead of TR069Get_and_Check_TransferComplete function
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'faultcode': 'Server', 'code': '9010', 'detail': 'Download failure'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Local
::CONSOLE::Wait_String {300} {$Reboot_String$} {FAIL} 

<TCL_Block_End>

-CaseEnd-

# %ENV-BAT%
# +CaseStart+
# < UTP-2959 Check device identification after firmware upgrade > 
# redmine bug #162920 cause ACTS can't check

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2959," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# # Clear CPE ID
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::TR069ClearCPEsInACS 
# ::USER_DEFINE::CloseTR069ACS {} 

# # Set Env
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$PeriodInterval=86400}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Wait CPE connect to ACS server
# ::CONSOLE::Wait {60} 

# # Check CPE first connect to ACS server, ACS server need to send 0 BOOTSTRAP
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {0 BOOTSTRAP}

# # Check DeviceInfo
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {Manufacturer} {$Manufacturer$} {ManufacturerOUI} {$ManufacturerOUI$} {ModelName} {$ModelName$} {Description} {$Description$} {ProductClass} {$ProductClass$} {SerialNumber} {$Serial_Number$} 
# ::USER_DEFINE::CloseTR069ACS {} 

# # Put FW to HFS server
# ::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
# ::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
# ::CONSOLE::Close_Shell {Shell_FTP}

# # Download FW
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/$Firmware$} {acts} {1234} {0}
# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Local
# ::CONSOLE::Wait_String {300} {$Reboot_String$} {PASS} 

# # Check Event Code
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT} 
# ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 
# ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Download} 
# ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {7 TRANSFER COMPLETE} 

# # Check DeviceInfo
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {Manufacturer} {$Manufacturer$} {ManufacturerOUI} {$ManufacturerOUI$} {ModelName} {$ModelName$} {Description} {$Description$} {ProductClass} {$ProductClass$} {SerialNumber} {$Serial_Number$} 
# ::USER_DEFINE::CloseTR069ACS {} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2971 Upgrade Firmware from HTTP Server with Incorrect credentials > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2971," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

# Download FW
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
# Set incorrect pwd
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'pqatest', 'DelaySeconds': 1, 'TargetFileName': '', 'FailureURL': '', 'FileSize': 18715000, 'SuccessURL': '', 'URL': 'http://domain.pqatest.com:9090/file_auth/$Firmware$', 'CommandKey': '1888555444333', 'Password': '11111111111', 'FileType': '1 Firmware Upgrade Image'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

# Check falut code & CommandKey
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '1888555444333'} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Check CPE not reboot
::CONSOLE::Local
::CONSOLE::Wait_String {300} {$Reboot_String$} {FAIL} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2973 Upgrade Firmware from FTP Server with Incorrect credentials > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2973," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Put FW to HFS server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10} 
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

# Download FW
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
# Set incorrect pwd
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'DelaySeconds': 1, 'TargetFileName': '', 'FailureURL': '', 'FileSize': 18715000, 'SuccessURL': '', 'URL': 'ftp://172.205.77.11/$Firmware$', 'CommandKey': '2587753872487', 'Password': '111111111', 'FileType': '1 Firmware Upgrade Image'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '2587753872487'} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Check CPE not reboot
::CONSOLE::Local
::CONSOLE::Wait_String {300} {$Reboot_String$} {FAIL} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2984 Backup Configuration File to HTTP Server with Incorrect credentials > 
# BUG: it should return 9012, but return 9011
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2984," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Upload rom-file
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 

# Set incorrect pwd
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'http://domain.pqatest.com:9090/file_auth/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 1, 'Password': '1111111', 'FileType': '1 Vendor Configuration File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

# Check falut code & CommandKey
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '1888555444333'} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2985 Backup Configuration File to FTP Server with Incorrect credentials > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2985," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Upload FW
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 

# Set incorrect pwd
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'ftp://172.205.77.11/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 1, 'Password': '1111111', 'FileType': '1 Vendor Configuration File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

# Check falut code & CommandKey
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '1888555444333'} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultString': 'File transfer server authentication failure'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L2%
# +CaseStart+
# < UTP-2986 Non-existent domain HTTP Server : Configuration File > 
# can't check UploadResponse & UploadResponse
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2986," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# # Upload rom-file
# ::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
# ::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
# ::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
# ::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
# ::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 

# # Set incorrect pwd
# ::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'http://aaa.bbb.ccc/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 1, 'Password': '1111111', 'FileType': '1 Vendor Configuration File'}} {5} 
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_CloseBrowser {}

# # Check falut code & CommandKey
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '1888555444333'} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9011'} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultString': 'Upload failure'} {::ret_value} 
# ::USER_DEFINE::CloseTR069ACS {} 

# # Download rom-file
# ::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
# ::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
# ::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
# ::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
# ::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
# # Set incorrect pwd
# ::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'DelaySeconds': 30, 'TargetFileName': '', 'FailureURL': '', 'FileSize': , 'SuccessURL': '', 'URL': 'http://aaa.bbb.ccc/rom.conf', 'CommandKey': '', 'Password': '1234', 'FileType': '3 Vendor Configuration File'}} {5} 
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_CloseBrowser {}

# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9010'} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultString': 'File transfer failure'} {::ret_value} 
# ::USER_DEFINE::CloseTR069ACS {} 

# # Check CPE not reboot
# ::CONSOLE::Local
# ::CONSOLE::Wait_String {300} {$Reboot_String$} {FAIL} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2999 Check VDSL WAN Interface Setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2999," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset default to change to VDSL WAN
::MISC::Enable_xDSL_Line {1} {enable}
::MISC::Enable_Network_Interface {WAN1} {Disable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=vdsl_editBtn0} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# GetParameterValues (Bug: need support this parameter, InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.StandardsSupported, StandardUsed, UPBOKLE, TRELLISds, TRELLISus, ACTSNRMODEds, ACTSNRMODEus, ACTUALCE, SNRMpbds, SNRMpbus || InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.TestParams.HLOGGds, HLOGGus, HLOGpsds, HLOGpsus, HLOGMTds, HLOGMTus, QLNGds, QLNGus, QLNpsds, QLNpsus, QLNMTds, QLNMTus, SNRGds, SNRGus, SNRpsds, SNRpsus, SNRMTds, SNRMTus, LATNds, LATNus, SATNds, SATNus)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.} {Enable} "0" {Status} {NoSignal} {LinkEncapsulationSupported} {Unconfigured} {LinkEncapsulationRequested} {Unconfigured} {LinkEncapsulationUsed} {Unconfigured} {AllowedProfiles} {} {CurrentProfile} {} {UpstreamMaxRate} {0} {DownstreamMaxRate} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.} {UpstreamNoiseMargin} {} {DownstreamNoiseMargin} {} {UpstreamAttenuation} {0.0} {DownstreamAttenuation} {0.0} {UpstreamPower} {0} {DownstreamPower} {0} {TotalStart} {0} {ShowtimeStart} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.} {StandardsSupported} {} {UPBOKLE} {} {TRELLISds} {} {TRELLISus} {} {ACTSNRMODEds} {} {ACTSNRMODEus} {} {ACTUALCE} {} {SNRMpbds} {} {SNRMpbus} {}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANDSLInterfaceConfig.TestParams.} {HLOGGds} {} {HLOGGus} {} {HLOGpsds} {} {HLOGpsus} {} {HLOGMTds} {} {HLOGMTus} {} {QLNGds} {} {QLNGus} {} {QLNpsds} {} {QLNpsus} {} {QLNMTds} {} {QLNMTus} {} {SNRGds} {} {SNRGus} {} {SNRpsds} {} {SNRpsus} {} {SNRMTds} {} {SNRMTus} {} {LATNds} {} {LATNus} {} {SATNds} {} {SATNus} {}
::USER_DEFINE::CloseTR069ACS {} 

# reset default to change to Ethernet WAN
::MISC::Enable_xDSL_Line {1} {disable}
::MISC::Enable_Network_Interface {WAN1} {Enable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3000 Check VDSL WAN Interface Link Configuration and Status > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3000," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset default to change to VDSL WAN
::MISC::Enable_xDSL_Line {1} {enable}
::MISC::Enable_Network_Interface {WAN1} {Disable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=vdsl_editBtn0} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# GetParameterValues 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANDSLLinkConfig.} {} {}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {faultcode} {::ret_value} 

# SetParameterValues
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANDSLLinkConfig.} {Enable} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANDSLLinkConfig.} {LinkType} {PPPoE} 

# GetParameterValues Check Value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANDSLLinkConfig.} {Enable} {1} {LinkStatus} {} {LinkType} {PPPoE} {AutoConfig} {0} {DestinationAddress} {} {ATMTransmittedBlocks} {0} {ATMReceivedBlocks} {0} {ATMCRCErrors} {0}
::USER_DEFINE::CloseTR069ACS {} 

# reset default to change to Ethernet WAN
::MISC::Enable_xDSL_Line {1} {disable}
::MISC::Enable_Network_Interface {WAN1} {Enable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3003 Check Ethernet WAN Interface Status and Statistics > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3003," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#GetParameterValues(CPE would not return fault code)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.} {} {}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {faultcode} {::ret_value} 
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Stats.} {} {}] 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {faultcode} {::ret_value} 
set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANEthernetLinkConfig.EthernetLinkStatus} {} {}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {faultcode} {::ret_value} 

# SetParameterValues
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.} {Enable} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.} {MaxBitRate} {10}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.} {DuplexMode} {Half}  

# GetParameterValues(Check value correct and not empty)

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Enable}] {::Enable}
if {"$::Enable" == "1" && "$::Enable" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Enable=$::Enable"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Enable=$::Enable"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Status}] {::Status}
if {"$::Status" == "UpLink" && "$::Status" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Status=$::Status"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Status=$::Status"
}

if {"$WAN_MAC_END" == "1"} {
    set ::WAN_MAC "$DUT_WAN_MAC2_UType2$"
} else {
    set ::WAN_MAC "$DUT_WAN_MAC1_UType2$"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MACAddress}] {::MACAddress}
if {"$::MACAddress" == "$::WAN_MAC" && "$::MACAddress" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MACAddress=$::MACAddress"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MACAddress=$::MACAddress"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MaxBitRate}] {::MaxBitRate}
if {"$::MaxBitRate" == "10" && "$::MaxBitRate" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MaxBitRate=$::MaxBitRate"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.MaxBitRate=$::MaxBitRate"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.DuplexMode}] {::DuplexMode}
if {"$::DuplexMode" == "Half" && "$::DuplexMode" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.DuplexMode=$::DuplexMode"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.DuplexMode=$::DuplexMode"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Stats.BytesSent}] {::BytesSent}
if {"$::BytesSent" != "0" && "$::BytesSent" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.BytesSent=$::BytesSent"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.BytesSent=$::BytesSent"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Stats.BytesReceived}] {::BytesReceived}
if {"$::BytesReceived" != "0" && "$::BytesReceived" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.BytesReceived=$::BytesReceived"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.BytesReceived=$::BytesReceived"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Stats.PacketsSent}] {::PacketsSent}
if {"$::PacketsSent" != "0" && "$::PacketsSent" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.PacketsSent=$::PacketsSent"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.PacketsSent=$::PacketsSent"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.Stats.PacketsReceived}] {::PacketsReceived}
if {"$::PacketsReceived" != "0" && "$::PacketsReceived" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.PacketsReceived=$::PacketsReceived"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.PacketsReceived=$::PacketsReceived"
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANEthernetLinkConfig.EthernetLinkStatus}] {::EthernetLinkStatus}
if {"$::EthernetLinkStatus" == "Up" && "$::EthernetLinkStatus" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.EthernetLinkStatus=$::EthernetLinkStatus"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.WANDevice.1.WANEthernetInterfaceConfig.stats.EthernetLinkStatus=$::EthernetLinkStatus"
}
::USER_DEFINE::CloseTR069ACS {} 

# # Check from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {systemMonitoring} {20}
# ::WEB::WebDrv_Click {id} {systemMonitoring-trafficStatus} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# # Sent
# ::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[6]} {::pkt_received} {10} 
# if {"$::pkt_received" == "0"} {
#     ::MISC::ACTS_Dummy_Response {FAIL} {pkt_received value on Adv GUI should be not zero}
# }
# # Received
# ::WEB::WebDrv_Get_Text {xpath} {/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[3]/td[9]} {::pkt_sent} {10} 
# if {"$::pkt_sent" == "0"} {
#     ::MISC::ACTS_Dummy_Response {FAIL} {pkt_sent value on Adv GUI should be not zero}    
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2928 Add Port Forwarding Rule - Opening Single Port,Modify Ports/InternalClient,Disable/delete rules > 
# Redmine ID: 167277
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2928," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r wlan0} {15} {ifconfig wlan0 down} {15} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r wlan0} {15} {ifconfig wlan0 down} {15} 

#
::MISC::ACTS_Dummy_Response {WARNING} {Debug 1}

# Get LAN1 IP
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Addobject 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1841142071835} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1841150713804} 

# Set portforwarding PC1 rule 1
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPort} {5000} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPortEndRange} {5000} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {InternalPort} {5000} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingProtocol} {UDP} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {InternalClient} "$::lan1_ip" 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingDescription} {SinglePortUDP} 

# Set portforwarding PC1 rule 2
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPort} {8000} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPortEndRange} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {InternalPort} {8000} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingProtocol} {TCP} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {InternalClient} "$::lan1_ip" 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingDescription} {TCP_SinglePort} 
::USER_DEFINE::CloseTR069ACS {} 

# Check rule from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# rule 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=SinglePortUDP|5000|5000|5000|5000|$::lan1_ip} {$Result=PASS}]
# rule 2 (because ExternalPortEndRange can't small than ExternalPort)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=TCP_SinglePort|8000|8000|8000|8000|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {SinglePortUDP} {Internet} {SinglePortUDP} {UDP} {SinglePortUDP} {5000:5000} {SinglePortUDP} "$::lan1_ip" {SinglePortUDP} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {TCP_SinglePort} {Internet} {TCP_SinglePort} {TCP} {TCP_SinglePort} {8000:8000} {TCP_SinglePort} "$::lan1_ip" {TCP_SinglePort} {Yes}

# Check rule from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {5000} {ExternalPortEndRange} {5000} {InternalPort} {5000} {PortMappingProtocol} {UDP} {InternalClient} "$::lan1_ip" {PortMappingDescription} {SinglePortUDP}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} {ExternalPort} {8000} {ExternalPortEndRange} {8000} {InternalPort} {8000} {PortMappingProtocol} {TCP} {InternalClient} "$::lan1_ip" {PortMappingDescription} {TCP_SinglePort} 
::USER_DEFINE::CloseTR069ACS {} 

# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Check LAN PC 1 can receive packet on UDP port 5000, TCP port 8000 (udp use iperf, tcp use iperf3)
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {5000} {-U -u}
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {5000} {} {-u} {no} {PASS}  
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {5000} {-u} 
::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {8000} {}
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" {8000} {10} {} {no} {PASS}  
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {8000} {} 
# Get PC2 IP
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 up} {10}
::CONSOLE::CI_Cmd_More {} {dhclient eth1} {10}  
::CONSOLE::Wait {5} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {eth1} {::lan2_ip} 

#
::MISC::ACTS_Dummy_Response {WARNING} {Debug 2}

# Set portforwarding PC1 rule 1
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPortEndRange} {5001} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPort} {5001} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {InternalPort} {5001} 

# Set portforwarding PC2 rule 2
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPortEndRange} {8001}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPort} {8001} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {InternalPort} {8001} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {InternalClient} "$::lan2_ip" 
::USER_DEFINE::CloseTR069ACS {} 

# Check rule from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# rule 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=SinglePortUDP|5001|5001|5001|5001|$::lan1_ip} {$Result=PASS}]
# rule 2
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=TCP_SinglePort|8001|8001|8001|8001|$::lan2_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {SinglePortUDP} {Internet} {SinglePortUDP} {UDP} {SinglePortUDP} {5001:5001} {SinglePortUDP} "$::lan1_ip" {SinglePortUDP} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {TCP_SinglePort} {Internet} {TCP_SinglePort} {TCP} {TCP_SinglePort} {8001:8001} {TCP_SinglePort} "$::lan2_ip" {TCP_SinglePort} {Yes}

# Check rule from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {5001} {ExternalPortEndRange} {5001} {InternalPort} {5001} {PortMappingProtocol} {UDP} {InternalClient} "$::lan1_ip" {PortMappingDescription} {SinglePortUDP}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} {ExternalPort} {8001} {ExternalPortEndRange} {8001} {InternalPort} {8001} {PortMappingProtocol} {TCP} {InternalClient} "$::lan2_ip" {PortMappingDescription} {TCP_SinglePort} 
::USER_DEFINE::CloseTR069ACS {} 

# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Check LAN PC 1 can receive packet on UDP port 5000, TCP port 8000 (udp use iperf, tcp use iperf3)
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {5001} {-U -u}
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {5001} {20} {-u} {no} {PASS}  
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {5001} {} 
::CONSOLE::Start_WKS_iPerf3_Server {LAN2_WKS} {8001} {}
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" {8001} {20} {} {no} {PASS}  
::CONSOLE::Stop_WKS_iPerf3_Server {LAN2_WKS} {8001} {} 

#
::MISC::ACTS_Dummy_Response {WARNING} {Debug 3}

# Set rule1 disable, delete rule2
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {0} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {1841150713804} 
::USER_DEFINE::CloseTR069ACS {} 

# Check rule from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# rule 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=SinglePortUDP|5001|5001|5001|5001|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check rule from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {SinglePortUDP} {Internet} {SinglePortUDP} {UDP} {SinglePortUDP} {5001:5001} {SinglePortUDP} "$::lan1_ip" {SinglePortUDP} {No}
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {TCP_SinglePort} {Internet} {TCP_SinglePort} {TCP} {TCP_SinglePort} {8001:8001} {TCP_SinglePort} "$::lan2_ip" {TCP_SinglePort} {Yes}

# Check rule from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {0} {ExternalPort} {5001} {ExternalPortEndRange} {5001} {InternalPort} {5001} {PortMappingProtocol} {UDP} {InternalClient} "$::lan1_ip" {PortMappingDescription} {SinglePortUDP}
::USER_DEFINE::CloseTR069ACS {} 

# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Check LAN PC 1 can receive packet on UDP port 5000, TCP port 8000 (udp use iperf, tcp use iperf3)
::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} {5001} {-U -u}
::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" {5001} {10} {-u} {no} {FAIL}  
::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} {5001} {} 
::CONSOLE::Start_WKS_iPerf3_Server {LAN2_WKS} {8001} {}
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" {8001} {10} {} {no} {FAIL}  
::CONSOLE::Stop_WKS_iPerf3_Server {LAN2_WKS} {8001} {} 

# Set delete rule1 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}  
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {1841142071835} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2933 Add Multiple Port Forwarding Rules > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2933," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get LAN PC1 IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Add rule from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
for {set ::index 1} {$::index < 9} {incr ::index} {
    set No ""
    append No $::index
    append No "2345678"
    ::USER_DEFINE::TR069AddObject {$CPEID$} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping." "$No"
}
# Set rule value
# Port 80 | TCP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1.ExternalPort} {80}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {ExternalPortEndRange} {0} {InternalPort} {80} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_80}
# Port 443 | TCP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPort} {443} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {ExternalPortEndRange} {0} {InternalPort} {443} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_443}
# Port 5223 | TCP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.3.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {3.ExternalPort} {5223} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.3.} {ExternalPortEndRange} {0} {InternalPort} {5223} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_5223}
# Port 10070:10080 | TCP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.4.} {PortMappingEnabled} {1} {ExternalPort} {10070} {ExternalPortEndRange} {10080} {InternalPort} {10070} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_10070_10080}
# Port 3478:3479 | UDP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.5.} {PortMappingEnabled} {1} {ExternalPort} {3478} {ExternalPortEndRange} {3479} {InternalPort} {3478} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_3478_3479} {PortMappingProtocol} {UDP}
# Port 3658 | UDP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.6.} {PortMappingEnabled} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {6.ExternalPort} {3658} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.6.} {ExternalPortEndRange} {0} {InternalPort} {3658} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_3658} {PortMappingProtocol} {UDP}
# Port 9304 | UDP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.7.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {7.ExternalPort} {9304} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.7.} {ExternalPortEndRange} {0} {InternalPort} {9304} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_9304} {PortMappingProtocol} {UDP}
# Port 10070 | UDP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.8.} {PortMappingEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {8.ExternalPort} {10070} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.8.} {ExternalPortEndRange} {0} {InternalPort} {10070} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_10070} {PortMappingProtocol} {UDP}

# Check value from TR069
# Port 80 | TCP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {80} {ExternalPortEndRange} {80} {InternalPort} {80} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_80} {PortMappingProtocol} {TCP}
# Port 443 | TCP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} {ExternalPort} {443} {ExternalPortEndRange} {443} {InternalPort} {443} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_443} {PortMappingProtocol} {TCP}
# Port 5223 | TCP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.3.} {PortMappingEnabled} {1} {ExternalPort} {5223} {ExternalPortEndRange} {5223} {InternalPort} {5223} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_5223} {PortMappingProtocol} {TCP}
# Port 10070:10080 | TCP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.4.} {PortMappingEnabled} {1} {ExternalPort} {10070} {ExternalPortEndRange} {10080} {InternalPort} {10070} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_TCP_10070_10080} {PortMappingProtocol} {TCP}
# Port 3478:3479 | UDP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.5.} {PortMappingEnabled} {1} {ExternalPort} {3478} {ExternalPortEndRange} {3479} {InternalPort} {3478} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_3478_3479} {PortMappingProtocol} {UDP}
# Port 3658 | UDP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.6.} {PortMappingEnabled} {1} {ExternalPort} {3658} {ExternalPortEndRange} {3658} {InternalPort} {3658} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_3658} {PortMappingProtocol} {UDP}
# Port 9304 | UDP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.7.} {PortMappingEnabled} {1} {ExternalPort} {9304} {ExternalPortEndRange} {9304} {InternalPort} {9304} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_9304} {PortMappingProtocol} {UDP}
# Port 10070 | UDP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.8.} {PortMappingEnabled} {1} {ExternalPort} {10070} {ExternalPortEndRange} {10070} {InternalPort} {10070} {InternalClient} "$::lan1_ip" {PortMappingDescription} {PS4_UDP_10070} {PortMappingProtocol} {UDP}
::USER_DEFINE::CloseTR069ACS {} 

# Check Value from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_TCP_80} {Internet} {PS4_TCP_80} {TCP} {PS4_TCP_80} {80:80} {PS4_TCP_80} "$::lan1_ip" {PS4_TCP_80} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_TCP_443} {Internet} {PS4_TCP_443} {TCP} {PS4_TCP_443} {443:443} {PS4_TCP_443} "$::lan1_ip" {PS4_TCP_443} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_TCP_5223} {Internet} {PS4_TCP_5223} {TCP} {PS4_TCP_5223} {5223:5223} {PS4_TCP_5223} "$::lan1_ip" {PS4_TCP_5223} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_TCP_10070_10080} {Internet} {PS4_TCP_10070_10080} {TCP} {PS4_TCP_10070_10080} {10070:10080} {PS4_TCP_10070_10080} "$::lan1_ip" {PS4_TCP_10070_10080} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_UDP_3478_3479} {Internet} {PS4_UDP_3478_3479} {UDP} {PS4_UDP_3478_3479} {3478:3479} {PS4_UDP_3478_3479} "$::lan1_ip" {PS4_UDP_3478_3479} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_UDP_3658} {Internet} {PS4_UDP_3658} {UDP} {PS4_UDP_3658} {3658:3658} {PS4_UDP_3658} "$::lan1_ip" {PS4_UDP_3658} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_UDP_9304} {Internet} {PS4_UDP_9304} {UDP} {PS4_UDP_9304} {9304:9304} {PS4_UDP_9304} "$::lan1_ip" {PS4_UDP_9304} {Yes}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {10} {PS4_UDP_10070} {Internet} {PS4_UDP_10070} {UDP} {PS4_UDP_10070} {10070:10070} {PS4_UDP_10070} "$::lan1_ip" {PS4_UDP_10070} {Yes}

# Check value from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_80|80|80|80|80|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_443|443|443|443|443|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_5223|5223|5223|5223|5223|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_10070_10080|10070|10080|10070|10080|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_3478_3479|3478|3479|3478|3479} {$Result=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_3658|3658|3658|3658|3658|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_9304|9304|9304|9304|9304|$::lan1_ip} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_10070|10070|10070|10070|10070|$::lan1_ip} {$Result=PASS}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check LAN PC 1 can receive packet on specific port
# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
# Stop Apache2
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {sudo /etc/init.d/apache2 stop} 
::CONSOLE::Wait {5} 
# TCP port
set port {80 443 5223 10070 10080}
for {set i 0} {$i < 5} {incr i} {
    ::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} "[lindex $port $i]" {}
    ::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" "[lindex $port $i]" {10} {} {no} {PASS}  
    ::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} "[lindex $port $i]" {} 
}
# UDP port
set port {3478 3479 3658 9304 10070}
for {set i 0} {$i < 5} {incr i} {
    ::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} "[lindex $port $i]" {-U -u}
    ::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" "[lindex $port $i]" {10} {-u} {no} {PASS}  
    ::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} "[lindex $port $i]" {}
}
# Delete rule from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
for {set ::index 1} {$::index < 9} {incr ::index} {
    set No ""
    append No $::index
    append No "2345678"
    ::USER_DEFINE::TR069DeleteObject {$CPEID$} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.$::index." "$No"
}
# Check rule delete from TR069
for {set index 1} {$index < 9} {incr index} {
    set x [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.$index." {} {}]
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "faultcode" {::ret_value} 
}
::USER_DEFINE::CloseTR069ACS {} 

# Check rule delete from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_TCP_80} {Internet}
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_TCP_443} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_TCP_5223} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_TCP_10070_10080} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_UDP_3478_3479} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_UDP_3658} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_UDP_9304} {Internet} 
::CONSOLE::CI_Cmd_Scan_Fail {} {nat natp show table} {10} {PS4_UDP_10070} {Internet}

# Check rule delete from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_80|80|80|80|80} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_443|443|443|443|443} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_TCP_5223|5223|5223|5223|5223} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_3478_3479|3478|3479|3478|3479} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_3658|3658|3658|3658|3658} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_9304|9304|9304|9304|9304} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=PS4_UDP_10070|10070|10070|10070|10070} {$Result=FAIL}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check LAN PC1 can't receive packet on specific port
# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
# TCP port
set port {80 443 5223 10070 10080}
for {set i 0} {$i < 5} {incr i} {
    ::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} "[lindex $port $i]" {}
    ::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" "[lindex $port $i]" {10} {} {no} {FAIL}  
    ::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} "[lindex $port $i]" {} 
}
# UDP port
set port {3478 3479 3658 9304 10070}
for {set i 0} {$i < 5} {incr i} {
    ::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} "[lindex $port $i]" {-U -u}
    ::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" "[lindex $port $i]" {10} {-u} {no} {FAIL}  
    ::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} "[lindex $port $i]" {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2930 Add Port Forwarding Rule - Opening Range Port when External Port is duplicated with Internal port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2930," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get lan1 ip
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::lan1_ip} {PASS} 

# Get WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# Add porforwarding rule
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1841176639711} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1841185281680} 
# Port 7773:7775 | TCP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {7773} {ExternalPortEndRange} {7775} {InternalPort} {7775} {InternalClient} "$::lan1_ip" {PortMappingDescription} {RangePortTCP}
# Port 4002:4004 | UDP
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} {ExternalPort} {4002} {ExternalPortEndRange} {4004} {InternalPort} {4004} {InternalClient} "$::lan1_ip" {PortMappingDescription} {RangePortUDP} {PortMappingProtocol} {UDP}

# Check Value from TR069
# Port 7773:7775 | TCP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {ExternalPort} {7773} {ExternalPortEndRange} {7775} {InternalPort} {7775} {InternalClient} "$::lan1_ip" {PortMappingDescription} {RangePortTCP}
# Port 4002:4004 | UDP
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {PortMappingEnabled} {1} {ExternalPort} {4002} {ExternalPortEndRange} {4004} {InternalPort} {4004} {InternalClient} "$::lan1_ip" {PortMappingDescription} {RangePortUDP} {PortMappingProtocol} {UDP}
::USER_DEFINE::CloseTR069ACS {} 

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# Port 7773:7775 | TCP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=RangePortTCP|7773|7775|7775|7777} {$Result=PASS}]
# Port 4002:4004 | UDP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=RangePortUDP|4002|4004|4004|4006} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Chcek from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} {Internet} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} {TCP} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} {7773:7775} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} {7775:7777} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} "$::lan1_ip" 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortTCP} {Yes}

::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} {Internet} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} {UDP} 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} {4002:4004}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} {4004:4006}
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} "$::lan1_ip" 
::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} {RangePortUDP} {Yes}

# TCP port
set ::port {7773 7774 7775}
for {set ::i 0} {$::i < 3} {incr ::i} {
    ::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} "[expr [lindex $::port $::i] + 2]" {}
    ::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" "[lindex $::port $::i]" {10} {} {no} {PASS}  
    ::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} "[expr [lindex $::port $::i] + 2]" {}
}
# UDP port
set ::port {4002 4003 4004}
for {set ::i 0} {$::i < 3} {incr ::i} {
    ::CONSOLE::Start_WKS_iPerf_Server {LAN1_WKS} "[expr [lindex $::port $::i] + 2]" {-U -u}
    ::CONSOLE::Check_WKS_iPerf_Connect {WAN_WKS} "$::WAN_IP" "[lindex $::port $::i]" {10} {-u} {no} {PASS}  
    ::CONSOLE::Stop_WKS_iPerf_Server {LAN1_WKS} "[expr [lindex $::port $::i] + 2]" {}
}
# Delete rule
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {1841176639711} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {1841185281680} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2937 Add Port Forwarding Rule - Add to Maximum entries > 
# iperf3 send traffic from port 5001 high rate fail, but it's can work by manual
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2937," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Get lan1 ip
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}

# Add rule from TR069, Add max entry rule
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
for {set ::index 1} {$::index < 29} {incr ::index} {
    set No ""
    append No $::index
    append No "2345678"
    ::USER_DEFINE::TR069AddObject {$CPEID$} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping." "$No"
}
# Port 5001:5001 ~ 5028:5028 | TCP
for {set ::index 1} {$::index < 29} {incr ::index} {
    set ::port [expr $::index + 5000] 
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.$::index." {PortMappingEnabled} {1} {ExternalPort} "$::port" {ExternalPortEndRange} "$::port" {InternalPort} "$::port" {InternalClient} "$::lan1_ip" {PortMappingDescription} "RangePortTCP_$::index" {PortMappingProtocol} {TCP}
    # Check Value from TR069
    # Port 5001:5001 ~ 5028:5028 | TCP
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.$::index." {PortMappingEnabled} {1} {ExternalPort} "$::port" {ExternalPortEndRange} "$::port" {InternalPort} "$::port" {InternalClient} "$::lan1_ip" {PortMappingDescription} "RangePortTCP_$::index" {PortMappingProtocol} {TCP}
}
::USER_DEFINE::CloseTR069ACS {} 

# Check from Adv GUI
for {set ::index 1} {$::index < 29} {incr ::index} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    set ::port [expr $::index + 5000] 
    # Port 5001:5001 ~ 5028:5028 | TCP
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=RangePortTCP_$::index|$::port|$::port|$::port|$::port|$::lan1_ip} {$Result=PASS}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

# Chcek from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
for {set ::index 1} {$::index < 29} {incr ::index} {
    set ::port [expr $::index + 5000] 
    set x [::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {Internet}]
    if {[string first "not find" "$x"] == -1} {
        ::MISC::ACTS_Dummy_Response {PASS} "nat natp show table, RangePortTCP_$::index Internet success"
    } else {
        ::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {Internet}
    }
    set x [::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {TCP}]
    if {[string first "not find" "$x"] == -1} {
        ::MISC::ACTS_Dummy_Response {PASS} "nat natp show table, RangePortTCP_$::index TCP success"
    } else {
        ::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {TCP}
    }
    set x [::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" "$::port:$::port"]
    if {[string first "not find" "$x"] == -1} {
        ::MISC::ACTS_Dummy_Response {PASS} "nat natp show table, RangePortTCP_$::index $::port:$::port success"
    } else {
        ::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" "$::port:$::port"
    }
    set x [::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" "$::lan1_ip"]
    if {[string first "not find" "$x"] == -1} {
        ::MISC::ACTS_Dummy_Response {PASS} "nat natp show table, RangePortTCP_$::index $::lan1_ip success"
    } else {
        ::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" "$::lan1_ip"
    }
    set x [::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {Yes}]
    if {[string first "not find" "$x"] == -1} {
        ::MISC::ACTS_Dummy_Response {PASS} "nat natp show table, RangePortTCP_$::index Yes success"
    } else {
        ::CONSOLE::CI_Cmd_Scan {} {nat natp show table} {20} "RangePortTCP_$::index" {Yes}
    }    
}
# Get WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# TCP port
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {killall iperf3} {10} 
::CONSOLE::Wait {10} 
for {set ::index 1} {$::index < 29} {incr ::index} {
    set ::port [expr $::index + 5000] 
::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} "$::port" {}
::CONSOLE::Wait {5} 
::CONSOLE::Check_WKS_iPerf3_Connect {WAN_WKS} "$::WAN_IP" "$::port" {10} {} {no} {PASS}  
::CONSOLE::Wait {5} 
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} "$::port" {}
}
# Delete rule
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
for {set ::index 1} {$::index < 29} {incr ::index} {
    set No ""
    append No $::index
    append No "2345678"
    ::USER_DEFINE::TR069DeleteObject {$CPEID$} "InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.$::index." "$No"
} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2885 Create and remove LAN DHCP option settings > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2885," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# recover Env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Add DHCP object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {12345678} 

# Set DHCP value
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} "1"
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {IPInterfaceIPAddress} {$LAN_Change_IP$}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {Enable} {1}  
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPServerEnable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MinAddress} {$LAN_Change_Subnet$.33}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MaxAddress} {$LAN_Change_Subnet$.199}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DNSServers} {168.95.1.1,8.8.8.8}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPRouters} {$LAN_Change_IP$} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPLeaseTime} {3600} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Enable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Tag} {240}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIyOnY2LjA6MjM5LjAuMi4zNToyMjIyMg==}

# Check Value from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {IPInterfaceIPAddress} {$LAN_Change_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {Enable} "1"  
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPServerEnable} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MinAddress} {$LAN_Change_Subnet$.33}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {MaxAddress} {$LAN_Change_Subnet$.199}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DNSServers} {168.95.1.1,8.8.8.8}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {IPRouters} {$LAN_Change_IP$} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPLeaseTime} {3600} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Enable} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Tag} {240}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIyOnY2LjA6MjM5LjAuMi4zNToyMjIyMg==}
::USER_DEFINE::CloseTR069ACS {} 

# renew LAN PC
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {25}

# Check LAN DHCP value from Adv GUI
::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$$LAN_Change_IP$$Adv_GUI_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$.33} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PoolSize} {167} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSerGateway} {$LAN_Change_IP$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSerSubnetMask} {255.255.255.0} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {dhcp_LeaseTime} {3600} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {168.95.1.1} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {8.8.8.8} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {lan show} {10} {inet addr:} {$LAN_Change_IP$} 

# Capture dhcp packet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=UTP-2885_dhcp.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {15} {dhclient eth1} {15} 
::CONSOLE::Wait {40} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=UTP-2885_dhcp.pcap} {$filter=bootp} {$judge=pass}]
::CONSOLE::Wait {15} 
::CONSOLE::CI_Cmd_Scan {} {cat /root/UTP-2885_dhcp.txt | grep 'Option: (6)' -A3} {10} {168.95.1.1} {} {8.8.8.8} {} 
::CONSOLE::CI_Cmd_Scan {} {cat /root/UTP-2885_dhcp.txt | grep 'Option: (51)' -A2} {10} {3600s} {}
::CONSOLE::CI_Cmd_Scan {} {cat /root/UTP-2885_dhcp.txt | grep 'Option: (54)' -A2} {10} {$LAN_Change_IP$} {}
::CONSOLE::CI_Cmd_Scan {} {cat /root/UTP-2885_dhcp.txt | grep 'Option: (3)' -A2} {10} {Router:} {$LAN_Change_IP$}
::CONSOLE::CI_Cmd_Scan {} {cat /root/UTP-2885_dhcp.txt | grep 'Option: (240)' -A2} {10} {Value:} {3a3a3a3a3a3233392e302e322e31303a32323232323a7636}

# Delete object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.1.} {12345678} 
::USER_DEFINE::CloseTR069ACS {} 

# Capture dhcp packet (can't send option 240)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=UTP-2885_dhcp_2.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {15} {dhclient eth1} {15} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=UTP-2885_dhcp_2.pcap} {$filter=bootp} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} {cat /root/UTP-2885_dhcp_2.txt | grep 'Option: (240)' -A2} {10} {Value:} {3a3a3a3a3a3233392e302e322e31303a32323232323a7636}

# recover Env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3087 IPPing Diagnostics with Different interfaces > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3087," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Get LAN1_IP
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Case 1
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1} {Host} "$::lan1_ip" {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}  
::CONSOLE::Wait {10} 
# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Check IPPingDiagnostics value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {SuccessCount} {5} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {FailureCount} {0} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.AverageResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {AverageResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MinimumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MinimumResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MaximumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MaximumResponseTime value should be non-zero}
}
::USER_DEFINE::CloseTR069ACS {} 

# Case 2
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {domain.pqatest.com} {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}  
::CONSOLE::Wait {10} 
# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Check IPPingDiagnostics value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {SuccessCount} {5} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {FailureCount} {0} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.AverageResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {AverageResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MinimumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MinimumResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MaximumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MaximumResponseTime value should be non-zero}
}
::USER_DEFINE::CloseTR069ACS {} 

# Case 3
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {} {Host} "$::lan1_ip" {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}  
::CONSOLE::Wait {10} 
# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Check IPPingDiagnostics value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {SuccessCount} {5} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {FailureCount} {0} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.AverageResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {AverageResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MinimumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MinimumResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MaximumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MaximumResponseTime value should be non-zero}
}
::USER_DEFINE::CloseTR069ACS {}

# Case 4
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {} {Host} {172.202.77.11} {NumberOfRepetitions} {1} {DiagnosticsState} {Requested}  
::CONSOLE::Wait {10} 
# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Check IPPingDiagnostics value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {SuccessCount} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {FailureCount} {0} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.AverageResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {AverageResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MinimumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MinimumResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MaximumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MaximumResponseTime value should be non-zero}
}
::USER_DEFINE::CloseTR069ACS {}

# Case 5
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {172.202.77.11} {NumberOfRepetitions} {5} {DiagnosticsState} {Requested}  
::CONSOLE::Wait {10} 
# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Check IPPingDiagnostics value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {SuccessCount} {5} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {FailureCount} {0} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.AverageResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {AverageResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MinimumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MinimumResponseTime value should be non-zero}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.IPPingDiagnostics.MaximumResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {MaximumResponseTime value should be non-zero}
}
::USER_DEFINE::CloseTR069ACS {}

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3089 TraceRoute Diagnostics with Different interfaces > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3089," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# case 1
# Get lan1 ip
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1} {Host} "$::lan1_ip" {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Complete} {RouteHops.1.HopHost} "$::lan1_ip" {RouteHops.1.HopHostAddress} "$::lan1_ip" {RouteHops.1.HopErrorCode} {0}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes should be non-zro value}
}

# Case 2
# Set TraceRouteDiagnostics
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {172.202.77.1} {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Complete} {RouteHops.1.HopHost} {172.202.77.1} {RouteHops.1.HopHostAddress} {172.202.77.1} {RouteHops.1.HopErrorCode} {0}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes should be non-zro value}
}

# Case 3
# Set TraceRouteDiagnostics
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {} {Host} "$::lan1_ip" {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Complete} {RouteHops.1.HopHost} "$::lan1_ip" {RouteHops.1.HopHostAddress} "$::lan1_ip" {RouteHops.1.HopErrorCode} {0}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes should be non-zro value}
}

# Case 4
# Set TraceRouteDiagnostics
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {} {Host} {172.202.77.1} {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Complete} {RouteHops.1.HopHost} {172.202.77.1} {RouteHops.1.HopHostAddress} {172.202.77.1} {RouteHops.1.HopErrorCode} {0}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes should be non-zro value}
}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3090 TraceRoute Diagnostics with Invalid Hostname > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3090," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Case 1
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} "172.202.77.1" {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CloseTR069ACS {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Complete} {RouteHops.1.HopHost} "172.202.77.1" {RouteHops.1.HopHostAddress} "172.202.77.1" {RouteHops.1.HopErrorCode} {0}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.ResponseTime should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHopsNumberOfEntries should be non-zro value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.1.HopRTTimes should be non-zro value}
}
::USER_DEFINE::CloseTR069ACS {} 

# Case 2
# Set TraceRouteDiagnostics
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {Host} {www.gesakdaiskdoaeee.com.tw} {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {8 DIAGNOSTICS COMPLETE} 
# Get Diagnostics
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.TraceRouteDiagnostics.} {DiagnosticsState} {Error_CannotResolveHostName}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2989 Backup Log File to HTTP Server > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2989," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# remove Log.txt
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd TR069/FW/} {10}
::CONSOLE::CI_Cmd_More {} {delete Log.txt} {10}
::CONSOLE::Close_Shell {Shell_FTP}

# Upload rom-file
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'admin', 'URL': 'http://172.202.77.10:7777/FW/Log.txt', 'CommandKey': '12345678901234567890', 'DelaySeconds': 0, 'Password': '1234', 'FileType': '2 Vendor Log File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {7 TRANSFER COMPLETE} 
::CONSOLE::Wait {10} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Upload} 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '12345678901234567890'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Check Log.txt
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd {} {cd TR069/FW/} 
::CONSOLE::CI_Cmd_Scan {} {ls} {10} {Log.txt} {}
::CONSOLE::Close_Shell {Shell_FTP}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2991 Backup Log File to FTP Server > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2991," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# remove Log.txt
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {delete /Log.txt} {60}
::CONSOLE::Close_Shell {Shell_FTP}

# Upload rom-file
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'ftp://172.202.77.10/Log.txt', 'CommandKey': '12345678901234567890', 'DelaySeconds': 0, 'Password': '1234', 'FileType': '2 Vendor Log File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {7 TRANSFER COMPLETE} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Upload} 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'CommandKey': '12345678901234567890'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Check Log.txt
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_Scan {} {ls} {10} {Log.txt} {}
::CONSOLE::Close_Shell {Shell_FTP}

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2886 Create and remove Multiple LAN Conditional Serving Pool to device > 
# Bug: HB3 After delete object, lan client still received dhcp pool2 & 3 rule, option 240, and lan ip can't get default ip pool
# Note: vi /etc/dhcp/dhclient.conf 
# LAN1(send vendor-class-identifier "PQA_Test";)
# LAN2(send vendor-class-identifier "MSFT_IPTV";)

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2886," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "MSFT 5.0";/send vendor-class-identifier "PQA_Test";/g' /etc/dhcp/dhclient.conf} {10}

# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "MSFT 5.0";/send vendor-class-identifier "MSFT_IPTV";/g' /etc/dhcp/dhclient.conf} {10}

# Add DHCPPool object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {12345678} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {22345678}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.DHCPOption.} {32345678} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.DHCPOption.} {42345678} 

# Set value
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {ABCD} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {Enable} {1} {PoolOrder} {1} {VendorClassID} {PQA_Test} {VendorClassIDMode} {Exact} {VendorClassIDExclude} {0} {LocallyServed} {1} {MinAddress} "$LAN_Subnet$.200" {MaxAddress} "$LAN_Subnet$.219" {DNSServers} {8.8.8.8} {IPRouters} "$LAN_IP$" {UseAllocatedWAN} {Normal}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.DHCPOption.1.} {Enable} {1} {Tag} {240} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIy}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {Enable} {1}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.} {Enable} {1} {PoolOrder} {1} {VendorClassID} {MSFT_IPTV} {VendorClassIDMode} {Substring} {VendorClassIDExclude} {0} {LocallyServed} {1} {MinAddress} "$LAN_Subnet$.220" {MaxAddress} "$LAN_Subnet$.223" {DNSServers} {168.95.1.1} {IPRouters} "$LAN_IP$" {UseAllocatedWAN} {Normal}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.DHCPOption.1.} {Enable} {1} {Tag} {240} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIyOnY2LjA6MjM5LjAuMi4zMDoyMjIyMg==}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.} {Enable} {1}

# Check value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.} {VendorClassID} {ABCD} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {Enable} {1} {PoolOrder} {1} {VendorClassID} {PQA_Test} {VendorClassIDMode} {Exact} {VendorClassIDExclude} {0} {LocallyServed} {1} {MinAddress} "$LAN_Subnet$.200" {MaxAddress} "$LAN_Subnet$.219" {DNSServers} {8.8.8.8} {IPRouters} "$LAN_IP$" {UseAllocatedWAN} {Normal}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.DHCPOption.1.} {Enable} {1} {Tag} {240} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIy}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.} {Enable} {1} {PoolOrder} {1} {VendorClassID} {MSFT_IPTV} {VendorClassIDMode} {Substring} {VendorClassIDExclude} {0} {LocallyServed} {1} {MinAddress} "$LAN_Subnet$.220" {MaxAddress} "$LAN_Subnet$.223" {DNSServers} {168.95.1.1} {IPRouters} "$LAN_IP$" {UseAllocatedWAN} {Normal}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.DHCPOption.1.} {Enable} {1} {Tag} {240} {Value} {Ojo6OjoyMzkuMC4yLjEwOjIyMjIyOnY2LjA6MjM5LjAuMi4zMDoyMjIyMg==}
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {ConSer2Gateway} "$LAN_IP$" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2Start} "$LAN_Subnet$.200" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2End} "$LAN_Subnet$.219" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2DNS1} "8.8.8.8" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2DNS2} "0.0.0.0" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ConSer2Opt60} "PQA_Test" {10} {PASS} {full} 
::WEB::WebDrv_Is_Selected {id} {ConSer2Opt60Type_Exact} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Mode should be Exact}
}
::WEB::WebDrv_Is_Selected {id} {ConSer2VendorIdExRadio_Disable} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {VendorID Exclude should be disabled}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {lan dhcpcondserv show} {10} {Vendor Class ID: ABCD} {} 
::CONSOLE::CI_Cmd_Scan {} {lan dhcpcondserv show} {10} {Vendor Class ID Mode: Exact} {} {Vendor Class ID Exclude: 0} {} {Vendor Class ID: PQA_Test} {} {Start IP Address: $LAN_Subnet$.200} {} {End IP Address: $LAN_Subnet$.219} {} {DNS Server: 8.8.8.8} {} {Gateway Address: $LAN_IP$} {} {Value: Ojo6OjoyMzkuMC4yLjEwOjIyMjIy} {}
::CONSOLE::CI_Cmd_Scan {} {lan dhcpcondserv show} {10} {Vendor Class ID Mode: Substring} {} {Vendor Class ID Exclude: 0} {} {Vendor Class ID: MSFT_IPTV} {} {Start IP Address: $LAN_Subnet$.220} {} {End IP Address: $LAN_Subnet$.223} {} {DNS Server: 168.95.1.1} {} {Gateway Address: $LAN_IP$} {} {Value: Ojo6OjoyMzkuMC4yLjEwOjIyMjIyOnY2LjA6MjM5LjAuMi4zMDoyMjIyMg==} {}

# Check DHCP packet
# pool2, LAN1_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=DHCP1.pcap} {$duration=20}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::Wait {20} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=DHCP1.pcap} {$filter=} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} {ifconfig eth1} {10} {inet addr:} {$LAN_Subnet$.200} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP1.txt | grep -A2 'Option: (54)'} {10} {DHCP Server Identifier: $LAN_IP$} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP1.txt | grep -A2 'Option: (3)'} {10} {Router: $LAN_IP$} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP1.txt | grep -A2 'Option: (6)'} {10} {Domain Name Server: 8.8.8.8} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP1.txt | grep -A2 'Option: (60)'} {10} {Vendor class identifier: PQA_Test} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP1.txt | grep -A2 'Option: (240)'} {10} {Value: 3a3a3a3a3a3233392e302e322e31303a3232323232} {} 

# pool3, LAN2_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN2_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=DHCP2.pcap} {$duration=60}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {20} {dhclient eth1} {20}
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN2_WKS} {$capture_file=DHCP2.pcap} {$filter=} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} {ifconfig eth1} {10} {inet addr:} {$LAN_Subnet$.220} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP2.txt | grep -A2 'Option: (54)'} {10} {DHCP Server Identifier: $LAN_IP$} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP2.txt | grep -A2 'Option: (3)'} {10} {Router: $LAN_IP$} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP2.txt | grep -A2 'Option: (6)'} {10} {Domain Name Server: 168.95.1.1} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP2.txt | grep -A2 'Option: (60)'} {10} {Vendor class identifier: MSFT_IPTV} {} 
::CONSOLE::CI_Cmd_Scan {} {cat DHCP2.txt | grep -A2 'Option: (240)'} {10} {Value: 3a3a3a3a3a3233392e302e322e31303a32323232323a7636} {} 

# Delete dhcp pool object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.2.} {12345678} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.3.} {22345678}
::USER_DEFINE::CloseTR069ACS {} 

# Check DHCP packet
# pool2, LAN1_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN1_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=DHCP1.pcap} {$duration=20}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::Wait {20} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN1_WKS} {$capture_file=DHCP1.pcap} {$filter=} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ifconfig eth1} {10} {inet addr:} {$LAN_Subnet$.200} 
::CONSOLE::CI_Cmd_Scan_Fail {} {cat DHCP1.txt | grep -A2 'Option: (240)'} {10} {Value: 3a3a3a3a3a3233392e302e322e31303a3232323232} {} 

# pool3, LAN2_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=LAN2_WKS} {$Shell=Shell_3} {$Interface=eth1} {$capture_file=DHCP2.pcap} {$duration=60}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::Wait {35} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=LAN2_WKS} {$capture_file=DHCP2.pcap} {$filter=} {$judge=pass}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan_Fail {} {ifconfig eth1} {10} {inet addr:} {$LAN_Subnet$.220} 
::CONSOLE::CI_Cmd_Scan_Fail {} {cat DHCP2.txt | grep -A2 'Option: (240)'} {10} {Value: 3a3a3a3a3a3233392e302e322e31303a32323232323a7636} {} 

# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "PQA_Test";/send vendor-class-identifier "MSFT 5.0";/g' /etc/dhcp/dhclient.conf} {10} 

# Change vendor
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {sudo sed -i 's/send vendor-class-identifier "MSFT_IPTV";/send vendor-class-identifier "MSFT 5.0";/g' /etc/dhcp/dhclient.conf} {10} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2962 Upgrade Firmware from last beta version to this version > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2962," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Put Previous FW, Current FW, to HTTP server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$FW_Previous$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

# Set PPPoE, WiFi 2.4G, WiFi 5G SSID
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Downgrade FW to previous
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10/acts/$FW_Previous$} {acts} {1234} {0} 
::USER_DEFINE::CloseTR069ACS {} 
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}  

# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Download} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {7 TRANSFER COMPLETE} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 

# Check version from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Firmware Version         :} {$Previous_Version$} 
# Check WIFI setting from CLI Command
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {SSID =} {$SSID_24G$}
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security =} {WPA2PSK}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {SSID =} {$SSID_5G$}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security =} {WPA2-PSK}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Get_Value {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[1]/div/table/tbody/tr[6]/td[2]} {::value} {10} 
if {[string first [regsub ".bin" $FW_Previous$ ""] "$::value"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {FW is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {FW is wrong}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check WIFI setting from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# 2.4G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$SSID_24G$" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# 5G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$SSID_5G$" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.DeviceInfo.SoftwareVersion}] {::value}
if {[string first [regsub ".bin" $FW_Previous$ ""] "$::value"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {FW is correct on TR069}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {FW is wrong on TR069}
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {$SSID_24G$} {WPAEncryptionModes} {AESEncryption}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {$SSID_5G$} {WPAEncryptionModes} {AESEncryption}
::USER_DEFINE::CloseTR069ACS {} 

# upgrade to latest fw
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10/acts/$Firmware$} {acts} {1234} {0} 
::USER_DEFINE::CloseTR069ACS {} 
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}  

# Check event code
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Download} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {7 TRANSFER COMPLETE} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 

# Check version from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {10} {Firmware Version         :} {$Firmware_Version$} 
# Check WIFI setting from CLI Command
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {SSID =} {$SSID_24G$}
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security =} {WPA2PSK}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {SSID =} {$SSID_5G$}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security =} {WPA2-PSK}

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Get_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[1]/div/table/tbody/tr[6]/td[2]} {::value} {10} 
if {[string first [regsub ".bin" $Firmware$ ""] "$::value"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {FW is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {FW is wrong}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check WIFI setting from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# 2.4G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$SSID_24G$" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# 5G
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$SSID_5G$" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.DeviceInfo.SoftwareVersion}] {::value}
if {[string first [regsub ".bin" $Firmware$ ""] "$::value"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {FW is correct on TR069}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {FW is wrong on TR069}
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {SSID} {$SSID_24G$} {WPAEncryptionModes} {AESEncryption}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {$SSID_5G$} {WPAEncryptionModes} {AESEncryption}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2983 Incorrect File Format/File Type > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2983," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Upload FW
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'ftp://172.202.77.10/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 1, 'Password': '1234', 'FileType': '1 Vendor Configuration File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

# Put latest fw & romfile.cfg to HFS server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP} 

# Case 1 (Upload & X 123456 test & .cfg)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': '', 'URL': 'http://172.202.77.10/acts/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 0, 'Password': '', 'FileType': 'X 123456 test'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
set ::Final_Result ""
set x [::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}]
if {[string first "-1 WebDriver" $x] == -1} {
set ::Final_Result $::Final_Result$::Result,\n
}
if {[string first "Method not supported" "$::Final_Result"] > 0 && [string first "9000" "$::Final_Result"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {Case 1 behavior is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Case 1 must return fault code 9000}
}
::WEB::WebDrv_CloseBrowser {}

# case 2 (Download & X 123456 test & .cfg)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': '', 'DelaySeconds': 0, 'TargetFileName': '', 'FailureURL': '', 'FileSize': '', 'SuccessURL': '', 'URL': 'http://172.202.77.10/acts/romfile.cfg', 'CommandKey': '1888555444333', 'Password': '', 'FileType': 'X 123456 test'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
set ::Final_Result ""
set x [::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}]
if {[string first "-1 WebDriver" $x] == -1} {
set ::Final_Result $::Final_Result$::Result,\n
}
if {[string first "Method not supported" $::Final_Result] > 0 && [string first "9000" $::Final_Result] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {Case 2 behavior is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Case 2 must return fault code 9000}
}
::WEB::WebDrv_CloseBrowser {}

# Case 3 (Upload & 2 Vendor Log File & .cfg)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Upload} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'URL': 'http://172.202.77.10/acts/romfile.cfg', 'CommandKey': '1888555444333', 'DelaySeconds': 0, 'Password': '1234', 'FileType': '2 Vendor Log File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9011'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {}

# case 4 (Download & 1 Firmware Upgrade Image & .cfg)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'DelaySeconds': 0, 'TargetFileName': '', 'FailureURL': '', 'FileSize': '', 'SuccessURL': '', 'URL': 'http://172.202.77.10/acts/romfile.cfg', 'CommandKey': '1888555444333', 'Password': '1234', 'FileType': '1 Firmware Upgrade Image'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9010'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {}

# case 5 (Download & 3 Vendor Configuration File & .bin)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': 'acts', 'DelaySeconds': 0, 'TargetFileName': '', 'FailureURL': '', 'FileSize': '', 'SuccessURL': '', 'URL': 'http://172.202.77.10/acts/$Firmware$', 'CommandKey': '1888555444333', 'Password': '1234', 'FileType': '3 Vendor Configuration File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9010'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {}

# Case 6 (Download & 3 Vendor Configuration File & .bin & TargetFileName=romfile.cfg)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {Download} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'Username': '', 'DelaySeconds': 0, 'TargetFileName': 'romfile.cfg', 'FailureURL': '', 'FileSize': '', 'SuccessURL': '', 'URL': 'http://172.202.77.10/acts/$Firmware$', 'CommandKey': '1888555444333', 'Password': '', 'FileType': '3 Vendor Configuration File'}} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# sometimes 9010, sometimes 9017
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9010'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2785 Check General Device Information > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2785," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {Manufacturer} "$Manufacturer$" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {ManufacturerOUI} "$ManufacturerOUI$" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {ModelName} "$ModelName$" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {Description} "$Description$"
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {ProductClass} "$ProductClass$"
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {SerialNumber} "$CPEID$" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {HardwareVersion} "$HardwareVersion$"
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {SoftwareVersion} "$Firmware_Version$" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {SpecVersion} "$SpecVersion$"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.DeviceInfo.UpTime}] {::value}
if {"$::value" == "" || "$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.UpTime should be non-zero or empty value}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.DeviceInfo.ProvisioningCode}] {::value}
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.DeviceInfo.ProvisioningCode should be non-zero value}
}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.DeviceInfo.} {DeviceLog} {} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-2788 Check inform event code when DUT reboot > 
# Redmine ID: 167369
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2788," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {reboot} {10} 
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}  
::CONSOLE::Wait {10} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 
<TCL_Block_End>

-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-2789 Check inform event code when ACS calls "Reboot" RPC > 
# Redmine ID: 167369
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2789," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Reboot {$CPEID$} 
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}  
::CONSOLE::Wait {100} 
::USER_DEFINE::CloseTR069ACS {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {1 BOOT} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M Reboot} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2790 Check inform event code when WAN IP change > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2790," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Connect/Disconnect WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {GPON_Button1} {10} {PASS} 
::CONSOLE::Wait {20}
::WEB::WebDrv_Click {id} {GPON_Button1} {10} {PASS} 
::CONSOLE::Wait {25}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Get WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# CPE need to send 4 VAULE CHANGE
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ConnectionRequestURL} "http://$::WAN_IP:7547$ConnReqPath$"     
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2791 ACS request ScheduleInform with 120 seconds DelaySeconds, check CPE inform message > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2791," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< ScheduleInform >" [list {$DelaySeconds=120} {$CommandKey=1234}]
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {6 CONNECTION REQUEST} 
::CONSOLE::Wait {115}
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {3 SCHEDULED} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M ScheduleInform} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {'CommandKey': '1234'} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2792 Forced Active Notification check (Inform with Event Code "4 VALUE CHANGE") > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2792," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# re-dialed pppore WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[5]/input} {10} {PASS} 
::CONSOLE::Wait {15}
::WEB::WebDrv_Click {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[5]/input} {10} {PASS} 
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
# Check CPE send 4 VALUE CHANGE
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 

# Change event code page
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetRPCMethods} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Change connection request path 
if {"$TR069_GUI_Support$" == "no"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
    ::CONSOLE::CI_Cmd_More {} {tr69 set reqpath /test} {10} 
    ::CONSOLE::CI_Cmd_More {} {tr69 set save} {10}
    ::CONSOLE::Wait {5} 
    if {"$ConnReqPath$" == ""} {
        ::CONSOLE::CI_Cmd_More {} {tr69 set reqpath ""} {10} 
        ::CONSOLE::CI_Cmd_More {} {tr69 set save} {10}
        ::CONSOLE::Wait {5} 
    } else {
        ::CONSOLE::CI_Cmd_More {} {tr69 set reqpath $ConnReqPath$} {10} 
        ::CONSOLE::CI_Cmd_More {} {tr69 set save} {10}
        ::CONSOLE::Wait {5} 
    }
} else {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Set_Value {id} {CWMP_ConnectionRequestPath} {$ConnReqPath$/Test} {20}
    ::WEB::WebDrv_Click {id} {Apply_ID} {20}
    ::CONSOLE::Wait {5}
    ::WEB::WebDrv_Set_Value {id} {CWMP_ConnectionRequestPath} {$ConnReqPath$} {20}
    ::WEB::WebDrv_Click {id} {Apply_ID} {20}
    ::CONSOLE::Wait {5}
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}     
}
# Check CPE send 4 VALUE CHANGE
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2793 Check TR-069 working well no matter Firewall is enabled or disabled > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2793," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# disable firewall 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-firewall} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {Firewall_General_OFF} {20} {PASS}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check conn_Req still work
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetRPCMethods} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {6 CONNECTION REQUEST} 

# Enable firewall
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-firewall} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {Firewall_General_ON} {20} {PASS}
::WEB::WebDrv_Click {id} {Apply_ID} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check conn_Req still work
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetRPCMethods} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {6 CONNECTION REQUEST} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2794 Check TR-069 working well when DMZ enabled > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2794," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Get LAN1 IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::LAN1_IP} 
# set DMZ
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$::LAN1_IP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check conn_Req still work
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetRPCMethods} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
set x [::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {6 CONNECTION REQUEST}]
if {[string first "FAIL" "$x"] > 0} {
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetRPCMethods} {::ret_value} 
    ::USER_DEFINE::CloseTR069ACS {}   
    ::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {6 CONNECTION REQUEST}  
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {TR069 connReq still work when DMZ enabled}
}

# set DMZ to default
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2795 Check TR-069 working well when PortForwarding rule impact Connection Request port > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2795," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Set_Value {name} {start_port} "7000" {20}
::WEB::WebDrv_Set_Value {name} {end_port} "8000" {20}
::WEB::WebDrv_Set_Value {name} {oStart} "7000" {20}
::WEB::WebDrv_Set_Value {name} {Addr} "$LAN_Subnet$.35" {20}
::WEB::WebDrv_Click {id} {PortRule_Apply} {20} {PASS}
::CONSOLE::Wait {10}
twapi::send_keys {{ENTER}}
set x [::WEB::WebDrv_Click {id} {PortRule_Cancel} {10} {PASS}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
set y [::WEB::WebDrv_Get_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]/td[4]} {::value} {10} ]
if {$::value == ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {pop-up error message success when portforwarding rule port include TR069 conn_Req port}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI should pop-up error message when portforwarding rule port include TR069 conn_Req port}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-2796 TR-069 should be configured in hidden page or CLI > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2796," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# modify TR069 setting from CLI command
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_More {} {tr69 set informInterval 70} {10} {tr69 set save} {10}
::CONSOLE::Wait {10} 
::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {PeriodicInformInterval:} {70} 

# Check TR069 value save success
if {"$TR069_GUI_Support$" == "yes"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Get_Value {id} {CWMP_PeriodInterval} {::value} {10} 
    if {"$::value" == "70"} {
        ::MISC::ACTS_Dummy_Response {PASS} {TR069 value save success}
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {TR069 value save Fail}   
    }
    ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}     
}
# modify TR069 setting from CLI command
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
::CONSOLE::CI_Cmd_More {} {tr69 set informInterval 900} {10} {tr69 set save} {10}
::CONSOLE::Wait {10} 
::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {PeriodicInformInterval:} {900} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2798 Whenever CPE's TR069 WAN interface link up, check inform for WAN interface parameters > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2798," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$PeriodInterval=3600}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Get CPE WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}

# GPV InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.ExternalIPAddress , MACAddress
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {ExternalIPAddress} "$::WAN_IP"
# if {"$DUT_MAC_END$" == "1"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {MACAddress} "$DUT_WAN_MAC2_UType2$"    
# } else {
    # ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {MACAddress} "$DUT_WAN_MAC1_UType2$"
# }
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3199 Device Summary > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3199," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.} {DeviceSummary} {$DeviceSummary$} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2802 SetParameterValues a partial path, check device will return correct fault code and fault string > 
# Bug: 2841-Spain Redmine ID:157207
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2802," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.ManagementServer.} {} {http://10.1.18.22}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {invalid parameter name} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2803 SetParameterValues a partial path, check device will return correct fault code and fault string > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2803," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.ManagementServer.} {ConnectionRequestURL} {/tr69/connReq/test}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9008} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Attempt to set a non-writable parameter} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2805 GetParameterNames a Full parameter name > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2805," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# (Chrome Browser)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
# Get IGD
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {GetParameterNames} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'NextLevel': False, 'ParameterPath': 'InternetGatewayDevice.'}} {5} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {5}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
set ::Final_Result ""
for {set ::i 1} {$::i < 3500} {incr ::i} {
  set x [::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]/div\[$::i\]" {::Result} {10}]
  if {[string first "-1 WebDriver" $x] == -1} {
    set ::Final_Result $::Final_Result$::Result,\n
  } else {
    incr ::i 3500
  }
}
::WEB::WebDrv_CloseBrowser {A1000} 
::MISC::ACTS_Dummy_Response {PASS} "$::Final_Result"

if {[string first "InternetGatewayDevice. : False" "$::Final_Result"] != -1 && [string first "InternetGatewayDevice.X_TELEFONICA_COM_WIFIPLUS. : False" "$::Final_Result"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {Get IGD Name success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Get IGD Name fail}    
}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2808 SetParameterAttributes to multiple parameters > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2808," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.PeriodicInformInterval} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.PeriodicInformInterval': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.DeviceInfo.SoftwareVersion} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.DeviceInfo.SoftwareVersion': {'AccessList': [], 'Notification': 2}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# SetParameterAttributes
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [''], 'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.ManagementServer.PeriodicInformInterval', 'AccessListChange': False}, {'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.DeviceInfo.SoftwareVersion', 'AccessListChange': False}, {'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID', 'AccessListChange': False}]} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {A1000} 

# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.PeriodicInformInterval} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.PeriodicInformInterval': {'AccessList': [], 'Notification': 2}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.DeviceInfo.SoftwareVersion} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.DeviceInfo.SoftwareVersion': {'AccessList': [], 'Notification': 2}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID': {'AccessList': [], 'Notification': 2}}} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# SetParameterAttributes (recover ori value)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [''], 'Notification': 0, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.ManagementServer.PeriodicInformInterval', 'AccessListChange': False}, {'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.DeviceInfo.SoftwareVersion', 'AccessListChange': False}, {'Notification': 0, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID', 'AccessListChange': False}]} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_CloseBrowser {A1000} 

# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.PeriodicInformInterval} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.PeriodicInformInterval': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.ParameterKey} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.ParameterKey': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# SetParameterAttributes
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[9]/a/img} {5} {PASS} 
::CONSOLE::Wait {2}
# Delete log
::WEB::WebDrv_Click {xpath} {/html/body/table[2]/tbody/tr[3]/td/input[2]} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [''], 'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.ManagementServer.PeriodicInformInterval', 'AccessListChange': False}, {'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.ManagementServer.ParameterKey', 'AccessListChange': False}, {'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID', 'AccessListChange': False}]} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {8}
# check log fault code 9009
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}
::WEB::WebDrv_CloseBrowser {A1000} 
if {[string first "9009" "$::Result"] > 0 && [string first "Notification request rejected" "$::Result"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {SPA reutrn 9009 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {SPA should return 9009}
}
::WEB::WebDrv_CloseBrowser {A1000}

# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.PeriodicInformInterval} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.PeriodicInformInterval': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.ParameterKey} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.ManagementServer.ParameterKey': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {{'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID': {'AccessList': [], 'Notification': 0}}} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2809 SetParameterAttributes a partial path to active notification which have not support active parameter > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2809," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$secondary_DNS=0.0.0.0} {$primary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.DeviceInfo.} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.} {::Before_Notification} 
::USER_DEFINE::CloseTR069ACS {} 

# SetParameterAttributes
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[9]/a/img} {5} {PASS} 
::CONSOLE::Wait {2}
# Delete log
::WEB::WebDrv_Click {xpath} {/html/body/table[2]/tbody/tr[3]/td/input[2]} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [''], 'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.DeviceInfo.', 'AccessListChange': False}]} {5} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {8}
# Change Log level & check log fault code 9009
::WEB::WebDrv_Click {xpath} {//*[@id="activescenarios"]/a[2]/img} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {log_level} {text} {Minor Event (5)} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/table[2]/tbody/tr[2]/td/input[2]} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_List_Select {name} {max_level} {text} {Minor Event (5)} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/form[1]/table/tbody/tr[2]/td[5]/input[2]} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Get_Text {xpath} {/html/body/form[2]/table/tbody/tr[4]/td[3]} {::value} {10} 
if {[string first "9009" "$::value"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} "CPE return 9009 successfully"
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "CPE should return 9009 fault code"
}
::WEB::WebDrv_CloseBrowser {A1000}

# GetParameterAttributes
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.DeviceInfo.} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.} {::After_Notification} 
::USER_DEFINE::CloseTR069ACS {} 

# Check notification not changed
if {"$::Before_Notification" == "$::After_Notification"} {
    ::MISC::ACTS_Dummy_Response {PASS} {parameter's notification is same as before}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {parameter's notification changed, it shouldn't change}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2812 AddObject or DeleteObject objects with changing ParameterKey parameter > 
# Redmine ID 167423
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2812," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Case 1 step 1-2
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {1234}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.PortMappingEnabled} {::ret_value}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {1234}
::USER_DEFINE::CloseTR069ACS {}  

# Case 2 step 3-4
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set X [::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.2.} {5678}] 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {1234}
::USER_DEFINE::CloseTR069ACS {} 

# step 5, reboot device
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

# Case 3 step 6-8
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {1234}
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {5678}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {5678}
::USER_DEFINE::CloseTR069ACS {} 

# Case 4 step 9-10
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {9012}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {5678}
::USER_DEFINE::CloseTR069ACS {} 

# step 11, Reset Device
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$secondary_DNS=0.0.0.0} {$primary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {30} 

# step 12 Check ParameterKey back to default setting
if {"$sysName$" == "GPT-2841GX4X5"} {
    if {"$Key_Account$" == "Spain"} {
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.ManagementServer.} {ParameterKey} {Axess Update parameters}
    }
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2813 AddObject or DeleteObject the object which is Not multi-instance object > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2813," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.ManagementServer.} {} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Invalid parameter name} {::ret_value} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Invalid parameter name} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2815 GetRPCMethods to get all support methods > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2815," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterValues} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {SetParameterValues} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterNames} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {SetParameterAttributes} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {GetParameterAttributes} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {AddObject} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {DeleteObject} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {Reboot} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {Download} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {Upload} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {FactoryReset} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_RPCMethods {$CPEID$} {10} {PASS} {ScheduleInform} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2816 GetParameterName with NextLevel=0 "InternetGatewayDevice." and "." > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2816," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# (Chrome Browser)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
# Get IGD NAME
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {GetParameterNames} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'NextLevel': False, 'ParameterPath': 'InternetGatewayDevice.'}} {5} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {5}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
set ::Final_Result ""
for {set ::i 1} {$::i < 3500} {incr ::i} {
  set x [::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]/div\[$::i\]" {::Result} {10}]
  if {[string first "-1 WebDriver" $x] == -1} {
    set ::Final_Result $::Final_Result$::Result,\n
  } else {
    incr ::i 3500
  }
}
::WEB::WebDrv_CloseBrowser {A1000}

if {[string first "InternetGatewayDevice.DeviceInfo. : False" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID : True" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.X_TELEFONICA_COM. : False" "$::Final_Result"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {GPN success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {GPN FAIL}
}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2817 GetParameterName with NextLevel=1 "InternetGatewayDevice." and "." > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2817," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# (Chrome Browser)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
# Get IGD NAME
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {GetParameterNames} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'NextLevel': True, 'ParameterPath': 'InternetGatewayDevice.'}} {5} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {5}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
set ::Final_Result ""
for {set ::i 1} {$::i < 3500} {incr ::i} {
  set x [::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]/div\[$::i\]" {::Result} {10}]
  if {[string first "-1 WebDriver" $x] == -1} {
    set ::Final_Result $::Final_Result$::Result,\n
  } else {
    incr ::i 3500
  }
}
::WEB::WebDrv_CloseBrowser {A1000}

if {[string first "InternetGatewayDevice.DeviceInfo. : False" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.LANDevice. : True" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.Time. : False" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.WANDevice. : True" "$::Final_Result"] > 0 || [string first "InternetGatewayDevice.X_TELEFONICA_COM. : False" "$::Final_Result"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {GPN success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {GPN FAIL}
}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2819 Set/GetParameterAttributes Notification = 0 (Notification off) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2819," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< SetParameterAttributes >" [list {$Notification=0} {$Parameter=InternetGatewayDevice.ManagementServer.PeriodicInformInterval}]
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterAttributes {$CPEID$} {InternetGatewayDevice.ManagementServer.PeriodicInformInterval} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Notification': 0} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Change tr69 setting
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_More {} {tr69 set informInterval 180} {20} {tr69 set save} {20}
::CONSOLE::Wait {180} 

# Next periodic inform can't have 4 value change
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {2 PERIODIC} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {FAIL} {4 VALUE CHANGE} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< SetParameterAttributes >" [list {$Notification=1} {$Parameter=InternetGatewayDevice.ManagementServer.PeriodicInformInterval}]

# Change tr69 setting
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_More {} {tr69 set informInterval 900} {20} {tr69 set save} {20}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2822 ScheduleInform > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2822," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=https} {$PeriodInterval=300}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# ScheduleInform
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# ScheduleInform 120 seconds
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {ScheduleInform} {5} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Set_Value {id} {params_box} {{'DelaySeconds': 120, 'CommandKey': '12345678'}} {5} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_CloseBrowser {A1000} 

# After 120 seconds, check [M ScheduleInform]
::CONSOLE::Wait {120} 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {M ScheduleInform} 
::CONSOLE::Wait {240} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {FAIL} {M ScheduleInform} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-30193 InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.SubnetMask > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-30193," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# 255.186.0.0
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {SubnetMask} {255.186.0.0}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value}
# 255.255.248.3 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {SubnetMask} {255.255.248.3}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# 255.255.255.256
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {SubnetMask} {255.255.255.256}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
# 255.255.255.0
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {SubnetMask} {255.255.255.0}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value}
# Check 255.255.255.0 can be set
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {SubnetMask} {255.255.255.0} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L2%
# +CaseStart+
# < UTP-30194 InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.Channel > 
# Axiros block internal error, can't test incorrect type
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-30194," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# # 2.4G set wrong channel value
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Channel} {36}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Channel} {test}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {'Status': '0'} {::ret_value} 
# # 5G set wrong channel value
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {1}] 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
# set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {test}]
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {FAIL} {'Status': '0'} {::ret_value} 

# # 2.4G set correct channel value
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Channel} {6}
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value}
# # 5G set correct channel value
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {40}
# ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value}
# # Check value can set & value is correct
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Channel} {6}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {40}
# ::USER_DEFINE::CloseTR069ACS {} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-30195 IPPing Diagnostics with Invalid DiagnosticsState > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-30195," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Get LAN1 IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Set ping setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# LAN client
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1} {Host} "$::lan1_ip" {NumberOfRepetitions} {5} {DiagnosticsState} {test}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 

# ACS server ip
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {Timeout} {60} {DataBlockSize} {1492} {DSCP} {0} {Interface} {} {Host} {172.202.77.11} {NumberOfRepetitions} {5} {DiagnosticsState} {12345678}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-30196 TraceRoute Diagnostics with Invalid DiagnosticsState > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-30196," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Get LAN1 IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Set TraceRoute setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# LAN client
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {DSCP} {0} {Interface} {} {Host} "$::lan1_ip" {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {abcde}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 

# ACS server ip
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {DSCP} {0} {Interface} {} {Host} "domain.pqatest.com" {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {12345678}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3009 Check Layer 2 Bridging Status > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3009," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
if {"$PROJECT$" == "2841_Spain"} {
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxBridgeEntries} {16} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxDBridgeEntries} {0} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxQBridgeEntries} {32} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxVLANEntries} {0} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxFilterEntries} {32} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MaxMarkingEntries} {32} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {BridgeNumberOfEntries} {1} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {FilterNumberOfEntries} {14} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {MarkingNumberOfEntries} {4} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.} {AvailableInterfaceNumberOfEntries} {10} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {PortNumberOfEntries} {0} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {VLANNumberOfEntries} {0} 
    ::USER_DEFINE::CloseTR069ACS {}     
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3011 Check Layer 2 Bridging Interface Configuration > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3011," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
if {"$PROJECT$" == "2841_Spain"} {
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    # ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeStandard} {802.1Q}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeEnable} {1}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeName} {test}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {VLANID} {6}

    # Check value
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Layer2Bridging.Bridge.1.BridgeKey}] {::value}
    if {"$::value" == "0" && "$::value" == "" && [string first "code" "$::value"] != -1 && [string first "yet" "$::value"] != -1} {
        ::MISC::ACTS_Dummy_Response {FAIL} "InternetGatewayDevice.Layer2Bridging.Bridge.1.BridgeKey isn't correct, value = $::value"
    } else {
        ::MISC::ACTS_Dummy_Response {PASS} "InternetGatewayDevice.Layer2Bridging.Bridge.1.BridgeKey is correct"
    }
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeStandard} {802.1Q}
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeEnable} {1}
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeStatus} {Disabled}
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {BridgeName} {test}
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Bridge.1.} {VLANID} {6}
    ::USER_DEFINE::CloseTR069ACS {}     
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3012 Check Layer 2 Bridging Filter Configuration > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3012," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Redmine ID: 
# Bug: (2841_Spain) SourceMACAddressFilterExclude & DestMACAddressFilterExclude set boolean value fail
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterEnable} {1}

# set
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterEnable} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterBridgeReference} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {ExclusivityOrder} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterInterface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {VLANIDFilter} {8} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {AdmitOnlyVLANTagged} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {EthertypeFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {EthertypeFilterExclude} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {SourceMACAddressFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {SourceMACAddressFilterExclude} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {DestMACAddressFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {DestMACAddressFilterExclude} {0} 

# Get & check
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterEnable} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterBridgeReference} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {ExclusivityOrder} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {FilterInterface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {VLANIDFilter} {8} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {AdmitOnlyVLANTagged} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {EthertypeFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {EthertypeFilterExclude} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {SourceMACAddressFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {SourceMACAddressFilterExclude} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {DestMACAddressFilterList} {01:02:03:04:05:06} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Filter.1.} {DestMACAddressFilterExclude} {0} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3013 Check Layer 2 Bridging Marking Table and Available Interface > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3013," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Check can't return fault code
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingKey} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.AvailableInterface.1.} {AvailableInterfaceKey} {0} 

# Set value
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingEnable} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingBridgeReference} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingInterface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDUntag} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDMark} {30} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDMarkOverride} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {EthernetPriorityMark} {3} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {EthernetPriorityOverride} {1} 

# Get & check value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingEnable} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingBridgeReference} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingInterface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDUntag} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDMark} {30} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {VLANIDMarkOverride} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {EthernetPriorityMark} {3} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {EthernetPriorityOverride} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.Marking.1.} {MarkingKey} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.AvailableInterface.1.} {AvailableInterfaceKey} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.AvailableInterface.1.} {InterfaceType} {LANRouterConnection} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.Layer2Bridging.AvailableInterface.1.} {InterfaceReference} {InternetGatewayDevice.LANDevice.1} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3014 Check PPPoE WAN interface's Statistics > 
# Redmine ID: 152006
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3014," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# EthernetErrorsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsSent value is wrong.}
}
# EthernetErrorsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetErrorsReceived value is wrong.}
}
# EthernetDiscardPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsSent value is wrong.}
}
# EthernetDiscardPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetDiscardPacketsReceived value is wrong.}
}
# EthernetMulticastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsSent value is wrong.}
}
# EthernetMulticastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetMulticastPacketsReceived value is wrong.}
}
# EthernetUnknownProtoPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnknownProtoPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnknownProtoPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnknownProtoPacketsReceived value is wrong.}
}
# EthernetBytesSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesSent value is wrong.}
}
# EthernetBytesReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBytesReceived value is wrong.}
}
# EthernetPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsSent value is wrong.}
}
# EthernetPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetPacketsReceived value is wrong.}
}
# EthernetUnicastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsSent value is wrong.}
}
# EthernetUnicastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetUnicastPacketsReceived value is wrong.}
}
# EthernetBroadcastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsSent value is wrong.}
}
# EthernetBroadcastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.Stats.EthernetBroadcastPacketsReceived value is wrong.}
}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3015 Check IPoE WAN interface's Statistics > 
# Redmine ID: 167438
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3015," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# Voice
# EthernetErrorsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsSent value is wrong.}
}
# EthernetErrorsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetErrorsReceived value is wrong.}
}
# EthernetDiscardPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsSent value is wrong.}
}
# EthernetDiscardPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetDiscardPacketsReceived value is wrong.}
}
# EthernetMulticastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsSent value is wrong.}
}
# EthernetMulticastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetMulticastPacketsReceived value is wrong.}
}
# EthernetUnknownProtoPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnknownProtoPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnknownProtoPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnknownProtoPacketsReceived value is wrong.}
}
# EthernetBytesSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesSent value is wrong.}
}
# EthernetBytesReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBytesReceived value is wrong.}
}
# EthernetPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsSent value is wrong.}
}
# EthernetPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetPacketsReceived value is wrong.}
}
# EthernetUnicastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsSent value is wrong.}
}
# EthernetUnicastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetUnicastPacketsReceived value is wrong.}
}
# EthernetBroadcastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsSent value is wrong.}
}
# EthernetBroadcastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.Stats.EthernetBroadcastPacketsReceived value is wrong.}
}

# IPTV
# EthernetErrorsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsSent value is wrong.}
}
# EthernetErrorsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetErrorsReceived value is wrong.}
}
# EthernetDiscardPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsSent value is wrong.}
}
# EthernetDiscardPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetDiscardPacketsReceived value is wrong.}
}
# EthernetMulticastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsSent}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsSent value is wrong.}
}
# EthernetMulticastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetMulticastPacketsReceived value is wrong.}
}
# EthernetUnknownProtoPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnknownProtoPacketsReceived}] {::value}
if {"$::value" != ""} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnknownProtoPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnknownProtoPacketsReceived value is wrong.}
}
# EthernetBytesSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesSent value is wrong.}
}
# EthernetBytesReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBytesReceived value is wrong.}
}
# EthernetPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsSent value is wrong.}
}
# EthernetPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetPacketsReceived value is wrong.}
}
# EthernetUnicastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsSent value is wrong.}
}
# EthernetUnicastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetUnicastPacketsReceived value is wrong.}
}
# EthernetBroadcastPacketsSent
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsSent}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsSent value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsSent value is wrong.}
}
# EthernetBroadcastPacketsReceived
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsReceived}] {::value}
if {"$::value" != "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsReceived value is correct.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.2.Stats.EthernetBroadcastPacketsReceived value is wrong.}
}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2811 AddObject or DeleteObject the a multi-instance object > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2811," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# AddObject
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {12345678} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {15}  
# Reboot
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
# Check enable value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# DeleteObject
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {12345678} 
::USER_DEFINE::CloseTR069ACS {} 
# Reboot
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
# Check enable value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set res [::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {0}]
::USER_DEFINE::CloseTR069ACS {} 
if {[string first "-1" "$res"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {object has been deleted}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {object isn't deleted}
}

<TCL_Block_End>

-CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-2861 9006: Invalid parameter type (associated with SetParameterValues) > 
# # BUG: 2841-Spain int parameter set string value should return 9006, but it isn't 
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2861," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# # SPA InternetGatewayDevice.DeviceInfo. (Expectation is return 9009 Invalid parameter type)
# ::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
# ::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
# ::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
# ::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
# ::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
# ::CONSOLE::Wait {2}
# # Remove history record
# ::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
# ::CONSOLE::Wait {2}
# twapi::send_keys {{ENTER}}
# ::CONSOLE::Wait {3}
# # Get IGD
# ::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterValues} {5} 
# ::WEB::WebDrv_Set_Value {id} {params_box} {{'InternetGatewayDevice.ManagementServer.PeriodicInformInterval': '!@\#*'}} {5} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
# ::CONSOLE::Wait {5}
# # Get EnvID
# ::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
# set ::IGD_Text $::EnvID
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {3}  
# ::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}
# ::WEB::WebDrv_CloseBrowser {A1000} 
# ::MISC::ACTS_Dummy_Response {PASS} "$::Result"
# if {[string first "9009" "$::Result"] > 0 && [string first "Notification request rejected" "$::Result"] > 0} {
#     ::MISC::ACTS_Dummy_Response {PASS} {SPV InternetGatewayDevice.ManagementServer.PeriodicInformInterval a string value, reutrn 9006 success}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {SPV InternetGatewayDevice.ManagementServer.PeriodicInformInterval a string value, should return 9006}
# }
# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2862 9009: Notification request rejected (associated with SetParameterAttributes method) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2862," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# SPA InternetGatewayDevice.DeviceInfo.UpTime to 2 (Expectation is return 9009 Notification Request Rejected)
::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
::CONSOLE::Wait {2} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
::CONSOLE::Wait {2}
# Remove history record
::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
# Get IGD
::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [], 'Notification': 2, 'NotificationChange': True, 'Name': 'InternetGatewayDevice.DeviceInfo.UpTime', 'AccessListChange': False}]} {5} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
::CONSOLE::Wait {5}
# Get EnvID
::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
set ::IGD_Text $::EnvID
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
::CONSOLE::Wait {3}  
::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}
::WEB::WebDrv_CloseBrowser {A1000} 
if {[string first "9009" "$::Result"] > 0 && [string first "Notification request rejected" "$::Result"] > 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {SPA InternetGatewayDevice.DeviceInfo.UpTime reutrn 9009}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {SPA InternetGatewayDevice.DeviceInfo.UpTime should return 9009}
}
::CONSOLE::Wait {20} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2863 9010: Download Failure > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2863," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://111111} {admin} {1234} {0} 
::CONSOLE::Wait {30} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9010} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Download failure} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-2864 Multiple Fault Code 9003 + 9007 + 9007 > 
# # Bug: 2841-Spain doesn't return 9003 & 9007
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-2864," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# # InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.AutoChannelEnable
# ::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
# ::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
# ::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
# ::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
# ::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
# ::CONSOLE::Wait {2}
# # Remove history record
# ::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
# ::CONSOLE::Wait {2}
# twapi::send_keys {{ENTER}}
# ::CONSOLE::Wait {3}
# # Get IGD
# ::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
# ::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [], 'Notification': 'test', 'NotificationChange': True, 'Name': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.AutoChannelEnable', 'AccessListChange': False}]} {5} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
# ::CONSOLE::Wait {5}
# # Get EnvID
# ::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
# set ::IGD_Text $::EnvID
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {3}  
# ::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}
# ::WEB::WebDrv_CloseBrowser {A1000} 
# if {[string first "9003" "$::Result"] > 0 && [string first "9007" "$::Result"] > 0} {
#     ::MISC::ACTS_Dummy_Response {PASS} {SPA InternetGatewayDevice.DeviceInfo. reutrn 9003 & 9007}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} "SPA InternetGatewayDevice.DeviceInfo. should return 9003 & 9009, current resutl: $::Result"
# }

# # InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.Enable
# ::WEB::WebDrv_OpenWebSite {$ACSWEB$} {A1000} {No} {No} 
# ::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {10} 
# ::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {10} 
# ::WEB::WebDrv_Click {name} {submit_button} {10} {PASS} 
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_menu} {10}
# ::WEB::WebDrv_Click {linkText} {CPEManager} {10} {PASS}
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::WEB::WebDrv_Switch_To_Frame {name} {manage_main} {10}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Managed CPEs} {5} {PASS} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {xpath} {/html/body/div[5]/table/tbody/tr[2]/td[2]/table/tbody/tr/td[5]/a} {5} {PASS} 
# ::CONSOLE::Wait {2}
# # Remove history record
# ::WEB::WebDrv_Click {id} {btn_del_ajax} {10} {PASS} 
# ::CONSOLE::Wait {2}
# twapi::send_keys {{ENTER}}
# ::CONSOLE::Wait {3}
# # Get IGD
# ::WEB::WebDrv_List_Select {name} {methodName} {option_value} {SetParameterAttributes} {5} 
# ::WEB::WebDrv_Set_Value {id} {params_box} {[{'AccessList': [], 'Notification': 'test', 'NotificationChange': True, 'Name': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.Enable', 'AccessListChange': False}]} {5} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {id} {btn_run_ajax_now} {10} {PASS} 
# ::CONSOLE::Wait {5}
# # Get EnvID
# ::WEB::WebDrv_Get_Text {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[5]} {::EnvID} {10} 
# set ::IGD_Text $::EnvID
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {2} 
# ::WEB::WebDrv_Click {xpath} {//*[@id="finishedscenarios"]/table/tbody/tr/td[3]/img[2]} {10} {PASS} 
# ::CONSOLE::Wait {3}  
# ::WEB::WebDrv_Get_Text {xpath} "//*\[@id=\"lres$::IGD_Text\"\]" {::Result} {10}
# ::WEB::WebDrv_CloseBrowser {A1000} 
# if {[string first "9003" "$::Result"] > 0 && [string first "9007" "$::Result"] > 0} {
#     ::MISC::ACTS_Dummy_Response {PASS} {SPA InternetGatewayDevice.DeviceInfo. reutrn 9003 & 9007}
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} "SPA InternetGatewayDevice.DeviceInfo. should return 9003 & 9007, current resutl: $::Result"
# }
# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2866 9011: Upload failure > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2866," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Upload {$CPEID$} {1 Firmware Upgrade Image} {http://11111111111111} {} {} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'code': '9011', 'detail': 'Upload failure'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2867 9012: File transfer server authentication failure > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2867," "$AA_Case$"] == -1} {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Put FW to Apache server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

# Upload with incorrect Auth username & pwd (file server)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Upload {$CPEID$} {2 Vendor Log File} {http://172.205.77.11:9090/file_auth/test.log} {incorrect_user} {incorrect_pwd} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# Download with incorrect Auth username & pwd (file server)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.205.77.11:9090/file_auth/$Firmware$} {incorrect_user} {incorrect_pwd} {0} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9012'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2868 9017: Download failure: unable to complete download > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2868," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Put FW to Apache server
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.205.77.11} {acts} {1234}
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$} {60}
::CONSOLE::Close_Shell {Shell_FTP}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {cd /var/www/html/file_auth} {60}
::CONSOLE::CI_Cmd_More {} {chmod 777 $Firmware$} {60}

# Download FW
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.205.77.11:9090/file_auth/$Firmware$} {acts} {1234} {0} 
::CONSOLE::Wait {3} 
# Power off
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}  
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
}
::USER_DEFINE::CloseTR069ACS {} 

# power-on CPE
::CONSOLE::Wait {5} 
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {20}

# 9017
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069Get_and_Check_TransferComplete {$CPEID$} {PASS} {'FaultCode': '9017', 'FaultString': 'File transfer failure: unable to complete download'} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2870 Set multiple parameters which include one of them with incorrect value, check DUT response > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2870," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# 2.4G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {20}

# 2.4G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Enable} {0} {SSID} {PRUEBA_DISABLED} {BeaconAdvertisementEnabled} {1} {Channel} {64} {IEEE11iEncryptionModes} {AESEncryption} {PreSharedKey.1.PreSharedKey} {clavealterwpa2}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.Channel', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
# {X_TELEFONICA-ES_Bandwidth} {20MHz}
::USER_DEFINE::CloseTR069ACS {} 

# 5G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0} {SSID} {PRUEBA_DISABLED} {BeaconAdvertisementEnabled} {1} {Channel} {8} {IEEE11iEncryptionModes} {AESEncryption} {PreSharedKey.1.PreSharedKey} {clavealterwpa2}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.Channel', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
# {X_TELEFONICA-ES_Bandwidth} {40MHz}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2871 Configure LAN interface with incorrect parameter value, check CPE return correct Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2871," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Static
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} {1} {IPInterfaceIPAddress} {pepe} {IPInterfaceSubnetMask} {255.255.255.0} {IPInterfaceAddressingType} {Static}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.IPInterfaceIPAddress', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# DHCP
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.} {Enable} {1} {IPInterfaceIPAddress} {$LAN_Subnet$.1} {IPInterfaceSubnetMask} {pepe} {IPInterfaceAddressingType} {DHCP}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1.IPInterfaceSubnetMask', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2872 Configure incorrect 2.4G WLAN channel value, check CPE return Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2872," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# set WLAN 2.4G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 2.4G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Enable} {1} {Channel} {100}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.Channel', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
# Check Channel not change
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {Channel} {8} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2873 Configure incorrect 5G WLAN channel value, check CPE return Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2873," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# set WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=48} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0} {SSID} {SSID_PLUS_DISABLED} {BeaconAdvertisementEnabled} {1} {Channel} {6} {IEEE11iEncryptionModes} {AESEncryption} {PreSharedKey.1.PreSharedKey} {qwertyuiop}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.Channel', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 

# Check Channel not change
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {48} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2874 Change Security to WEP or WPA-PSK when WPS is enabled, check CPE return Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2874," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.} {BeaconType} {Basic} {BasicEncryptionModes} {WEPEncryption}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.BeaconType', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}, {'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.BasicEncryptionModes', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2875 Configure Invalid Security mode if device is not supported, check CPE return Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2875," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# set WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=48} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {MOVISTAR_PLUS_77EF} {BeaconAdvertisementEnabled} {1} {AutoChannelEnable} {1} {BasicEncryptionModes} {WEPEncryption} {BeaconType} {Basic} {WEPKey.1.WEPKey} {31323334353637383930646566} {WEPKey.2.WEPKey} {31323334353637383930646566} {WEPKey.3.WEPKey} {31323334353637383930646566} {WEPKey.4.WEPKey} {31323334353637383930646566} {WPS.Enable} {0}]
# BasicEncryptionModes return 9007
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "'faultcode': 'Client', 'code': '9003', 'detail': 'Invalid arguments', 'spv_fault': \[{'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.WEPKey.4.WEPKey', 'FaultCode': '9005', 'FaultString': 'Invalid parameter name'}, {'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.WEPKey.3.WEPKey', 'FaultCode': '9005', 'FaultString': 'Invalid parameter name'}, {'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.BeaconType', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}, {'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.WEPKey.2.WEPKey', 'FaultCode': '9005', 'FaultString': 'Invalid parameter name'}, {'ParameterName': 'InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.BasicEncryptionModes', 'FaultCode': '9007', 'FaultString': 'Invalid parameter value'}\]" {::ret_value} 

# Check Channel not change
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {BasicEncryptionModes} {None} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-30197 Trying to "Add Object" to a not multi-instance object, check CPE return Fault code > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-30197," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.ManagementServer.} {12345678} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "{'faultcode': 'Client', 'code': '9005', 'detail': 'Invalid parameter name'}" {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2829 AddObject - different paramters > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2829," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}

::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {NextLevel} {True} {'InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.6.': True} 

::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {NextLevel} {True} {'InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.5.': True} 

::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {NextLevel} {True} {'InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.4.': True} 

::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {NextLevel} {True} {'InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.10.': True} 
::USER_DEFINE::CloseTR069ACS {} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2830 AddObject - wrong parameter name > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2830," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
set x [::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {Invalid parameter name} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2876 Check default setting in TR-069 parameter > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2876," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::MISC::ACTS_Dummy_Response {PASS} {$CPE_ACS_User$}
if {"$TR069_GUI_Support$" == "no"} {
    # Check from CLI
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=cli}]
    ::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Auto-Configuration Server URL:} {$CPE_ACS_URL$} {Username:} {$CPE_ACS_User$} {Password:} {$CPE_ACS_Pwd$} {ConnectionRequestUsername:} {$CPE_ACS_Conn_User$} {ConnectionRequestPassword:} {$CPE_ACS_Conn_Pwd$}
    # recover env
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}          
} else {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
    ::CONSOLE::Wait {3} 
    ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {$CPE_ACS_URL$} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {CWMP_ACSUserName} {$CPE_ACS_User$} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {CWMP_ConnectionRequestUserName} {$CPE_ACS_Conn_User$} {10} {PASS} {full} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
    # Check from CLI
    ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
    ::CONSOLE::CI_Cmd_Scan {} {tr69 display} {10} {Auto-Configuration Server URL:} {$CPE_ACS_URL$} {Username:} {$CPE_ACS_User$} {Password:} {$CPE_ACS_Pwd$} {ConnectionRequestUsername:} {$CPE_ACS_Conn_User$} {ConnectionRequestPassword:} {$CPE_ACS_Conn_Pwd$}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000}    
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2877 Check supported profiles in DeviceSummary > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2877," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Get summary
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.} {DeviceSummary} {$DeviceSummary$}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2831 AddObject - combination test > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2831," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Add DHCP pool object node
set ::Pool_1 [expr $DHCP_Pool_Number$ + 1]
set ::Pool_2 [expr $DHCP_Pool_Number$ + 2]
# Add object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# static route
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Layer3Forwarding.Forwarding.} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.Layer3Forwarding.Forwarding.1.} {::ret_value} 
# Portforwarding
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {::ret_value} 
# ::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_Firewall.Firewall.1.Rule.} {}
# VoIP
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.EventSubscribe.1.} {::ret_value} 
# LAN dhcp pool
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.$::Pool_1." {::ret_value} 
# return 9005 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
# LAN dhcp pool
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.$::Pool_2." {::ret_value} 
# return 9005 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.} {}
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9005} {::ret_value} 
# DeleteObject
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.Layer3Forwarding.Forwarding.1.} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {} 
::USER_DEFINE::TR069DeleteObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.EventSubscribe.1.} {}
::USER_DEFINE::TR069DeleteObject {$CPEID$} "InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.$::Pool_1." {}  
::USER_DEFINE::TR069DeleteObject {$CPEID$} "InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.$::Pool_2." {}  
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

<<**************************************** VoIP ****************************************>> 
%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- VoIP ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2232 Verify Server addresss use special character > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2232," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {voip} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {voip-sip} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {editBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# MainSIPSerAddress set special character (can't set success)
::WEB::WebDrv_Set_Value {id} {MainSIPSerAddress} "@#$#(" {20}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {2} 
set res [::WEB::WebDrv_Set_Value {id} {MainSIPSerAddress} "@#$#(" {20}]
if {[string first "-1" "$res"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {When MainSIPSerAddress input special character, GUI pop up error message successfully.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {When MainSIPSerAddress input special character, GUI must pop up error message!}
}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {LTECancleBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {id} {editBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# RegisterSerAddress set special character (can't set success)
::WEB::WebDrv_Set_Value {id} {RegisterSerAddress} "@#$#(" {20}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {2}
set res [::WEB::WebDrv_Set_Value {id} {RegisterSerAddress} "@#$#(" {20}]
if {[string first "-1" "$res"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {When RegisterSerAddress input special character, GUI pop up error message successfully.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {When RegisterSerAddress input special character, GUI must pop up error message!}
}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {LTECancleBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {id} {editBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Set long domain (should set success)
::WEB::WebDrv_Set_Value {id} {MainSIPSerAddress} "voip.ims.mnc007.mcc722.3gppnetwork.org" {20}
::WEB::WebDrv_Set_Value {id} {RegisterSerAddress} "voip.ims.mnc007.mcc722.3gppnetwork.org" {20}
::WEB::WebDrv_Set_Value {id} {SIPSerDomain} "voip.ims.mnc007.mcc722.3gppnetwork.org" {20}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Get_Text {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[3]} {::value1} {10} 
::WEB::WebDrv_Get_Text {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[4]} {::value2} {10} 
::WEB::WebDrv_Get_Text {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[5]} {::value3} {10} 
if {"$::value1" == "voip.ims.mnc007.mcc722.3gppnetwork.org" && "$::value2" == "voip.ims.mnc007.mcc722.3gppnetwork.org" && "$::value3" == "voip.ims.mnc007.mcc722.3gppnetwork.org"} {
    ::MISC::ACTS_Dummy_Response {PASS} {long domain set successfully.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {long domain should set successfully.}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2233 Verify Active SIP account with special character > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2233," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {voip} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {voip-sip} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
::WEB::WebDrv_Click {id} {t0} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {editBtn} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Set_CheckBox {id} {sipAccount_active} {true} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {sipAccountNum} "@#$#(" {20}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {3} 
set res [::WEB::WebDrv_Set_Value {id} {sipAccountNum} "@#$#(" {20}]
if {[string first "-1" "$res"] != -1} {
    ::MISC::ACTS_Dummy_Response {PASS} {When input special character, GUI pop up error message successfully.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {When input special character, GUI must pop up error message!}
}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {sipAccountNum} "+886928123123" {20}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Get_Text {xpath} {//*[@id="broadband_list"]/table/tbody/tr[2]/td[5]} {::value} {10} 
if {"$::value" == "+886928123123"} {
    ::MISC::ACTS_Dummy_Response {PASS} {+ symbol set successfully.}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {+ symbol should set successfully.}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2235 Verify SIP account SIP Number/User Name/Password support "Backspace" key to delele characters > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2235," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {voip} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {voip-sip} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
::WEB::WebDrv_Click {id} {t0} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {editBtn} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Set_CheckBox {id} {sipAccount_active} {true} {10} {PASS} 
::CONSOLE::Wait {3} 
# Check Backspace can work
::WEB::WebDrv_Set_Value {id} {sipAccountNum} "+886928123199" {20}
::CONSOLE::Wait {1} 
twapi::send_keys {{BACK}}
# Check Backspace can work
::WEB::WebDrv_Set_Value {id} {userName} "1234567890" {20}
::CONSOLE::Wait {1} 
twapi::send_keys {{BACK}}
# Check Backspace can work
::WEB::WebDrv_Set_Value {id} {passWord} "1234567890" {20}
::CONSOLE::Wait {1} 
twapi::send_keys {{BACK}}
::WEB::WebDrv_Click {id} {LTESaveBtn} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value is deleted one character or number
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# number
::CONSOLE::CI_Cmd_Scan {} {voice show} {10} {Extension           :} {+88692812319} 
::CONSOLE::CI_Cmd_Scan_Fail {} {voice show} {10} {Extension           :} {+886928123199} 
# AuthName
::CONSOLE::CI_Cmd_Scan {} {voice show} {10} {AuthName            :} {123456789} 
::CONSOLE::CI_Cmd_Scan_Fail {} {voice show} {10} {AuthName            :} {1234567890} 
# AuthPwd
::CONSOLE::CI_Cmd_Scan {} {voice show} {10} {AuthPwd             :} {123456789} 
::CONSOLE::CI_Cmd_Scan_Fail {} {voice show} {10} {AuthPwd             :} {1234567890} 

<TCL_Block_End>

-CaseEnd-

<<**************************************** Qos *****************************************>> 
%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- Qos ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1983 MAC Address validation check > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1983," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "Test_Class_2" {10} 
::WEB::WebDrv_Set_Value {id} {SrcMACTxt} {11:22:ab} {10} 
::WEB::WebDrv_Click {id} {SrcMacActiveCheck} {10} {PASS} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
# Check GUI pop up error message (Src)
set x [::WEB::WebDrv_Get_Value {id} {SrcMACTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when SrcMac set invalid value}
}
::CONSOLE::Wait {10} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
# disable Src Mac
::WEB::WebDrv_Click {id} {SrcMacActiveCheck} {10} {PASS} 
# Enable Dest Mac
::WEB::WebDrv_Set_Value {id} {DestMACTxt} {11:22:ab} {10}
::WEB::WebDrv_Click {id} {DestMacActiveCheck} {10} {PASS} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
# Check GUI pop up error message (Dest)
set x [::WEB::WebDrv_Get_Value {id} {SrcMACTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when DestMac set invalid value}
}
::CONSOLE::Wait {10} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
# ::WEB::WebDrv_Switch_To_Window {} 
# ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[1]} {10} {PASS} 
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1985 DSCP validation check > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1985," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set and check input invalid port range should pop up error message
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "Test_Class_1" {10} 
::WEB::WebDrv_Click {id} {EtherTypeActiveCheck} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {PPPoE_DISC (0x8863)} {10} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {id} {DSCPActiveCheck} {10} {PASS} 
# input DSCP(criteria configuration part) 64
::WEB::WebDrv_Set_Value {id} {DSCPTxt} {64} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {DSCPTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when DSCP(criteria configuration part) set invalid value}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
# disable
::WEB::WebDrv_Click {id} {DSCPActiveCheck} {10} {PASS} 
# input DSCP(packet modification part) 64
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {64} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {dscpValTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when DSCP(packet modification part) set invalid value}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
# ::WEB::WebDrv_Switch_To_Window {} 
# ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[1]} {10} {PASS} 
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-1987 Check Class name can accept Max 15 Characters and no special characters > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1987," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Add Qos class name with special char and exceed 15 char
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "`~!@\#$%^&*()-={}" {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "\[\];:'<>,.?/|*" {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# 2841-Spain max is 32
::WEB::WebDrv_Set_Value {id} {classNameTxt} "123456789012345678901234567890123" {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check can't create class rule
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Class Setup} {$Index=3} {$Check_Str_Arr=`~!@\#$%^&*()-={}++123456789012345678901234567890123++\[\];:'<>,.?/|*} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2000 Condition : from interface = LAN1 Target : mark "DSCP" value Check : DSCP value > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2000," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ping -Q 200 172.202.77.1 -> (dscp=50, cmd:50*4=200)
# ip.dsfield.dscp == 63 && icmp
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {63} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {30} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 63
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-2000_Qos.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.202.77.1} {10} 
::CONSOLE::Wait {35}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=UTP-2000_Qos.pcap} {$filter=ip.dsfield.dscp == 63 && icmp} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="deleteBtn"]} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2001 Condition : from interface = LAN2 Target : unchanged "DSCP" value Check : DSCP value > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2001," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ping -Q 252 172.202.77.1 -> (dscp=63, cmd:63*4=252)
# ip.dsfield.dscp == 63 && icmp
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {30} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 63
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-2001_Qos.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 252 -c 5 172.202.77.1} {10} 
::CONSOLE::Wait {35}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=UTP-2001_Qos.pcap} {$filter=ip.dsfield.dscp == 63 && icmp} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="deleteBtn"]} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2009 Condition : from interface = LAN / Moca / HPNA / 5th ETH LAN Target : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2009," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {UDP} {10} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {15} 
::WEB::WebDrv_CloseBrowser {A1000} 

# renew WKS_IP
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2009_Qos_LAN1.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8888 -S 0xB8 -u -l 300 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2009_Qos_LAN1.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 
# LAN2
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2009_Qos_LAN2.pcap} {$duration=30} {$filter=udp}]
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8888 -S 0xB8 -u -l 300 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2009_Qos_LAN2.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 
# DMZ
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2009_Qos_DMZ.pcap} {$duration=30} {$filter=udp}]
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8888 -S 0xB8 -u -l 300 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2009_Qos_DMZ.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="deleteBtn"]} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2010 Condition : from interface = Local Target : match rule Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2010," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ping -Q 200 172.202.77.1 -> (dscp=50, cmd:50*4=200)
# ip.dsfield.dscp == 20 && icmp
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {Local} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {30} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-2010_Qos.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.202.77.1} {10} 
::CONSOLE::Wait {35}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=UTP-2010_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && icmp} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="deleteBtn"]} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2019 Condition : from interface = LAN Target : set / exclude Destination Port Rang > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2019," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {UDP} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# Dest port enable & set 1000
::WEB::WebDrv_Set_CheckBox {id} {DestPortActiveCheck} {true} {10} {PASS}
::WEB::WebDrv_Set_Value {id} {DestPortTxt} {1000} {10} 
::WEB::WebDrv_Set_Value {id} {DestPortRangeTxt} {1000} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2019_Qos.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2019_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# DestPort exclude enable
::WEB::WebDrv_Set_CheckBox {id} {DestPortExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2019_Qos_2.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2019_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46} {$judge=PASS}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2022 Condition : from interface = LAN Target : set / exclude UDP traffic Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2022," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {UDP} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2022_Qos.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2022_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# Protocol exclude enable
::WEB::WebDrv_Set_CheckBox {id} {ProtoExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2022_Qos_2.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2022_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46} {$judge=PASS}] 

# Check dscp value is change to 20 , tcp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2022_Qos_3.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2022_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Check dscp value is change to 20 , icmp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2022_Qos_4.pcap} {$duration=30}]
# LAN1
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 184 -c 5 172.205.77.11} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2022_Qos_4.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2023 Condition : from interface = LAN Target : set / exclude TCP traffic Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2023," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {TCP} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2023_Qos.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2023_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# Protocol exclude enable
::WEB::WebDrv_Set_CheckBox {id} {ProtoExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , tcp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2023_Qos_2.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2023_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46} {$judge=PASS}] 

# Check dscp value is change to 20 , udp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2023_Qos_3.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2023_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Check dscp value is change to 20 , icmp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2023_Qos_4.pcap} {$duration=30}]
# LAN1
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 184 -c 5 172.205.77.11} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2023_Qos_4.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2026 Condition : from interface = LAN Target : set / exclude IP user defined Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2026," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {User defined} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {UserDefinedProtoTxt} {17} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2026_Qos.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2026_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# Protocol exclude enable
::WEB::WebDrv_Set_CheckBox {id} {ProtoExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2026_Qos_2.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2026_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46} {$judge=PASS}] 

# Check dscp value is change to 20 , tcp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2026_Qos_3.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2026_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Check dscp value is change to 20 , icmp
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2026_Qos_4.pcap} {$duration=30}]
# LAN1
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 184 -c 5 172.205.77.11} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2026_Qos_4.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=PASS}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2027 Condition : from interface = LAN Target : set / exclude IP packet length Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2027," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {UDP} {10} 
# Packet length
::WEB::WebDrv_Set_CheckBox {id} {IPLengthActiveCheck} {true} {10} {PASS} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {IPLengthMinTxt} {400} {10} 
::WEB::WebDrv_Set_Value {id} {IPLengthMaxTxt} {600} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, send packet 512, DSCP 46
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2027_Qos.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -l 512 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2027_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && data.len == 512} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# Packet Length exclude enable
::WEB::WebDrv_Set_CheckBox {id} {IpLengthExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp & packet length 512 & DSCP 46
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2027_Qos_2.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -l 512 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2027_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46 && data.len == 512} {$judge=PASS}] 

# Check dscp value is change to 20 , udp & packet length 1024 & DSCP 46
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2027_Qos_3.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -l 1024 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2027_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20 && data.len == 1024} {$judge=PASS}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2028 Condition : from interface = LAN Target : set / exclude match DCSP Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2028," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {UDP} {10} 
# send DSCP 46
::WEB::WebDrv_Set_CheckBox {id} {DSCPActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {DSCPTxt} {46} {10} 
# Mark DSCP 20
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Get WKS_IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2028_Qos.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2028_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# DSCP exclude enable
::WEB::WebDrv_Set_CheckBox {id} {DSCPExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2028_Qos_2.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8000 -S 0xB8 -u -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2028_Qos_2.pcap} {$filter=ip.dsfield.dscp == 46} {$judge=pass}] 

# Check dscp value is change to 20(send packet is 44) , udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2028_Qos_3.pcap} {$duration=30} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8000 -S 0xB0 -u -k 10} {10} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8000} {s} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2028_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2029 Condition : from interface = LAN Target : set / exclude TCP ACK traffic Check : match rule > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2029," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 55
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {TCP} {10} 
# Mark DSCP 55
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {55} {10} 
# ACK enable
::WEB::WebDrv_Set_CheckBox {id} {TCPACKActiveCheck} {true} {10} {PASS} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Get WKS_IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP} 

# set NAT rule
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true}  {$srv_ip=$::lan1_ip} {$start_port=8000} {$end_port=8000} {$open_start=8000}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2029_Qos.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {8000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} "iperf3 -c $::WAN_IP -p 8000 -S 0xB8 -k 10" {10}
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {8000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2029_Qos.pcap} {$filter=ip.dsfield.dscp == 55 && tcp.flags == 0x010} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# TCP ACK exclude enable
::WEB::WebDrv_Set_CheckBox {id} {TCPACKExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000}

# Check dscp value is still 46 , udp packet can't send to NAT success so change to use WAN_WKS
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2029_Qos_2.pcap} {$duration=30} {$filter=tcp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {LAN1_WKS} {8000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} "iperf3 -c $::WAN_IP -p 8000 -S 0xB8 -k 10" {10}
::CONSOLE::Stop_WKS_iPerf3_Server {LAN1_WKS} {8000} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2029_Qos_2.pcap} {$filter=ip.dsfield.dscp == 55 && tcp.flags == 0x010} {$judge=FAIL}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1998 Delete some Queue setup check the DUT still can work well > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1998," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# D:/Report/2742_Spain/ , create project folder
set f [file exist $LogPath$]
if {"$f" == "0"} {
  set path [split "$LogPath$" "/"]
  set folder "[lindex $path 0]/[lindex $path 1]/"
  for {set i 2} {$i < [expr [llength $path]-1]} {incr i} {  
    append folder [lindex $path $i]/
    set f [file exist $folder]
    if {"$f" == "0"} {
        file mkdir $folder
    }
  }
}
::CONSOLE::Log_Start "$LogPath$/UTP-1998.log"

# Add Queue 10 rule
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
for {set ::i 1} {$::i < 9} {incr ::i} {
    ::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Window {} 
    ::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
    ::WEB::WebDrv_Set_Value {id} {QueueNameTxt} "q_$::i" {10} 
    ::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
    ::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
    ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
    ::CONSOLE::Wait {6} 
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
}
::WEB::WebDrv_CloseBrowser {A1000} 

# Delete some queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
for {set ::j 1} {$::j < 4} {incr ::j} {
    ::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
    ::CONSOLE::Wait {2}
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {7}
}
::WEB::WebDrv_CloseBrowser {A1000} 

# Check if reboot?
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$UTP-1998.log} {$Check_String=Hit any key to stop autoboot} {$Result=FAIL}]

# back to default log file
::CONSOLE::Log_Start "$::nbp1f2txt2\\$::ReportFolderName\\$::Excute_Time\_LocalCOM_1998.txt"

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1999 Clean all Queue setup check the DUT still can work well > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1999," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::CONSOLE::Log_Start "$LogPath$UTP-1999.log"

# Delete all queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
for {set ::i 1} {$::i < 6} {incr ::i} {
    ::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
    ::CONSOLE::Wait {2}
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {7}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check if reboot?
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$UTP-1999.log} {$Check_String=Hit any key to stop autoboot} {$Result=FAIL}]

# back to default log file
::CONSOLE::Log_Start "$::nbp1f2txt2\\$::ReportFolderName\\$::Excute_Time\_LocalCOM_1999.txt"

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1997 Check add Max Queue for Upstream and verify all queue can work correctly > 
# Note: Qos's packet length rule is "ip.len", iperf udp packet length need to increase 28
# BUG: all rule can't work (expecatation: send 301-308 length packets, should mark DSCP 20)
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1997," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Add Queue 8 Queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
for {set ::i 1} {$::i < 9} {incr ::i} {
    ::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Window {} 
    ::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
    ::WEB::WebDrv_Set_Value {id} {QueueNameTxt} "q_$::i" {10} 
    ::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
    ::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
    ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
    ::CONSOLE::Wait {6} 
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
}
# Create Class rule for each Queue
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
for {set ::i 1} {$::i < 9} {incr ::i} {
    set ::length [expr $::i + 300 + 28]
    ::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
    ::CONSOLE::Wait {2}
    ::WEB::WebDrv_Switch_To_Window {} 
    # Active check box
    ::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
    # class name
    ::WEB::WebDrv_Set_Value {id} {classNameTxt} "class_$::i" {10} 
    # From Interface
    ::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
    ::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
    # Ether Type
    ::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
    ::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
    # Packet length
    ::WEB::WebDrv_Set_CheckBox {id} {IPLengthActiveCheck} {true} {10} {PASS} 
    ::CONSOLE::Wait {1} 
    ::WEB::WebDrv_Set_Value {id} {IPLengthMinTxt} $::length {10} 
    ::WEB::WebDrv_Set_Value {id} {IPLengthMaxTxt} $::length {10} 
    # Mark DSCP 20
    ::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
    ::CONSOLE::Wait {1} 
    ::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
    # select queue
    ::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} "$::i" {10} 
    # Apply
    ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
    ::CONSOLE::Wait {5}     
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
}
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, send packet 301-308, DSCP 46 (Check all rule can work)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-1997_Qos.pcap} {$duration=80} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
for {set ::i 1} {$::i < 9} {incr ::i} {
    set ::length [expr $::i + 300]
    ::CONSOLE::CI_Cmd_More {} "iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -l $::length -k 10" {10}
    ::CONSOLE::Wait {3}
} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {60} 
for {set ::i 1} {$::i < 9} {incr ::i} {
    # Qos's rule is "ip.len", iperf udp packet length need to increase 28
    ::MISC::ACTS_Dummy_Response {WARNING} "Queue_$::i, rule_$::i"
    set ::length [expr $::i + 300 + 28]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-1997_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && ip.len == $::length} {$judge=pass}] 
} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {sys atbr} {10}
::CONSOLE::Wait {20} 

if {"$use_shield_box$" == "false"} {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
} else {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
}
::CONSOLE::Wait {20}
::CONSOLE::Local
::CONSOLE::Wait_String {360} {$Reboot_String$} {PASS}
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {ifconfig} {10} {sys atbr} {10}
::CONSOLE::Wait_String {360} {$Reboot_String$} {PASS}
::CONSOLE::Wait {60} 

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2040 Check add MAX 32 rules and apply. Verify all rules are added > 
# Note: Qos's rule is "ip.len", iperf udp packet length need to increase 28
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2040," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# ip.dsfield.dscp == 20
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}

# Create Class rule max 32
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
for {set ::i 1} {$::i < 33} {incr ::i} {
    set ::length [expr $::i + 300 + 28]
    ::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
    ::CONSOLE::Wait {2}
    ::WEB::WebDrv_Switch_To_Window {} 
    # Active check box
    ::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
    # class name
    ::WEB::WebDrv_Set_Value {id} {classNameTxt} "class_$::i" {10} 
    # From Interface
    ::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
    ::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllLAN} {10} 
    # Ether Type
    ::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
    ::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
    # Packet length
    ::WEB::WebDrv_Set_CheckBox {id} {IPLengthActiveCheck} {true} {10} {PASS} 
    ::CONSOLE::Wait {1} 
    ::WEB::WebDrv_Set_Value {id} {IPLengthMinTxt} $::length {10} 
    ::WEB::WebDrv_Set_Value {id} {IPLengthMaxTxt} $::length {10} 
    # Mark DSCP 20
    ::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
    ::CONSOLE::Wait {1} 
    ::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
    # select queue
    ::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
    # Apply
    ::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
    ::CONSOLE::Wait {5}     
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20, send packet 301-332, DSCP 46
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2040_Qos.pcap} {$duration=200} {$filter=udp}]
# LAN1
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
for {set ::i 1} {$::i < 33} {incr ::i} {
    set ::length [expr $::i + 300]
    ::CONSOLE::CI_Cmd_More {} "iperf3 -c 172.205.77.11 -p 1000 -S 0xB8 -u -l $::length -k 10" {10}
    ::CONSOLE::Wait {3}
} 
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {1000} {} 
::CONSOLE::Wait {120} 
for {set ::i 1} {$::i < 33} {incr ::i} {
    ::MISC::ACTS_Dummy_Response {WARNING} "rule $::i"
    set ::length [expr $::i + 300 + 28]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2040_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && ip.len == $::length} {$judge=pass}] 
} 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
for {set j 1} {$j < 33} {incr j} {
    # Delete class
    ::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
    ::CONSOLE::Wait {2}
    twapi::send_keys {{ENTER}}
    ::CONSOLE::Wait {5}
}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {sys atbr} {10}
::CONSOLE::Wait {20} 

if {"$use_shield_box$" == "false"} {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
} else {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
}
::CONSOLE::Wait {20}
::CONSOLE::Local
::CONSOLE::Wait_String {360} {$Reboot_String$} {PASS}
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd_More {} {ifconfig} {10} {sys atbr} {10}
::CONSOLE::Wait_String {360} {$Reboot_String$} {PASS}
::CONSOLE::Wait {60} 

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

<<************************************* TR069 long time function *************************************>> 
%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- TR069 (long time function) ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3123 When device try to contact the first ACS with Incorrect ACS URL, check session retry policy > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3123," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# test cost 3 hour
# Connect TR069 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {10} 

# Connect ACS server with incorrect username & pwd
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-3123_acs_nonexistent_ip.pcap} {$filter=tcp} {$duration=16120}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd {} {ztr69cmd url http://172.202.75.123} 
::CONSOLE::CI_Cmd {} {ztr69cmd username acts} 
::CONSOLE::CI_Cmd {} {ztr69cmd password 1234} 
::CONSOLE::CI_Cmd {} {ztr69cmd applynow} 
::CONSOLE::Wait {16120} 

# put pcap packet to ACTS_PC
::DOSAPP::Dos_Ftp_Get {10.150.150.187} {21} {root} {1234} {get UTP-3123_acs_nonexistent_ip.pcap} {} {$LogPath$/UTP-3123_acs_nonexistent_ip.pcap} {} {} {1}
::CONSOLE::Wait {15} 

# tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.202.75.123
::TESTLINK::Capture_Interval_Chk "$LogPath$/UTP-3123_acs_nonexistent_ip.pcap" "tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.202.75.123" "4~12|10~20|20~40|40~80|80~160|160~320|320~640|640~1280|1280~2560|2560~5120|2560~5120"


<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3122 Check session retry policy(TR-069 Amendment2 Session 3.2.1.1) > 
# ignore 1~2 packet
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3122," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd {} {ztr69cmd active off} 
::CONSOLE::CI_Cmd {} {ztr69cmd applynow} 

# Connect ACS server with incorrect username & pwd
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-3122_acs_incorrect_auth.pcap} {$filter=tcp} {$duration=16120}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd {} {ztr69cmd active on} 
::CONSOLE::CI_Cmd {} {ztr69cmd url $ACSAUTHURL$}
::CONSOLE::CI_Cmd {} {ztr69cmd username test555555} 
::CONSOLE::CI_Cmd {} {ztr69cmd password test555555} 
::CONSOLE::CI_Cmd {} {ztr69cmd applynow} 
::CONSOLE::Wait {16120} 

# put pcap packet to ACTS_PC
::DOSAPP::Dos_Ftp_Get {10.150.150.187} {21} {root} {1234} {get UTP-3122_acs_incorrect_auth.pcap} {} {$LogPath$/UTP-3122_acs_incorrect_auth.pcap} {} {} {1}
::CONSOLE::Wait {15} 

# tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.202.77.11
::TESTLINK::Capture_Interval_Chk "$LogPath$/UTP-3122_acs_incorrect_auth.pcap" "tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.202.77.11" "4~12|10~20|20~40|40~80|80~160|160~320|320~640|640~1280|1280~2560|2560~5120|2560~5120"

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3128 When device try to connect ACS URL with domain name which is invalid ACS, check session retry policy > 
# BUG: first packet time  is often 4.XXX sec
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3128," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Connect TR069 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {35} 

# Connect ACS server with incorrect domain
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=ppp0} {$capture_file=UTP-3128_acs_incorrect_domain.pcap} {$filter=tcp} {$duration=16120}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Login >" [list {$mode=shell}]
::CONSOLE::CI_Cmd {} {ztr69cmd url http://domain.pqatest.com:7777}
::CONSOLE::CI_Cmd {} {ztr69cmd username admin} 
::CONSOLE::CI_Cmd {} {ztr69cmd password 1234} 
::CONSOLE::CI_Cmd {} {ztr69cmd applynow} 
::CONSOLE::Wait {16120} 

# put pcap packet to ACTS_PC
::DOSAPP::Dos_Ftp_Get {10.150.150.187} {21} {root} {1234} {get UTP-3128_acs_incorrect_domain.pcap} {} {$LogPath$/UTP-3128_acs_incorrect_domain.pcap} {} {} {1}
::CONSOLE::Wait {15} 

# tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.202.77.11
::TESTLINK::Capture_Interval_Chk "$LogPath$/UTP-3128_acs_incorrect_domain.pcap" "tcp.flags == 0x002 && !(tcp.analysis.retransmission) && ip.dst == 172.205.77.11" "4~12|10~20|20~40|40~80|80~160|160~320|320~640|640~1280|1280~2560|2560~5120|2560~5120"

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-22747 [Automation] Automation check CPE support Parameter list > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-22747," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Connect ACS server
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=48} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# Add USB User
::WEB::WebDrv_OpenWebSite {http://$LAN_IP$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$username=$Adv_GUI_User$} {$password=$GUI_Pwd$}]
::WEB::WebDrv_Click {xpath} {//*[@id="Heimnetz0"]/a} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {Heimnetz6} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainframe} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div/ul/li[3]/a} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {btnAddNew} {10} {PASS} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Set_Value {id} {idUsbUserName} {test1234} {10} 
::WEB::WebDrv_Set_Value {id} {idUsbUserPassword} {test1234} {10} 
::WEB::WebDrv_Set_Value {id} {idUsbUserPasswordConfirm} {test1234} {10} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {xpath} {/html/body/div/div/div[4]/div/a[2]} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::WEB::WebDrv_Click {id} {LogoutBtn} {10} {PASS} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Get lan1 ip
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

# Connect WLAN 2.4G, 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# Add object
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPStaticAddress.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_5067F0_NATExt.AddrMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Layer3Forwarding.Forwarding.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_IPv6Layer3Forwarding.IPv6Forwarding.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANIPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.3.WANConnectionDevice.1.WANIPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.4.WANConnectionDevice.1.WANIPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.DHCPClient.SentDHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANIPConnection.1.DHCPClient.SentDHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.3.WANConnectionDevice.1.WANIPConnection.1.DHCPClient.SentDHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.4.WANConnectionDevice.1.WANIPConnection.1.DHCPClient.SentDHCPOption.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.2.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.3.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.4.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.Classification.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.Policer.} {}  
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.Queue.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.QueueStats.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.SIP.EventSubscribe.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.SIP.ResponseMap.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.Tone.Description.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.Tone.Pattern.} {} 
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.Line.1.Ringer.Description.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.2.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.3.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.4.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.5.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.6.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.7.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.8.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.9.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.10.Line.1.Ringer.Pattern.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_Firewall.Firewall.1.Rule.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_Firewall.Firewall.2.Rule.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_Firewall.Firewall.3.Rule.} {}
::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.X_TELEFONICA-ES_Firewall.Firewall.4.Rule.} {}

# Set TraceRouteDiagnostics
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.TraceRouteDiagnostics.} {Timeout} {5000} {DataBlockSize} {38} {Interface} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1} {Host} "$::lan1_ip" {DSCP} {0} {NumberOfTries} {3} {MaxHopCount} {30} {DiagnosticsState} {Requested}
::USER_DEFINE::CloseTR069ACS {} 

# move tr069 excel table to report folder
set moveFilePath "$MOD_PATH$XML.XLSX $LogPath$$PROJECT$_$Firmware_Version$_TR098.xlsx"
set moveFile [string map {"/" \\} "$moveFilePath"]
::DOSAPP::Dos_Cmd "copy $moveFile"

# open excel
package require tcom
set listSheets [list "Homebox3 ACS Parameter"]
for {set index 0} {$index < [llength $listSheets]} {incr index} {
    set sheetName [lindex $listSheets $index]
    set excel [::tcom::ref createobject "Excel.Application"]
    $excel Visible 0
    $excel DisplayAlerts 0
    set workbooks [$excel Workbooks]
    set workbook [$workbooks Open $LogPath$$PROJECT$_$Firmware_Version$_TR098.xlsx]
    set worksheets [$workbook Worksheets]
    set worksheet [$worksheets Item "$sheetName"]
    set ::cells [$worksheet Cells]

    # Read value from excel file
    set rowCount 2
    set end 0    
    set ::Pre_Parameter ""
    set ::Parameter_Name ""
    while { $end == 0 } {
        set column_Name [[$::cells Item $rowCount "A"] Value]
        if { $column_Name == "" } {
            set end 1
            $excel Quit
            continue
        } elseif {[string first "InternetGatewayDevice." $column_Name] != -1} {      
            if {[string first "X" [[$::cells Item $rowCount "D"] Value]] == -1} {
                set ::column_Note [[$::cells Item $rowCount "D"] Value]
            } else {
                set ::column_Note [string map {X 1} [[$::cells Item $rowCount "D"] Value]]
            }
            if {$::column_Note == ""} {
                set ::Pre_Parameter $column_Name
            } else {
                set ::Pre_Parameter $column_Name
                if {[string first "," "$::column_Note"] == -1} {
                    set Number_List [split $::column_Note "."] 
                } else {
                    set Number_List [split $::column_Note ","]  
                }
                set ::i_length 0
                set ::j_length 0
                set ::k_length 0
                set ::l_length 0               
                if {[lindex $Number_List 1] == "0" || [lindex $Number_List 1] == ""} {
                    set ::i_length $::column_Note
                } elseif {[llength $Number_List] == "2" && [lindex $Number_List 1] != "0"} {
                    set ::i_length [lindex $Number_List 0]
                    set ::j_length [lindex $Number_List 1]
                } elseif {[llength $Number_List] == "3"} {
                    set ::i_length [lindex $Number_List 0]
                    set ::j_length [lindex $Number_List 1]
                    set ::k_length [lindex $Number_List 2]
                } elseif {[llength $Number_List] == "4"} {
                    set ::i_length [lindex $Number_List 0]
                    set ::j_length [lindex $Number_List 1]
                    set ::k_length [lindex $Number_List 2]
                    set ::l_length [lindex $Number_List 3]               
                }
                # store pre parameter in list
                set Pre_Para_List {}  
                set Pre_Para_Index_List {}
                # 1
                for {set ::i 1} {$::i <= $::i_length} {incr ::i} {
                    set ::temp_i $::Pre_Parameter
                    set ::Pre_Parameter_i [string replace "$::temp_i" [string first "\{i\}" $::temp_i] [expr [string first "\{i\}" $::temp_i] + 2] $::i]
                    # set ::Pre_Parameter_i [string map "{\{i\}} $::i" $::temp_i]
                    if {[string first "," "$::column_Note"] == -1} {
                        lappend Pre_Para_List $::Pre_Parameter_i
                        lappend Pre_Para_Index_List $::i
                    }
                    # 2
                    for {set ::j 1} {$::j <= $::j_length} {incr ::j} {
                        set ::temp_j $::Pre_Parameter_i
                        set ::Pre_Parameter_j [string replace "$::temp_j" [string first "\{j\}" $::temp_j] [expr [string first "\{j\}" $::temp_j] + 2] $::j]
                        # set ::Pre_Parameter_j [string map "{\{j\}} $::j" $::temp_j] 
                        if {[llength $Number_List] == "2"} {
                            lappend Pre_Para_List $::Pre_Parameter_j
                            lappend Pre_Para_Index_List $::i,$::j
                        }
                        # 3
                        for {set ::k 1} {$::k <= $::k_length} {incr ::k} {
                            set ::temp_k $::Pre_Parameter_j
                            set ::Pre_Parameter_k [string replace "$::temp_k" [string first "\{k\}" $::temp_k] [expr [string first "\{k\}" $::temp_k] + 2] $::k]
                            # set ::Pre_Parameter_k [string map "{\{k\}} $::k" $::temp_k]  
                            if {[llength $Number_List] == "3"} {
                                lappend Pre_Para_List $::Pre_Parameter_k
                                lappend Pre_Para_Index_List $::i,$::j,$::k
                            }
                            # 4
                            for {set ::l 1} {$::l <= $::l_length} {incr ::l} {
                                set ::temp_l $::Pre_Parameter_k
                                set ::Pre_Parameter_l [string replace "$::temp_l" [string first "\{l\}" $::temp_l] [expr [string first "\{l\}" $::temp_l] + 2] $::l]
                                # set ::Pre_Parameter_l [string map "{\{l\}} $::l" $::temp_l] 
                                if {[llength $Number_List] == "4"} {
                                    lappend Pre_Para_List $::Pre_Parameter_l
                                    lappend Pre_Para_Index_List $::i,$::j,$::k,$::l
                                }
                            }
                        }                    
                    }        
                }                
            }
        } else {
            # # Debug
            # ::MISC::ACTS_Dummy_Response {PASS} "$Pre_Para_List"
            # ::MISC::ACTS_Dummy_Response {PASS} "$Pre_Para_Index_List"

            # doesn't have index in parameter
            if {$::column_Note == ""} {
                # GPN
                set ::Parameter_Name $column_Name  
                ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
                ::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} "$::Pre_Parameter" {NextLevel} {True} "$::Pre_Parameter$::Parameter_Name"
                set x [::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "$::Pre_Parameter$::Parameter_Name" {::ret_value}] 
                ::USER_DEFINE::CloseTR069ACS {} 

                # Write result to excel file
                if {[string first "$::Pre_Parameter$::Parameter_Name" "$::ret_value"] != -1} {
                    ::MISC::ACTS_Dummy_Response {PASS} "GPN -> $::Pre_Parameter$::Parameter_Name" 
                    $::cells Item $rowCount "E" "PASS"  
                    $workbook Save  
                } else {
                    ::MISC::ACTS_Dummy_Response {FAIL} "GPN -> $::Pre_Parameter$::Parameter_Name" 
                    $::cells Item $rowCount "E" "FAIL"   
                    set fnt [[$::cells Item $rowCount "A"] Font]
                    $fnt Color [expr 0xFF]
                    set fnt2 [[$::cells Item $rowCount "E"] Font]
                    $fnt2 Color [expr 0xFF]         
                    $workbook Save
                }
            } else {
                # have index in parameter
                # GPN
                set ::Parameter_Name $column_Name 
                set ::Total_Result ""
                ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
                for {set ::i 0} {$::i < [llength $Pre_Para_List]} {incr ::i} {
                    ::USER_DEFINE::TR069GetParameterNames {$CPEID$} {ParameterPath} "[lindex $Pre_Para_List $::i]" {NextLevel} {True} "[lindex $Pre_Para_List $::i]$::Parameter_Name"
                    set x [::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} "[lindex $Pre_Para_List $::i]$::Parameter_Name" {::ret_value}]   
                    # add all result to ::Total_Tesult
                    if {[string first "[lindex $Pre_Para_List $::i]$::Parameter_Name" "$::ret_value"] != -1} {
                        append ::Total_Result "\[[lindex $Pre_Para_Index_List $::i]->PASS\] "
                    } else {
                        append ::Total_Result "\[[lindex $Pre_Para_Index_List $::i]->FAIL\] "
                    }
                }   
                ::USER_DEFINE::CloseTR069ACS {}                   
                # Write result to excel file
                if {[string first "FAIL" "$::Total_Result"] == -1} {
                    $::cells Item $rowCount "E" "$::Total_Result"  
                    $workbook Save  
                } else {
                    $::cells Item $rowCount "E" "$::Total_Result"   
                    set fnt [[$::cells Item $rowCount "A"] Font]
                    $fnt Color [expr 0xFF]
                    set fnt2 [[$::cells Item $rowCount "E"] Font]
                    $fnt2 Color [expr 0xFF]         
                    $workbook Save
                }                   
            }
        } 
        incr rowCount
    }
    $excel Quit
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=48} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-