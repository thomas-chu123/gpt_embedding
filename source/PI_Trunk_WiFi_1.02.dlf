%ENV-BAT|L1|L2%
+CaseStart+
<< ---------------- Setting ---------------- >>

<TCL_Block_Begin>

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {opensipsctl stop} {10} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {WAN_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$Firmware$}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Local
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {sys atbt 1} {10} {sys atwz $DUT_LAN_MAC_UType1$ $Country_Code$} {20}
::CONSOLE::CI_Cmd_More {} {sys atbt 1} {10} {sys atsn $DUT_LAN_MAC_UType1$} {20}

# set Axiros provision
::USER_DEFINE::TR069ClearCPEsInACS

::WEB::WebDrv_OpenWebSite {http://10.150.150.196/live/CPEManager/Scenarios/InitialCPEDefaults/ZPythonScriptHTML_editForm} {A1000}
::WEB::WebDrv_Set_Value {id} {__ac_name_id} {$ACSUSERNAME$} {20}
::WEB::WebDrv_Set_Value {id} {__ac_password_id} {$ACSPASSWORD$} {20}
::WEB::WebDrv_Click {name} {submit_button} {3}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {toggle_upload} {3}
::WEB::WebDrv_File_Dialog {name} {file} {D:/QTPTest/ACTS_Test/Tools/Include/TR069_default_provision.txt} {10}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {upload_button} {3}
::CONSOLE::Wait {10} 
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

if {"$PON_Switch_Type$" == "COM"} {
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ INIT}
    ::DOSAPP::Dos_Cmd {$ICSE_PATH$icsectl.exe $ICSE_COM$ ON 1}
    ::CONSOLE::Wait {20}
}

<TCL_Block_End>
-CaseEnd-


<<************************************* TR069 WLAN *************************************>> 
%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- TR069 WLAN ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
<TCL_Block_End>
-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2888 SSID and Passowrd can be modify include special character > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2888," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set WLAN 2.4G & 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# TR069 SetParameterValues 2.4G/5G SSID
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

#Check GUI setting
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# 2.4G
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# 5G
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect WLAN 2.4G & 5G and surf internet success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2895 Modify existed Data IPoE WAN IP Address/DNS settings from dhcp mode to static mode > 
# Redmine ID : 157559, DNS can't set successfully
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2895," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {20}

# Set IPoE WAN from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}                    
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.3.} 
{AddressingType} {Static} {ExternalIPAddress} {172.205.77.50} {SubnetMask} {255.255.255.0} {DefaultGateway} {172.205.77.254} {DNSEnabled} {1} {DNSServers} {8.8.8.8,8.8.4.4} 

# Get IPoE setting from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.3.} {AddressingType} {Static} {ExternalIPAddress} {172.205.77.50} {SubnetMask} {255.255.255.0} {DefaultGateway} {172.205.77.254} {DNSEnabled} {1} {DNSServers} {8.8.8.8,8.8.4.4} 
::USER_DEFINE::CloseTR069ACS {} 

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} "gpon_editBtn3" {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
# IP
::WEB::WebDrv_Is_Selected {id} {IPAddress_Static} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {IP is static}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {IP should change to static}
}
::WEB::WebDrv_Check_Value {id} {RN_IPAddr} {172.205.77.50} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {RN_Subnet} {255.255.255.0} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {RN_Gateway} {172.205.77.254} {10} {PASS} {full} 
# DNS
::WEB::WebDrv_Is_Selected {id} {dnsv4Static} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DNS is static}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DNS should change to static}
}
::WEB::WebDrv_Check_Value {id} {RN_PrimaryDns} {8.8.8.8} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {RN_SecondaryDns} {8.8.4.4} {10} {PASS} {full} 
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wan show dhcp} {10} {DHCP type} {Static} 
::CONSOLE::CI_Cmd_Scan {} {wan show dns} {10} {Primary DNS Server} {8.8.8.8} 
::CONSOLE::CI_Cmd_Scan {} {wan show dns} {10} {Secondary DNS Server} {8.8.4.4} 
::CONSOLE::CI_Cmd_Scan {} {wan show ipaddr} {10} {IP address} {172.205.77.50} 
::CONSOLE::CI_Cmd_Scan {} {wan show ipaddr} {10} {Subnet Mask} {255.255.255.0} 
::CONSOLE::CI_Cmd_Scan {} {wan show ipaddr} {10} {Gateway IP Address} {172.205.77.254} 

# Check LAN can ping internet
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.205.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check WLAN can ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# recover env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=gpon_editBtn3} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_address=0.0.0.0} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2896 Modify existed Data IPoE WAN IP Address/DNS settings from dhcp mode to static mode > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2896," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::CONSOLE::Wait {20}

# Set IPoE WAN from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.3.} {AddressingType} {DHCP} {DNSEnabled} {1} 

# Get IPoE setting from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.3.} {AddressingType} {DHCP} {DNSEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} "gpon_editBtn3" {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
# IP
::WEB::WebDrv_Is_Selected {id} {IPAddress_Auto} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {IP is Dynamic}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {IP should change to Dynamic}
}
# DNS
::WEB::WebDrv_Is_Selected {id} {dnsv4Auto} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {DNS is Auto}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {DNS should change to Auto}
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wan show dhcp} {10} {DHCP type} {Dynamic}  

# Check LAN can ping internet
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check WLAN can ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# recover env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=gpon_editBtn3} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$ipv4_address=0.0.0.0} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3066 2.4G/5G associated client information > 
# Redmine ID: 154682
# Bug: CPE need support LastRequestedUnicastCipher, LastRequestedMulticastCipher, LastPMKId
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3066," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect WLAN 2.4G & 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# Get 2.4G, 5G client mac & ip
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::DMZ_MAC} 

::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::LAN2_IP}
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::LAN2_MAC} 

# TR069 check 2.4G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.AssociatedDeviceMACAddress} [string toupper "$::DMZ_MAC"] 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.AssociatedDeviceIPAddress} "$::DMZ_IP" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.AssociatedDeviceAuthenticationState} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.LastRequestedUnicastCipher} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.LastRequestedMulticastCipher} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.LastPMKId} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.AssociatedDevice.} {1.LastDataTransmitRate} {} 

# TR069 check 5G
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.AssociatedDeviceMACAddress} [string toupper "$::LAN2_MAC"]
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.AssociatedDeviceIPAddress} "$::LAN2_IP" 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.AssociatedDeviceAuthenticationState} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.LastRequestedUnicastCipher} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.LastRequestedMulticastCipher} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.LastPMKId} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.AssociatedDevice.} {1.LastDataTransmitRate} {} 
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

<TCL_Block_End>

-CaseEnd-

# %ENV-L2%
# +CaseStart+
# < UTP-3036 Check WLAN 2.4G Channel for all possible value > 
# # HB3 Bug: TR069 set 2.4G channel only 1~4, AutoChannelEnable will change to 1 and GUI will change to auto
# # 2841-Spain -> auto dongle not support channel 12,13

# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-3036," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# # set WLAN 2.4G 
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$vlan_id=$::vlan_id}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=Auto} {$Security=WPA2-PSK AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Connect WLAN 2.4G
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}] 

# # TR069 check 2.4G possible channels
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {1} 
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {PossibleChannels} {1,2,3,4,5,6,7,8,9,10,11,12,13} 

# # Set all possible channel: 1
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {1} 
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {0} 
# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "1"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {1} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 2
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {2} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "2"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {2} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 3
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {3} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "3"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {3} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 4
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {4} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "4"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {4} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 5
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {5} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "5"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {5} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 6
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {6} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "6"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {6} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 7
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {7} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "7"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {7} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 8
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {8} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "8"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {8} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 9
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {9} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "9"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {9} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 10
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {10} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "10"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {10} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 11
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {11} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "11"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {11} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 12
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {12} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "12"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {12} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set all possible channel: 13
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {13} 

# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "13"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } {13} 

# # Check 2.4G client can surf internet
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Set auto channel on
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
# ::CONSOLE::Wait {5}
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {1} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.Channel}] {::value}
# if {[string first "$::value" "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13"] >= 0} {
#     ::MISC::ACTS_Dummy_Response {PASS} {CPE auto change to one supported channel success} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {CPE auto change to one supported channel fail} 
# }
# ::USER_DEFINE::CloseTR069ACS {}
# ::CONSOLE::Wait {5}

# # Check Channel from Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {10}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
# if {"$::value" == "0"} {
#     ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
# }
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check Channel from CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Auto} {} 
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3022 Report Fail Fixed IP Configuration > 
# Redmine ID: 167642
# Bug: 2841-Spain CPE need to return fault, but it return status: 0
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3022," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set LANHostConfigManagement from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {DHCPServerEnable} {true} {IPInterface.1.IPInterfaceIPAddress} {190.252.89.121} {IPInterface.1.IPInterfaceSubnetMask} {255.255.255.248} {MinAddress} {190.252.89.122} {MaxAddress} {190.252.89.126}]
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
::USER_DEFINE::CloseTR069ACS {} 

# recover env if CPE has bug
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3023 Modify WLAN 2.4G to No Security > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3023," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} {WLAN_NoSecurity} {BeaconType} {Open/EnhancedOpen} {Channel} {5}]

set WiFi_Support $WIFI_24G_Security_Support$

# Check xml return & value from TR069 
if {[string first "Open/" "$WiFi_Support"] == -1} {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_24G$
    set ::BeaconType 11i
    set ::Channel 8
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_NoSecurity
    set ::BeaconType Open/EnhancedOpen
    set ::Channel 5
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "Open/" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "8"
} else {
    set ::Security "13"
    set ::Channel "5"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}

::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "Open/" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2PSK"
} else {
    set ::Security "OpenEnhancedOpen"
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {5} {Security = } "$::Security"

if {[string first "Open/" "$WiFi_Support"] == -1} {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Security=None}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
    ::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3024 Modify WLAN 5G to No Security > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3024," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} {WLAN_5G_NoSecurity} {BeaconType} {Open/EnhancedOpen} {Channel} {36}]

set WiFi_Support $WIFI_5G_Security_Support$

# Check xml return & value from TR069 
if {[string first "Open/" "$WiFi_Support"] == -1 } {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_5G$
    set ::BeaconType 11i
    set ::Channel "$5G_Channel$"
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_5G_NoSecurity
    set ::BeaconType Open/EnhancedOpen
    set ::Channel 36
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "Open/" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "$5G_Channel$"
} else {
    set ::Security "13"
    set ::Channel "36"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "Open/" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2PSK"
} else {
    set ::Security "Open/EnhancedOpen"
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {5} {Security = } "$::Security"

if {[string first "Open/" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Security=None}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3025 Modify WLAN 2.4G to WEP and Key > 
# BUG: (TR069 set channel, Adv GUI channel will redirect to Auto channel)
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3025," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} {WLAN_WEP} {BeaconType} {WEPEncryption} {Channel} {1} {WEPKey.1.WEPKey} {zxcvb}]

set WiFi_Support $WIFI_24G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_24G$
    if {"$PROJECT$" == "HB3"} {
        set ::BeaconType "11i"
    } else {
        set ::BeaconType "WPA2-PSK"
    }
    set ::Channel 8
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_WEP
    set ::BeaconType WEPEncryption
    set ::Channel 1
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "8"
} else {
    set ::Security ""
    set ::Channel "1"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2PSK"
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {5} {Security = } "$::Security"

if {[string first "WEP" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WEP} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3026 Modify WLAN 5G to WEP and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3026," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} {WLAN_5G_WEP} {BeaconType} {WEPEncryption} {Channel} {36} {WEPKey.1.WEPKey} {zxcvb}]

set WiFi_Support $WIFI_5G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_5G$
    set ::BeaconType WPA2-PSK
    set ::Channel "$5G_Channel$"
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_5G_WEP
    set ::BeaconType WEPEncryption
    set ::Channel 36
}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "$5G_Channel$"
} else {
    set ::Security ""
    set ::Channel "36"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WEP" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    if {"$PROJECT$" == "HB3"} {
        set ::Security "11i"
    } else {
        set ::Security "WPA2-PSK"        
    }
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {5} {Security = } "$::Security"

if {[string first "WEP" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WEP} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3027 Modify WLAN 2.4G to WPA-PSK and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3027," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} {WLAN_WPA-PSK} {BeaconType} {WPA} {WPAEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} {1}]

set WiFi_Support $WIFI_5G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WPA-PSK" "$WiFi_Support"] == -1} {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_24G$
    set ::BeaconType 11i
    set ::Channel 8
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_WPA-PSK
    set ::BeaconType WPA
    set ::Channel 1
}

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
} else {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {WPAEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} "$::Channel"
}
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "8"
} else {
    set ::Security ""
    set ::Channel "1"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2PSK"
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {5} {Security = } "$::Security"

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WEP} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3028 Modify WLAN 5G to WPA-PSK and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3028," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} {WLAN_5G_WPA-PSK} {BeaconType} {WPA} {WPAEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} {1}]

set WiFi_Support $WIFI_5G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_5G$
    if {"$PROJECT$" == "HB3"} {
        set ::BeaconType "11i"
    } else {
        set ::BeaconType "WPA2-PSK"        
    }
    set ::Channel "$5G_Channel$"
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_5G_WPA-PSK
    set ::BeaconType WPA
    set ::Channel 36
}

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
} else {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {WPAEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} "$::Channel"
}
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "$5G_Channel$"
} else {
    set ::Security ""
    set ::Channel "36"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2-PSK"
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {5} {Security = } "$::Security"

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA-PSK} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-BAT%
+CaseStart+
< UTP-3029 Modify WLAN 2.4G to WPA2-PSK and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3029," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Disable OneSSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
::CONSOLE::Wait {5}

# WAN DNS set dynamic
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# LAN DNS set dynamic
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_More {} {lan config --dns auto} {10}
::CONSOLE::Wait {5}

if {"$PROJECT$" == "HB3"} {
    set ::BeaconType "11i"
} else {
    set ::BeaconType "WPA2-PSK"        
}
# Set WLAN 2.4G from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {$SSID_24G$} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {BeaconType} "$::BeaconType" 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {IEEE11iEncryptionModes} {AESEncryption} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} {8} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {PreSharedKey.1.KeyPassphrase} {12345678901234567890123456789012345678901234567890abcdefghijklm}

# Check WLAN 2.G setting from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} {$SSID_24G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {8}  
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {12345678901234567890123456789012345678901234567890abcdefghijklm} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 2.4G setting on CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {$SSID_24G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel = 8} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show  security 1} {10} {Security = WPA2PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show wpapskey 1} {10} {PreSharedKey = 12345678901234567890123456789012345678901234567890abcdefghijklm} {} 

# Set WKS WLAN 2.4G & connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=12345678901234567890123456789012345678901234567890abcdefghijklm}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

# Check 2.4G client can surf internet
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 

# Disable CPE 2.4G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}  

# Check WLAN 2.G setting from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0} {SSID} {$SSID_24G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {8}  
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {12345678901234567890123456789012345678901234567890abcdefghijklm} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 2.4G setting on CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Disabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {$SSID_24G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel = 8} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show  security 1} {10} {Security = WPA2PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show wpapskey 1} {10} {PreSharedKey = 12345678901234567890123456789012345678901234567890abcdefghijklm} {}

# Check WKS WLAN 2.4G connect fail;
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=FAIL}]

# Enable CPE 2.4G 
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
::USER_DEFINE::CloseTR069ACS {}  

<TCL_Block_End>

-CaseEnd-

# %ENV-BAT%
# +CaseStart+
# < UTP-3030 Modify WLAN 5G to WPA2-PSK and Key > 
# # 63 psk high rate can't connect, but it's not bug (Connect OK by iphone, Ubuntu manual connect OK)
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-3030," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
# }
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Disable OneSSID
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
# ::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
# ::CONSOLE::Wait {5}

# if {"$PROJECT$" == "HB3"} {
#     set ::BeaconType "11i"
# } else {
#     set ::BeaconType "WPA2-PSK"        
# }
# # Set WLAN 5G from TR069
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {0} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {$SSID_5G$} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {BeaconType} "$::BeaconType" 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {IEEE11iEncryptionModes} {AESEncryption} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {36} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {PreSharedKey.1.KeyPassphrase} {12345678901234567890123456789012345678901234567890abcdefghijklm}

# # Check WLAN 5G setting from TR069
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} {$SSID_5G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {36}  
# ::USER_DEFINE::CloseTR069ACS {} 
# ::CONSOLE::Wait {25} 

# # Check 5G setting on Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {36} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} {7} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {12345678901234567890123456789012345678901234567890abcdefghijklm} {10} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check 5G setting on CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Enabled} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {$SSID_5G$} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel = 36} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security = WPA2-PSK} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show wpapskey} {10} {PreSharedKey = 12345678901234567890123456789012345678901234567890abcdefghijklm} {}

# # Set WKS WLAN 5G & connect
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=12345678901234567890123456789012345678901234567890abcdefghijklm}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# # Check 5G client can surf internet
# ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
# ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 

# # Disable CPE 5G
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0}  

# # Check WLAN 2.G setting from TR069
# ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {0} {SSID} {$SSID_5G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {36}  
# ::USER_DEFINE::CloseTR069ACS {} 

# # Check 5G setting on Adv GUI
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {36} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} {7} {10} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {12345678901234567890123456789012345678901234567890abcdefghijklm} {10} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {10}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# # Check 5G setting on CLI Command
# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Disabled} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {$SSID_5G$} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel = 36} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security = WPA2-PSK} {} 
# ::CONSOLE::CI_Cmd_Scan {} {wlan5 show wpapskey} {10} {PreSharedKey = 12345678901234567890123456789012345678901234567890abcdefghijklm} {}

# # Check WKS WLAN 5G connect fail;
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=12345678901234567890123456789012345678901234567890abcdefghijklm}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Result=FAIL}]

# # Enable CPE 5G 
# ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
# ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1}
# ::USER_DEFINE::CloseTR069ACS {}  

# <TCL_Block_End>
# -CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3031 Modify WLAN 2.4G to WPA/WPA2-PSK and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3031," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} {WLAN_WPA/WPA2-PSK} {BeaconType} {WPAand11i} {IEEE11iEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} {1}]

set WiFi_Support $WIFI_24G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WPA-PSK" "$WiFi_Support"] == -1} {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_24G$
    if {"$PROJECT$" == "HB3"} {
        set ::BeaconType "11i"
    } else {
        set ::BeaconType "WPA2-PSK"        
    }
    set ::Channel 8
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_WPA/WPA2-PSK
    set ::BeaconType WPAand11i
    set ::Channel 1
}

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
} else {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {IEEE11iEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} "$::Channel"
}
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "8"
} else {
    set ::Security ""
    set ::Channel "1"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2PSK"
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {5} {Security = } "$::Security"

if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WEP} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3032 Modify WLAN 5G to WPA/WPA2-PSK and Key > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3032," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
 
# Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
set x [::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} {WLAN_WPA/WPA2-PSK} {BeaconType} {WPAand11i} {IEEE11iEncryptionModes} {TKIPEncryption} {PreSharedKey.1.KeyPassphrase} {1234567890} {Channel} {44}]

set WiFi_Support $WIFI_5G_Security_Support$

# Check xml return & value from TR069 
if {[string first "WPA/WPA2-PSK" "$WiFi_Support"] == -1 } {
    # (Product not support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9003} {::ret_value} 
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {9007} {::ret_value} 
    set ::SSID $SSID_5G$
    set ::BeaconType 11i
    set ::Channel "$5G_Channel$"
} else {
    # (Product support this security)
    ::USER_DEFINE::TR069Get_and_Check_Last_Result {$CPEID$} {PASS} {'Status': '0'} {::ret_value} 
    set ::SSID WLAN_WPA/WPA2-PSK
    set ::BeaconType WPAand11i
    set ::Channel 104
}

if {[string first "WPA/WPA2-PSK" "$WiFi_Support"] == -1 } {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {Channel} "$::Channel"
} else {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Enable} {1} {SSID} "$::SSID" {BeaconType} "$::BeaconType" {BasicEncryptionModes} {None} {IEEE11iEncryptionModes} {TKIPEncryption} {Channel} "$::Channel"
}
::USER_DEFINE::CloseTR069ACS {} 

# Check value from Adv GUI
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "7"
    set ::Channel "$5G_Channel$"
} else {
    set ::Security ""
    set ::Channel "104"
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} "$::SSID" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::Channel" {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} "$::Security" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check value from CLI command
if {[string first "WPA-PSK" "$WiFi_Support"] == -1 } {
    # Security: 7_WPA2-PSK AES, 13_Open/EnhancedOpen Open&OWE 
    set ::Security "WPA2-PSK"
} else {
    set ::Security ""
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {5} {SSID = } "$::SSID"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Channel = } "$::Channel"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {5} {Security = } "$::Security"

if {[string first "WPA-PSK" "$WiFi_Support"] == -1} {
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WEP} {$Encry=TKIP} {$Key=1234567890}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=PASS}]
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 
    # Change security from ACS server (TR069 set channel, Adv GUI channel will redirect to Auto channel)
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
    ::CONSOLE::Wait {5}
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {0}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$::SSID} {$Result=FAIL}]
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Enable} {1}
    ::USER_DEFINE::CloseTR069ACS {}
}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3033 Modify WLAN 2.4G and 5G at the same time > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3033," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# recover env if CPE has bug
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Set WLAN 2.4G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

if {"$PROJECT$" == "HB3"} {
    set ::BeaconType "11i"
} else {
    set ::BeaconType "WPA2-PSK"        
}
# Set WLAN 2.4G & 5G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {$24G_node$.SSID} {$SSID_24G$} {$24G_node$.BeaconType} "$::BeaconType" {$24G_node$.IEEE11iEncryptionModes} {AESEncryption} {$24G_node$.Channel} {6} {$24G_node$.BeaconAdvertisementEnabled} {1} {$24G_node$.PreSharedKey.1.KeyPassphrase} {1234567890} {$5G_node$.SSID} {$SSID_5G$} {$5G_node$.BeaconType} "$::BeaconType" {$5G_node$.IEEE11iEncryptionModes} {AESEncryption} {$5G_node$.Channel} {48} {$5G_node$.BeaconAdvertisementEnabled} {1}

# Check value from TR069
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {$SSID_24G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {6} {BeaconAdvertisementEnabled} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {$SSID_5G$} {BeaconType} "$::BeaconType" {IEEE11iEncryptionModes} {AESEncryption} {Channel} {48} {BeaconAdvertisementEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {$SSID_24G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel = 6} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show  security 1} {10} {Security = WPA2PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show wpapskey 1} {10} {PreSharedKey = 1234567890} {}

# Check 5G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {$SSID_5G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel = 48} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show  security} {10} {Security = WPA2-PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wpapskey} {10} {PreSharedKey = 1234567890} {}

# Check 2.4G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {6} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}

# Check 5G setting on Adv GUI
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {48} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# Check 2.4G client can connect CPE 2.4G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
# ::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS}

# Check 5G client can connect CPE 5G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
# ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3034 Check WLAN 2.4G Hide SSID setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3034," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
if {"$PROJECT$" == "HB3"} {
    set ::BeaconType "11i"
} else {
    set ::BeaconType "WPA2-PSK"        
}
# Set WLAN 2.4G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {1.AutoChannelEnable} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {1.SSID} {$SSID_24G$} {1.BeaconType} "$::BeaconType" {1.IEEE11iEncryptionModes} {AESEncryption} {1.Channel} {8} {1.BeaconAdvertisementEnabled} {1} {1.PreSharedKey.1.KeyPassphrase} {1234567890}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G client can connect CPE 2.4G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS}

# Enable Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config closed 1 1} 

# Check SSIDAdvertisementEnabled change to 0
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSIDAdvertisementEnabled} {0} 
::USER_DEFINE::CloseTR069ACS {} 

# Check wlan client can't find SSID
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan_Fail {} {iwlist wlan0 scanning | grep '$SSID$'} {10} {$SSID_24G$} {}  

# Set BeaconAdvertisementEnabled, SSIDAdvertisementEnabled to 1
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {$SSID_24G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel = 8} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security = WPA2PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show wpapskey 1} {10} {PreSharedKey = 1234567890} {}
::CONSOLE::CI_Cmd_Scan {} {wlan show closed 1} {10} {Hide ssid = Disabled} {}

# Check 2.4G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
# true or false
::WEB::WebDrv_Is_Selected {id} {HideSSID} {::value} {10}
if {"$::value" != "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {Hide SSID should be disabled}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Hide SSID status is correct}
}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 2.4G client can connect CPE 2.4G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS}

# Set SSIDAdvertisementEnabled to 0
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSIDAdvertisementEnabled} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSIDAdvertisementEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 1} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show ssid 1} {10} {$SSID_24G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel = 8} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show security 1} {10} {Security = WPA2PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan show wpapskey 1} {10} {PreSharedKey = 1234567890} {}
::CONSOLE::CI_Cmd_Scan {} {wlan show closed 1} {10} {Hide ssid = Enabled} {}

# Check 2.4G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
# true or false
::WEB::WebDrv_Is_Selected {id} {HideSSID} {::value} {10}
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {Hide SSID should be disabled}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Hide SSID status is correct}
}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {moreSecurity} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# Check wlan client can't find SSID
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan_Fail {} {iwlist wlan0 scanning | grep '$SSID$'} {10} {$SSID_24G$} {}  

# Disable Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config closed 1 0} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3035 Check WLAN 5G Hide SSID setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3035," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
if {"$PROJECT$" == "HB3"} {
    set ::BeaconType "11i"
} else {
    set ::BeaconType "WPA2-PSK"        
}
# Set WLAN 5G
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {2.AutoChannelEnable} {0}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.} {2.SSID} {$SSID_5G$} {2.BeaconType} "$::BeaconType" {2.IEEE11iEncryptionModes} {AESEncryption} {2.Channel} {44} {2.BeaconAdvertisementEnabled} {1} {2.PreSharedKey.1.KeyPassphrase} {1234567890}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check 5G client can connect CPE 5G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS}

# Enable Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed 1} 

# Check SSIDAdvertisementEnabled change to 0
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSIDAdvertisementEnabled} {0} 
::USER_DEFINE::CloseTR069ACS {} 

# Check wlan client can't find SSID
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan_Fail {} {iwlist wlan0 scanning | grep '$SSID$'} {10} {$SSID_5G$} {}  

# Set BeaconAdvertisementEnabled, SSIDAdvertisementEnabled to 1
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {BeaconAdvertisementEnabled} {1} {SSIDAdvertisementEnabled} {1}
::USER_DEFINE::CloseTR069ACS {} 

# Check 5G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {$SSID_5G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel = 44} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security = WPA2-PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wpapskey} {10} {PreSharedKey = 1234567890} {}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show closed} {10} {Hide ssid = Disabled} {}

# Check 5G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
# true or false
::WEB::WebDrv_Is_Selected {id} {HideSSID} {::value} {10}
if {"$::value" != "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {Hide SSID should be disabled}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Hide SSID status is correct}
}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {44} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 5G client can connect CPE 5G and surf internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS}

# Set SSIDAdvertisementEnabled to 0
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSIDAdvertisementEnabled} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSIDAdvertisementEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# Check 5G setting from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show status} {10} {Enabled} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show ssid} {10} {$SSID_5G$} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel = 44} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show security} {10} {Security = WPA2-PSK} {} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wpapskey} {10} {PreSharedKey = 1234567890} {}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show closed} {10} {Hide ssid = Enabled} {}

# Check 5G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
# true or false
::WEB::WebDrv_Is_Selected {id} {HideSSID} {::value} {10}
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {Hide SSID should be disabled}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {Hide SSID status is correct}
}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {44} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {AuthenticationSelection} {7} {10} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# Check wlan client can't find SSID
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_Scan_Fail {} {iwlist wlan0 scanning | grep '$SSID$'} {10} {$SSID_5G$} {}  

# Disable Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed 0} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-2897 ACS modify PPPoE WAN PPPoE username/password when TR-069 WAN is PPPoE WAN,check WAN can be re-dialed > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2897," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset default
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Change to IPoE WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
# Set WLAN client
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
# Set TR069
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Get CPE before WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::Before_WAN_IP}

# set PPPoE username/password
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {Username} {acts2} {Password} {1234}
::CONSOLE::Wait {15} 
::USER_DEFINE::CheckTR069DeviceEventStrings {$CPEID$} {PASS} {4 VALUE CHANGE} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {Username} {acts2}
::USER_DEFINE::CloseTR069ACS {} 

# Get CPE After WAN IP
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::After_WAN_IP}

# Check WAN IP change
if {"$::After_WAN_IP" == "$::Before_WAN_IP"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE WAN IP should change}
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {CPE WAN IP change success}
}

# Check LAN client can ping internet
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check WLAN can ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3052 Check WLAN 2.4G Multi SSID setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3052," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set & Get 2.4G WIFI enable
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_2nd_node$.} {Enable} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$.} {Enable} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_2nd_node$.} {Enable} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$.} {Enable} {1} 
::USER_DEFINE::CloseTR069ACS {} 

# Check & set more ap
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t1} {10} {PASS}
::CONSOLE::Wait {3}
# More_AP_1
::WEB::WebDrv_Click {id} {editBtn_1} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Is_Selected {id} {APOn_More} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {more AP 1 sould be enable}
}
::WEB::WebDrv_Click {id} {MoreAPCancel_Btn} {10} {PASS}  
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# More_AP_2
 ::WEB::WebDrv_Click {id} {editBtn_2} {10} {PASS} 
 ::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Is_Selected {id} {APOn_More} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {PASS} {more AP 2 sould be enable}
}
::WEB::WebDrv_Click {id} {MoreAPCancel_Btn} {10} {PASS}  
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=2} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_2} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 2} {10} {Status} {Enabled} 
::CONSOLE::CI_Cmd_Scan {} {wlan show status 3} {10} {Status} {Enabled} 

# Connect More AP 1 & ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.205.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Connect More AP 2 & ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_2} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_2}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.205.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Set & Get 2.4G WIFI Disable
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_2nd_node$.} {Enable} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$.} {Enable} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_2nd_node$.} {Enable} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$.} {Enable} {0} 
::USER_DEFINE::CloseTR069ACS {} 

# Check & set more ap
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t1} {10} {PASS}
::CONSOLE::Wait {3}
# More_AP_1
::WEB::WebDrv_Click {id} {editBtn_1} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Is_Selected {id} {APOn_More} {::value} {10} 
if {"$::value" != "false"} {
    ::MISC::ACTS_Dummy_Response {PASS} {more AP 1 sould be disable}
}
::WEB::WebDrv_Click {id} {MoreAPCancel_Btn} {10} {PASS}  
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# More_AP_2
 ::WEB::WebDrv_Click {id} {editBtn_2} {10} {PASS} 
 ::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Is_Selected {id} {APOn_More} {::value} {10} 
if {"$::value" != "false"} {
    ::MISC::ACTS_Dummy_Response {PASS} {more AP 2 sould be disable}
}
::WEB::WebDrv_Click {id} {MoreAPCancel_Btn} {10} {PASS}  
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show status 2} {10} {Status} {Disabled} 
::CONSOLE::CI_Cmd_Scan {} {wlan show status 3} {10} {Status} {Disabled} 

# Connect More AP 1 fail
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Result=FAIL}]

# Connect More AP 2 fail
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_2} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_2} {$Result=FAIL}]

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3053 Check WLAN 2.4G MAC Filter setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3053," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# config 2.4G WIFI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# Get DMZ wlan0 mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 
# Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# Get LAN2 wlan0 mac
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_mac} 

# set AllowedMACAddress
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac"
# Check value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac"
::USER_DEFINE::CloseTR069ACS {} 

# Check mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Is_Selected {id} {wlFltMacMode_Allow} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {wlan 2.4G mac filter should allow}
}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[2]/td[2]} "$::dmz_mac" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check mac filter from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show mac 1} {10} "$::dmz_mac" {}

# dmz can connect, lan2 can't
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=PASS}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=FAIL}]

# disable mac filter
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# dmz, lan2 can connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 

# Check mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Is_Selected {id} {wlFltMacMode_Disable} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {wlan 2.4G mac filter should disable}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check mac filter from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show macmode 1} {10} {MAC Mode = 'Disable'} {}

# remove mac list
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config mac 1 none} 
::CONSOLE::CI_Cmd {} {wlan5 config mac -i 0 none}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3054 Check WLAN 2.4G Multiple MAC filter, Disable/Enable MAC filter, and Modify MAC filter setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3054," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# config 2.4G WIFI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# Get DMZ wlan0 mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 
# Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

# set AllowedMACAddress
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac,12:34:56:AB:CD:EF"
# Check value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac,12:34:56:AB:CD:EF"
::USER_DEFINE::CloseTR069ACS {} 

# Check mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Is_Selected {id} {wlFltMacMode_Allow} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {wlan 2.4G mac filter should allow}
}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[2]/td[2]} "$::dmz_mac" {10} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[3]/td[2]} "12:34:56:AB:CD:EF" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check mac filter from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show mac 1} {10} "$::dmz_mac" {}
::CONSOLE::CI_Cmd_Scan {} {wlan show mac 1} {10} "12:34:56:AB:CD:EF" {}

# dmz can, lan2 can't connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=PASS}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=FAIL}]

# disable mac filter
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# remove mac list
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config mac 1 none} 
::CONSOLE::CI_Cmd {} {wlan5 config mac -i 0 none}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3055 Check WLAN 5G Multiple MAC filter, Disable/Enable MAC filter, Modify MAC filter setting > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3055," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# config 5G WIFI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
# Get DMZ wlan0 mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 
# Connect 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
# Get LAN2 wlan0 mac
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_mac} 

# set AllowedMACAddress
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac"
# Check value
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "$::dmz_mac"
::USER_DEFINE::CloseTR069ACS {} 

# Check mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Is_Selected {id} {wlFltMacMode_5GAllow} {::value} {10} 
if {"$::value" != "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {wlan 5G mac filter should allow}
}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[2]/td[2]} "$::dmz_mac" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check mac filter from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show mac} {10} "$::dmz_mac" {}

# dmz can connect, lan2 can't
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Result=PASS}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {www.google.com} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Result=FAIL}]

# disable mac filter
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {0}
::USER_DEFINE::CloseTR069ACS {} 

# remove mac list
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config mac 1 none} 
::CONSOLE::CI_Cmd {} {wlan5 config mac -i 0 none}

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-3018 Check Host LAN information with Multiple hosts > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3018," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set 4 clinet (LAN & WLAN) 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=123456789012}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# LAN (static ip)
::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Subnet$.137} {255.255.255.0} {$LAN_IP$} {1} 

# reboot
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

# Set 2.4G (dynamic ip)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 

# Set 5G (dynamic ip)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=123456789012}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_mac} 

# LAN (dynamic ip)
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {15}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

::CONSOLE::Wait {120} 

# Check host value
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.Hosts.} {HostNumberOfEntries} {4}
for {set ::index 1} {$::index < 5} {incr ::index} {
    set ::Para_Host "InternetGatewayDevice.LANDevice.1.Hosts.Host.$::index.HostName"
    set ::Para "InternetGatewayDevice.LANDevice.1.Hosts.Host.$::index."
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=$::Para_Host}] {::HostName}
    if {"$::HostName" == "LAN1_WKS"} {
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "$::lan1_ip" {AddressSource} {DHCP} {MACAddress} {$LAN1_WKS_MAC$} {Layer2Interface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1.} {HostName} {LAN1_WKS} {InterfaceType} {Ethernet} {Active} {1}
    } 
    if {"$::HostName" == "LAN2_WKS"} {
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "$::lan2_ip" {AddressSource} {DHCP} {MACAddress} "[string toupper $::lan2_mac]" {Layer2Interface} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$} {HostName} {LAN2_WKS} {InterfaceType} {802.11} {Active} {1}
    } 
    if {"$::HostName" == "DMZ_WKS"} {
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "$::dmz_ip" {AddressSource} {DHCP} {MACAddress} "[string toupper $::dmz_mac]" {Layer2Interface} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$} {HostName} {DMZ_WKS} {InterfaceType} {802.11} {Active} {1}
    } 
    # if {"$::HostName" == "BP2.20Mitrastar.20D9CC"} {
    #     ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "192.168.1.90" {AddressSource} {Static} {MACAddress} "E4:AB:89:71:D9:CD" {Layer2Interface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.4.} {HostName} {DMZ_WKS} {InterfaceType} {802.11} {Active} {1}
    # } 
    # if {"$::HostName" != "LAN1_WKS" && "$::HostName" != "LAN2_WKS" && "$::HostName" != "DMZ_WKS" && "$::HostName" != "BP2.20Mitrastar.20D9CC"} {
    #     ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "$LAN_Subnet$.137" {AddressSource} {Static} {LeaseTimeRemaining} {0} {MACAddress} {$ACTS_MAC$} {Layer2Interface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1.} {InterfaceType} {Ethernet} {Active} {1}
    # }
    if {"$::HostName" != "LAN1_WKS" && "$::HostName" != "LAN2_WKS" && "$::HostName" != "DMZ_WKS"} {
        ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} "$::Para" {IPAddress} "$LAN_Subnet$.137" {AddressSource} {Static} {LeaseTimeRemaining} {0} {MACAddress} {$ACTS_MAC$} {Layer2Interface} {InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1.} {InterfaceType} {Ethernet} {Active} {1}
    }
}    
::USER_DEFINE::CloseTR069ACS {} 

# Check host info from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {lanhosts show all} {20} "[string toupper $::lan2_mac]" "$::lan2_ip" "[string toupper $::lan2_mac]" {DHCP}
::CONSOLE::CI_Cmd_Scan {} {lanhosts show all} {20} "[string toupper $::dmz_mac]" "$::dmz_ip" "[string toupper $::dmz_mac]" {DHCP}
::CONSOLE::CI_Cmd_Scan {} {lanhosts show all} {20} "$LAN1_WKS_MAC$" "$::lan1_ip" "$LAN1_WKS_MAC$" {DHCP}
::CONSOLE::CI_Cmd_Scan {} {lanhosts show all} {20} "$ACTS_MAC$" "$LAN_Subnet$.137" "$ACTS_MAC$" {Static}

# Check host info from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN2_WKS} {$ip_addr=$::lan2_ip} {$mac=[string toupper $::lan2_mac]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=DMZ_WKS} {$ip_addr=$::dmz_ip} {$mac=[string toupper $::dmz_mac]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=$LAN_Subnet$.137} {$ip_addr=$LAN_Subnet$.137} {$mac=$ACTS_MAC$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS} 

<TCL_Block_End>

-CaseEnd-

<<**************************************** WLAN ****************************************>>
%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- WLAN ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-17683 Configure pre-shared key start with 0x... or 0X... string> 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-17683," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
<TCL_Block_End>
#Open Web
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
# 2.4G SSID 0x...
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=0x1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=0x1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {32} {10} {1} {1} {128} {IPv4} {no} 

# 2.4G SSID 0X...
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$Key=0X1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=0X1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {32} {10} {1} {1} {128} {IPv4} {no} 

# 5G SSID 0x...
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=0x1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=0x1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {32} {10} {1} {1} {128} {IPv4} {no} 

# 5G SSID 0X...
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$Key=0X1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=0X1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {32} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1002 Verify the default WLAN security and Pre-Shared Key for WPS WiFi certificated > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1002," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset to default 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
#get 2.4G psk
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Capture_Response {} {wlan show wpapskey 1} {30} {::response}
set psk [string trim [string range "$::response" [expr [string first "=" "$::response"]+2] [expr [string last ">" "$::response"]-1]]]
#disable one SSID
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
::CONSOLE::Wait {5}
#set PPPoE WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
# 2.4G page
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
# Check default security
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full}
#check psk is plain code
::WEB::WebDrv_Get_Value {id} {PreSharedKey} {::value} {20} 
if {"$::value" != "$psk"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {2.4G page psk doesn't show plain code} 
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {2.4G page psk is plain code}
}
#Close Web
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}
<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1027 Verify the default WLAN security and Pre-Shared Key for WPS WiFi certificated > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1027," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset to default 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
#disable one SSID
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_More {} {tefapp set unique_SSID disabled} {10} {tefapp set wifi_plus save} {10}
::CONSOLE::Wait {5}
#get 5G psk
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Capture_Response {} {wlan5 show wpapskey} {30} {::response}
set psk [string trim [string range "$::response" [expr [string first "=" "$::response"]+2] [expr [string last ">" "$::response"]-1]]]
#set PPPoE WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
# 5G page
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Check default security
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full}
#check psk is plain code
::WEB::WebDrv_Get_Value {id} {PreSharedKey} {::value} {20} 
if {"$::value" != "$psk"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {5G page psk doesn't show plain code} 
} else {
    ::MISC::ACTS_Dummy_Response {PASS} {5G page psk is plain code}
}
# Close Web
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-891 [Negative] Connect Wifi and LAN port via same mac address >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-891," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Connect WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
#Set WLAN client mac same as LAN client
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 up} {10}
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::wlan0_mac}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::eth1_mac} 
::CONSOLE::Setup_WKS_MAC {LAN2_WKS} {wlan0} "$::eth1_mac"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN2_WKS} {$mac=$::eth1_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::CONSOLE::Setup_WKS_MAC {LAN2_WKS} {wlan0} "$::wlan0_mac"
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 down} {10}

#LAN client
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig eth1 down} {10} {ifconfig eth1 up} {10}
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {10} {dhclient eth1} {10}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN1_WKS} {$mac=$::eth1_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-970 [Negative] WMM can't disable in 802.11n >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-970," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# To 2.4G page
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
# Advanced: t4
::WEB::WebDrv_Click {id} {t4} {20} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Get_Text {id} {wlMode} {::default_mode} {10} 
#change to b+g+n
::WEB::WebDrv_List_Select {id} {wlMode} {text} {802.11b+g+n} {20} 
::WEB::WebDrv_Click {id} {sysSubmit} {20} {PASS} 
::CONSOLE::Wait {10} 
::WEB::WebDrv_Check_Text {id} {WMM} {Enabled} {20} {PASS} {full} 
#change to n only
::WEB::WebDrv_List_Select {id} {wlMode} {text} {802.11n} {20} 
::WEB::WebDrv_Click {id} {sysSubmit} {20} {PASS} 
::CONSOLE::Wait {10} 
::WEB::WebDrv_Check_Text {id} {WMM} {Enabled} {20} {PASS} {full}
#back to default
::WEB::WebDrv_List_Select {id} {wlMode} {text} "$::default_mode" {20} 
::WEB::WebDrv_Click {id} {sysSubmit} {20} {PASS} 
::CONSOLE::Wait {10} 
::WEB::WebDrv_Check_Text {id} {WMM} {Enabled} {20} {PASS} {full} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-981 [Negative] WMM can't disable in 802.11n or ac >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-981," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# To 5G page
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
# Advanced: t4
::WEB::WebDrv_Click {id} {t4} {20} {PASS} 
::CONSOLE::Wait {5}
::WEB::WebDrv_Get_Text {id} {Wirelessband} {::default_mode} {10} 
#change to ac
::WEB::WebDrv_List_Select {id} {Wirelessband} {text} {802.11ac} {20} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}} 
::CONSOLE::Wait {15} 
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wmm} {5} {WMM = Enabled} {} 
#change to n only
::WEB::WebDrv_List_Select {id} {Wirelessband} {text} {802.11n} {20} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}} 
::CONSOLE::Wait {15}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wmm} {5} {WMM = Enabled} {} 
#change to a only
::WEB::WebDrv_List_Select {id} {Wirelessband} {text} {802.11a} {20} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}} 
::CONSOLE::Wait {15}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wmm} {5} {WMM = Enabled} {} 
#back to default
::WEB::WebDrv_List_Select {id} {Wirelessband} {text} "$::default_mode" {20} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}} 
::CONSOLE::Wait {15}
::CONSOLE::CI_Cmd_Scan {} {wlan5 show wmm} {5} {WMM = Enabled} {} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-914 Verify the WLAN Pre-Shared Key with different method and format > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-914," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset default
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Auto gernerator psk
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {5} 
::WEB::WebDrv_Get_Value {id} {PreSharedKey} {::value} {5} 
::WEB::WebDrv_Switch_To_Frame {default} {} {5}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=$::value}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# 8-63 ASCII
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=123456789012345678901234567890123456789012345678901234567890abc}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=123456789012345678901234567890123456789012345678901234567890abc}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # 64 hex(2841-Spain & HB3 doesn't support 64 char)
# if {"$PROJECT$" == "HB3"} {
#     set ::x 0
# }
# if {"$sysName$" == "GPT-2841GX4X5" || "$sysName$" == "GPT-2742GX4X5v6"} {
#     if {"$Key_Account$" == "Spain"} {
#         set ::x 0
#     }
# } 
# if {"$::x" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {project not support 64 Hex psk}
# } else {
#     ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=fea01a0defa323c4da7d55689846592a8d2b700326a8128376a1727e29d500ab}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
#     ::WEB::WebDrv_CloseBrowser {A1000} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=fea01a0defa323c4da7d55689846592a8d2b700326a8128376a1727e29d500ab}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
#     ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}    
# }
<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-921 Verify the WLAN Pre-Shared Key with different method and format > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-921," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset default
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]

#Auto gernerator psk
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {5} 
::WEB::WebDrv_Get_Value {id} {PreSharedKey} {::value} {5} 

::WEB::WebDrv_Switch_To_Frame {default} {} {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=$::value}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

#8-63 ASCII
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

#64 hex(HB3 doesn't support 64 char)
if {"$PROJECT$" == "HB3"} {
    set ::x 0
}
if {"$sysName$" == "GPT-2841GX4X5"} {
    if {"$Key_Account$" == "Spain"} {
        set ::x 0
    }
} 
if {"$::x" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {project not support 64 Hex psk}
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=fea01a0defa323c4da7d55689846592a8d2b700326a8128376a1727e29d500ab}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=fea01a0defa323c4da7d55689846592a8d2b700326a8128376a1727e29d500ab}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
    ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
}
#close Web
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Recover env 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=Auto} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-916 Verify the WLAN Encryption Type > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-916," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
<TCL_Block_End>
#set TR069
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
# WLAN client Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK AES} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
#Check from ACS
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {WPAEncryptionModes} {AESEncryption} {IEEE11iEncryptionModes} {AESEncryption}
::CONSOLE::Wait {5}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}
#Check from CLI
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show encryption 1} {3} {Encryption = } {AES} 
#Check from Wizard

#Check Client can access network
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
#reboot CPE
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"
#Check Client can access network
::CONSOLE::Wait {20} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-856 Verify the WLAN MAC Filter with "Disable","Allow" and "Deny" > 
# Bug : set client1 mac to list & allow ,but client2 connect success too (Expectation: only client1 can connect success)
# Bug : change allow to deny, mac list become empty (Expectation: client1 mac in mac list should still exist)

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-856," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set 2.4G setting
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
# DMZ Connect 2.4G 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# LAN2 Connect 2.4G 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# Get DMZ WiFi client mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_wifi_mac} 
# To 2.4G page
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::dmz_wifi_mac" {10}
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS}  
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Allow
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}  
::WEB::WebDrv_Click {id} {wlFltMacMode_Allow} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
# DMZ client1 & LAN2 client2 Connect to 2.4G WIFI
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=FAIL}]
# Deny
::WEB::WebDrv_Click {id} {wlFltMacMode_Deny} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# Disable
::WEB::WebDrv_Click {id} {wlFltMacMode_Disable} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# delete mac list rule
::WEB::WebDrv_Click {id} {deleteBtn_0} {5} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {Button_Delete} {5} {PASS} 
::CONSOLE::Wait {8} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-877 Verify the WLAN MAC Filter with "Disable","Allow" and "Deny" > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-877," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set 5G GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect WLAN 5G SSID
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# Get DMZ WiFi client mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_wifi_mac} 

# To 5G page
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::dmz_wifi_mac" {10}
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS}  
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Allow
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}  
::WEB::WebDrv_Click {id} {wlFltMacMode_5GAllow} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
# DMZ client1 & LAN2 client2 Connect to 5G WIFI
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Result=FAIL}]
# Deny
::WEB::WebDrv_Click {id} {wlFltMacMode_5GDeny} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Result=FAIL}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# Disable
::WEB::WebDrv_Click {id} {wlFltMacMode_5GDisable} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# delete mac list rule
::WEB::WebDrv_Click {id} {deleteBtn_0} {5} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {Button_Delete} {5} {PASS} 
::CONSOLE::Wait {8} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-1067 Disabled SCS and OCAC function,change wireless channel to all possible value, check it can work well > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1067," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# connecct ACS server
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Disable SCS, OCAC function
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config scs 0} 
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd {} {wlan5 config smlssDFS 0} 
::CONSOLE::Wait {5} 

# Check all channel can work 
for {set ::i 36} {$::i <= 64} {incr ::i 4} {
    # Change 5G channel
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} "$::i"
    ::USER_DEFINE::CloseTR069ACS {} 

    # Check Channel on Adv GUI
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {network} {20}
    ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::i" {10} {PASS} {full} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    # Check Channel is correct 
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan {} {iwlist wlan0 scanning | grep -A4 "$SSID_5G$"} {10} "Channel $::i" {} 
}

# Check all channel can work (120-128 dongle can't scan)
for {set ::i 100} {$::i <= 116} {incr ::i 4} {
    # Change 5G channel
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} "$::i"
    ::USER_DEFINE::CloseTR069ACS {} 

    # Check Channel on Adv GUI
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {network} {20}
    ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Check_Value {id} {ChannelSelection} "$::i" {10} {PASS} {full} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    # Check Channel is correct 
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
    ::CONSOLE::CI_Cmd_Scan {} {iwlist wlan0 scanning | grep -A4 "$SSID_5G$"} {10} "Channel $::i" {} 
}

# Enable SCS, OCAC function(Bug: channel should be changed to Auto)
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config scs 1} 
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd {} {wlan5 config smlssDFS 1}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {(Auto)} {}  

# Back to default
::CONSOLE::CI_Cmd {} {wlan5 config scs 0} 
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd {} {wlan5 config smlssDFS 0}
::CONSOLE::Wait {5} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-935 Configure multiple SSID name > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-935," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Set 2.4G More AP1 SSID special char ~!@#$%&*()_+{}|:<>?-=[];,./  ||  AP2 SSID 1234+space+qwer 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[1]/div/table/tbody/tr[2]/td[3]} {~!@#$%&*()_+{}|:<>?-=[];,./} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=2} {$Enable_Wireless_LAN=ON} {$SSID=8888 qazwsx} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[1]/div/table/tbody/tr[3]/td[3]} {8888 qazwsx} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check SSID from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_2nd_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];,./} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_3rd_node$.} {SSID} {8888 qazwsx} 
::USER_DEFINE::CloseTR069ACS {} 

# Set WKS WLAN & Connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=8888 qazwsx} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=8888 qazwsx}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Power off & on
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {40} 

# ping again
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-950 Verify the all client can ping each other > 
# BUG: Redmine ID 168227
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-950," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF} {$Inter_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_IP$} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-952 Configure multiple SSID name > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-952," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set 5G More AP1 SSID special char ~!@#$%&*()_+{}|:<>?-=[];,./  ||  AP2 SSID 1234+space+qwer 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[1]/div/table/tbody/tr[2]/td[3]} {~!@#$%&*()_+{}|:<>?-=[];,./} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=2} {$Enable_Wireless_LAN=ON} {$SSID=8888 qazwsx} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[1]/div/table/tbody/tr[3]/td[3]} {8888 qazwsx} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check SSID from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_2nd_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];,./} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_3rd_node$.} {SSID} {8888 qazwsx} 
::USER_DEFINE::CloseTR069ACS {} 

# Set WKS WLAN & Connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];,./}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=8888 qazwsx} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=8888 qazwsx}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Power off & on
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {40} 

# ping again
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-871 [Negative] Connect Wifi and LAN port via same mac address > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-871," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set 2.4G WiFi & Connect
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

# Check 2.4G client ping internet success
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::DMZ_MAC} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {ifconfig wlan0 down} 

# Modify wire lan client mac same as wifi client
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::LAN1_MAC} 
::CONSOLE::Setup_WKS_MAC {LAN1_WKS} {eth1} "$::DMZ_MAC"
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

# Check wire lan client can get ip & ping internet success
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Setup_WKS_MAC {LAN1_WKS} {eth1} "$::LAN1_MAC"
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-941 Verify the multiple SSID MAC Filter with Disable,Allow and Deny > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-941," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set More AP 1
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Mac filter set Deny & empty list
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config macmode 2 2} 

# Client 1 & 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Get DMZ_WKS wlan0 mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::DMZ_MAC} 

# Mac filter set Allow & DMZ_MAC
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlFltMacMode_Ssid} {text} {$SSID_24G$_1} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::DMZ_MAC" {10}
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS}  
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Allow
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}  
::WEB::WebDrv_Click {id} {wlFltMacMode_Allow} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Client 1 can connect success & client 2 can't connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Result=FAIL}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Deny & DMZ_MAC
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config macmode 2 2} 
::CONSOLE::Wait {5} 

# Client 1 can't connect success & client 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Result=FAIL}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Disable & DMZ_MAC
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan config macmode 2 0} 
::CONSOLE::Wait {5} 

# Client 1 can & client 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Disable & delete DMZ_MAC
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlFltMacMode_Ssid} {text} {$SSID_24G$_1} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {deleteBtn_0} {5} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {Button_Delete} {5} {PASS} 
::CONSOLE::Wait {8} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L1%
+CaseStart+
< UTP-958 Verify the multiple SSID MAC Filter with Disable,Allow and Deny > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-958," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set More AP 1
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Mac filter set Deny & empty list
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config macmode -i 1 2} 

# Client 1 & 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Get LAN2_WKS wlan0 mac
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::LAN2_MAC} 

# Mac filter set Allow & LAN2_MAC
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlSsidIdx} {text} {$SSID_5G$_1} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::LAN2_MAC" {10}
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS}  
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Allow
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}  
::WEB::WebDrv_Click {id} {wlFltMacMode_5GAllow} {5} {PASS} 
::WEB::WebDrv_Click {id} {Apply_ID} {10} {PASS} 
::CONSOLE::Wait {15}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Client 1 can connect success & client 2 can't connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Result=FAIL}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Deny & LAN2_MAC
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config macmode -i 1 2} 
::CONSOLE::Wait {5} 

# Client 1 can't connect success & client 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Result=FAIL}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Disable & LAN2_MAC
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config macmode -i 1 0} 
::CONSOLE::Wait {5} 

# Client 1 can & client 2 can connect success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Mac filter set Disable & delete DMZ_MAC
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlSsidIdx} {text} {$SSID_5G$_1} {10} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {deleteBtn_0} {5} {PASS} 
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {Button_Delete} {5} {PASS} 
::CONSOLE::Wait {8} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-963 Verify the multiple SSID Personal Security--WPA / WPA2 / WPA2 with WPA Compatiable > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-963," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# # back default
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# # Set WAN
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

# Set 5G More AP security open & WPA2
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config security -i 1 2} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=Open/EnhancedOpen} {$Inter_BSSID_Isolation=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=Open/EnhancedOpen Open&OWE} {$Key=} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=2} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_2} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=off} {$Intra_BSSID_Isolation=off}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check SSID from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_2nd_node$.} {BeaconType} {Open/EnhancedOpen}
if {"$PROJECT$" == "HB3"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_3rd_node$.} {BeaconType} {11i}  
} else {  
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_3rd_node$.} {BeaconType} {WPA2-PSK}  
}
::USER_DEFINE::CloseTR069ACS {} 

# Set WKS WLAN & Connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_2} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_2}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Power off & on
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {40} 

# ping again
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::DMZ_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3056 Check WLAN 2.4G MAC filter to Maximum entries > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3056," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 1 client Connect 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Get DMZ wlan0 MAC
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_wlan0_mac} 

# Set 2.4G mac filter on TR069 server
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1}  
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "AA:BB:CC:DD:EE:10,AA:BB:CC:DD:EE:11,AA:BB:CC:DD:EE:12,AA:BB:CC:DD:EE:13,AA:BB:CC:DD:EE:14,AA:BB:CC:DD:EE:15,AA:BB:CC:DD:EE:16,AA:BB:CC:DD:EE:17,AA:BB:CC:DD:EE:18,AA:BB:CC:DD:EE:19,AA:BB:CC:DD:EE:20,AA:BB:CC:DD:EE:21,AA:BB:CC:DD:EE:22,AA:BB:CC:DD:EE:23,AA:BB:CC:DD:EE:24,AA:BB:CC:DD:EE:25,AA:BB:CC:DD:EE:26,AA:BB:CC:DD:EE:27,AA:BB:CC:DD:EE:28,AA:BB:CC:DD:EE:29,AA:BB:CC:DD:EE:30,AA:BB:CC:DD:EE:31,AA:BB:CC:DD:EE:32,AA:BB:CC:DD:EE:33,AA:BB:CC:DD:EE:34,AA:BB:CC:DD:EE:35,AA:BB:CC:DD:EE:36,$::dmz_wlan0_mac" 

# Check 2.4G mac filter value on TR069 server
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "AA:BB:CC:DD:EE:10,AA:BB:CC:DD:EE:11,AA:BB:CC:DD:EE:12,AA:BB:CC:DD:EE:13,AA:BB:CC:DD:EE:14,AA:BB:CC:DD:EE:15,AA:BB:CC:DD:EE:16,AA:BB:CC:DD:EE:17,AA:BB:CC:DD:EE:18,AA:BB:CC:DD:EE:19,AA:BB:CC:DD:EE:20,AA:BB:CC:DD:EE:21,AA:BB:CC:DD:EE:22,AA:BB:CC:DD:EE:23,AA:BB:CC:DD:EE:24,AA:BB:CC:DD:EE:25,AA:BB:CC:DD:EE:26,AA:BB:CC:DD:EE:27,AA:BB:CC:DD:EE:28,AA:BB:CC:DD:EE:29,AA:BB:CC:DD:EE:30,AA:BB:CC:DD:EE:31,AA:BB:CC:DD:EE:32,AA:BB:CC:DD:EE:33,AA:BB:CC:DD:EE:34,AA:BB:CC:DD:EE:35,AA:BB:CC:DD:EE:36,$::dmz_wlan0_mac" 
::USER_DEFINE::CloseTR069ACS {} 

# Check 2.4G mac filter list from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show mac 1} {10} {AA:BB:CC:DD:EE:10} {} {AA:BB:CC:DD:EE:11} {} {AA:BB:CC:DD:EE:12} {} {AA:BB:CC:DD:EE:13} {} {AA:BB:CC:DD:EE:14} {} {AA:BB:CC:DD:EE:15} {} {AA:BB:CC:DD:EE:16} {} {AA:BB:CC:DD:EE:17} {} {AA:BB:CC:DD:EE:18} {} {AA:BB:CC:DD:EE:19} {} {AA:BB:CC:DD:EE:20} {} {AA:BB:CC:DD:EE:21} {} {AA:BB:CC:DD:EE:22} {} {AA:BB:CC:DD:EE:23} {} {AA:BB:CC:DD:EE:24} {} {AA:BB:CC:DD:EE:25} {} {AA:BB:CC:DD:EE:26} {} {AA:BB:CC:DD:EE:27} {} {AA:BB:CC:DD:EE:28} {} {AA:BB:CC:DD:EE:29} {} {AA:BB:CC:DD:EE:30} {} {AA:BB:CC:DD:EE:31} {} {AA:BB:CC:DD:EE:32} {} {AA:BB:CC:DD:EE:33} {} {AA:BB:CC:DD:EE:34} {} {AA:BB:CC:DD:EE:35} {} {AA:BB:CC:DD:EE:36} {} "$::dmz_wlan0_mac" {}

# Check 2.4G mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
for {set index 2} {$index < 29} {incr index} {
    ::WEB::WebDrv_Check_Text {xpath} "//*\[@id=\"mac_table\"\]/tbody/tr\[$index\]/td\[2\]" "AA:BB:CC:DD:EE:[expr $index + 8]" {10} {PASS} {full} 
}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[29]/td[2]} "$::dmz_wlan0_mac" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wlan client can't disconnect
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# back default setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {MACAddressControlEnabled} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} {}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-3057 Check WLAN 5G MAC filter to Maximum entries > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3057," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 1 client Connect 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Get LAN2 wlan0 MAC
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_wlan0_mac} 

# Set 5G mac filter on TR069 server
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "AA:BB:CC:DD:EE:10,AA:BB:CC:DD:EE:11,AA:BB:CC:DD:EE:12,AA:BB:CC:DD:EE:13,AA:BB:CC:DD:EE:14,AA:BB:CC:DD:EE:15,AA:BB:CC:DD:EE:16,AA:BB:CC:DD:EE:17,AA:BB:CC:DD:EE:18,AA:BB:CC:DD:EE:19,AA:BB:CC:DD:EE:20,AA:BB:CC:DD:EE:21,AA:BB:CC:DD:EE:22,AA:BB:CC:DD:EE:23,AA:BB:CC:DD:EE:24,AA:BB:CC:DD:EE:25,AA:BB:CC:DD:EE:26,AA:BB:CC:DD:EE:27,AA:BB:CC:DD:EE:28,AA:BB:CC:DD:EE:29,AA:BB:CC:DD:EE:30,AA:BB:CC:DD:EE:31,AA:BB:CC:DD:EE:32,AA:BB:CC:DD:EE:33,AA:BB:CC:DD:EE:34,AA:BB:CC:DD:EE:35,AA:BB:CC:DD:EE:36,$::lan2_wlan0_mac" 

# Check 5G mac filter value on TR069 server
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {1} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} "AA:BB:CC:DD:EE:10,AA:BB:CC:DD:EE:11,AA:BB:CC:DD:EE:12,AA:BB:CC:DD:EE:13,AA:BB:CC:DD:EE:14,AA:BB:CC:DD:EE:15,AA:BB:CC:DD:EE:16,AA:BB:CC:DD:EE:17,AA:BB:CC:DD:EE:18,AA:BB:CC:DD:EE:19,AA:BB:CC:DD:EE:20,AA:BB:CC:DD:EE:21,AA:BB:CC:DD:EE:22,AA:BB:CC:DD:EE:23,AA:BB:CC:DD:EE:24,AA:BB:CC:DD:EE:25,AA:BB:CC:DD:EE:26,AA:BB:CC:DD:EE:27,AA:BB:CC:DD:EE:28,AA:BB:CC:DD:EE:29,AA:BB:CC:DD:EE:30,AA:BB:CC:DD:EE:31,AA:BB:CC:DD:EE:32,AA:BB:CC:DD:EE:33,AA:BB:CC:DD:EE:34,AA:BB:CC:DD:EE:35,AA:BB:CC:DD:EE:36,$::lan2_wlan0_mac" 
::USER_DEFINE::CloseTR069ACS {} 

# Check 5G mac filter list from CLI command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show mac -i 0} {10} {AA:BB:CC:DD:EE:10} {} {AA:BB:CC:DD:EE:11} {} {AA:BB:CC:DD:EE:12} {} {AA:BB:CC:DD:EE:13} {} {AA:BB:CC:DD:EE:14} {} {AA:BB:CC:DD:EE:15} {} {AA:BB:CC:DD:EE:16} {} {AA:BB:CC:DD:EE:17} {} {AA:BB:CC:DD:EE:18} {} {AA:BB:CC:DD:EE:19} {} {AA:BB:CC:DD:EE:20} {} {AA:BB:CC:DD:EE:21} {} {AA:BB:CC:DD:EE:22} {} {AA:BB:CC:DD:EE:23} {} {AA:BB:CC:DD:EE:24} {} {AA:BB:CC:DD:EE:25} {} {AA:BB:CC:DD:EE:26} {} {AA:BB:CC:DD:EE:27} {} {AA:BB:CC:DD:EE:28} {} {AA:BB:CC:DD:EE:29} {} {AA:BB:CC:DD:EE:30} {} {AA:BB:CC:DD:EE:31} {} {AA:BB:CC:DD:EE:32} {} {AA:BB:CC:DD:EE:33} {} {AA:BB:CC:DD:EE:34} {} {AA:BB:CC:DD:EE:35} {} {AA:BB:CC:DD:EE:36} {} "$::lan2_wlan0_mac" {}

# Check 2.4G mac filter from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
for {set index 2} {$index < 29} {incr index} {
    ::WEB::WebDrv_Check_Text {xpath} "//*\[@id=\"mac_table\"\]/tbody/tr\[$index\]/td\[2\]" "AA:BB:CC:DD:EE:[expr $index + 8]" {10} {PASS} {full} 
}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="mac_table"]/tbody/tr[29]/td[2]} "$::lan2_wlan0_mac" {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wlan client can't disconnect
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# back default setting
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {MACAddressControlEnabled} {0} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.} {AllowedMACAddresses} {}
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-832 SSID and Passowrd can be modify include special character > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-832," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# set WLAN 2.4G & 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./24G} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./5G} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# TR069 SetParameterValues 2.4G/5G SSID
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./24G}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./5G}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

#Check GUI setting
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# 2.4G
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./24G} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
# 5G
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {~!@#$%&*()_+{}|:<>?-=[];`,./5G} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect WLAN 2.4G & 5G and surf internet success
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./24G} {$Security=WPA2-PSK} {$Encry=AES} {$Key=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./24G}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./5G} {$Security=WPA2-PSK} {$Encry=AES} {$Key=~!@#$%&*()_+{}|:<>?-=\[\];`,./}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=~!@#$%&*()_+{}|:<>?-=\[\];`,./5G}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3037 Check WLAN 5G Channel for all possible value > 
# TP Link dongle can't support 120~128 , TP Link dongle doesn't stable(some channel connect fail, when dongle crash (maybe too hot?)) 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3037," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# reset
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# set WLAN 5G 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=Auto} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}] 

# TR069 check 5G possible channels
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {1} 
if {"$PROJECT$" == "HB3"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {PossibleChannels} {36,40,44,48,52,56,60,64,100,104,108,112,116,120,124,128}     
}
if {"$sysName$" == "GPT-2841GX4X5"} {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {PossibleChannels} {36,40,44,48,52,56,60,64,100,104,108,112} 
} else {
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {PossibleChannels} {$5G_PossibleChannels$} 
}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {0}
::USER_DEFINE::CloseTR069ACS {} 

# TP Link dongle can't support 120~128 
if {"$PROJECT$" == "HB3"} {
    set ::Channel_All {36 40 44 48 52 56 60 64 100 104 108 112 116 120 124 128}
    set ::Channel_Size 13
} else {
    set ::Channel_All {36 40 44 48 52 56 60 64 100 104 108 112}
    set ::Channel_Size 12
}
for {set ::i 0} {$::i < "$::Channel_Size"} {incr ::i} {
    # Set all possible channel
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} "[lindex $::Channel_All $::i]" 
    ::USER_DEFINE::CloseTR069ACS {}
    ::CONSOLE::Wait {5}

    # Check Channel from Adv GUI
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::WEB::WebDrv_Mouse_Over {id} {network} {10}
    ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
    if {"$::value" == "[lindex $::Channel_All $::i]"} {
        ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
    } else {
        ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
    }
    ::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    # Check Channel from CLI Command
    ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
    ::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Channel = } "[lindex $::Channel_All $::i]" 

    # Check 5G client can surf internet
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 
}

# Set auto channel on
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {1} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.Channel}] {::value}
if {[string first "$::value" "$::Channel_All"] >= 0} {
    ::MISC::ACTS_Dummy_Response {PASS} {CPE auto change to one supported channel success} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {CPE auto change to one supported channel fail} 
}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

# Check Channel from Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {20} 
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Channel is correct} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Channel is wrong} 
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check Channel from CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {5} {Auto} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {www.google.com} {PASS} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-844 Check if Wireless Calibration is done > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-844," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
if {"$sysName$" == "GPT-2841GX4X5"} {
    ::CONSOLE::CI_Cmd_Scan {} {sys Calibration_Verification_24g} {10} {calibration is done!} {} 
    ::CONSOLE::CI_Cmd_Scan {} {sys Calibration_Verification_5g} {10} {calibration is done!} {}     
} else {
    ::CONSOLE::CI_Cmd_Scan {} {sys Calibration_Verification_24g} {10} {Calibration is done!} {} 
    ::CONSOLE::CI_Cmd_Scan {} {sys Calibration_Verification_5g} {10} {Calibration is done!} {}      
}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-894 SCS should be auto disable under 5G channel set to Manual. > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-894," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check 5G default setting is correct, SCS disable & Channel is Auto
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
# Check 5G SCS is enable
::WEB::WebDrv_Is_Selected {id} {SCS} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {SCS should be enable in default setting}
} 
::WEB::WebDrv_Click {id} {t0} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {10} 
# Check 5G channel is Auto
if {"$::value" == "0"} {
    ::MISC::ACTS_Dummy_Response {PASS} {Default 5G channel is correct}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {Default 5G channel should be Auto}
}
::WEB::WebDrv_List_Select {id} {ChannelSelection} {text} "$5G_Channel$" {20} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15} 
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
# Check 5G SCS is disable
::WEB::WebDrv_Is_Selected {id} {SCS} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {SCS should be disable after channel is manual}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check SCS is 0 from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.X_TELEFONICA_COM.} {SCSEnable} {0}
::USER_DEFINE::CloseTR069ACS {} 

# Change Channel (Auto/Manual), and check SCS status 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_List_Select {id} {ChannelSelection} {text} "Auto" {20} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15} 
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
# Check 5G SCS is enable
::WEB::WebDrv_Is_Selected {id} {SCS} {::value} {10} 
if {"$::value" == "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {SCS should be enable after channel is Auto}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check SCS status from TR069 (value=1)
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.X_TELEFONICA_COM.} {SCSEnable} {1}
::CONSOLE::Wait {5} 
# Change 5G channel to manual from TR069
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {100}
::CONSOLE::Wait {5} 
# Check SCS status from TR069 (value=0)
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.X_TELEFONICA_COM.} {SCSEnable} {0} 
::USER_DEFINE::CloseTR069ACS {} 

# Check SCS status on GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
# Check 5G SCS is enable
::WEB::WebDrv_Is_Selected {id} {SCS} {::value} {10} 
if {"$::value" == "true"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {SCS should be disable after channel is change to manual}
} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# set WLAN GUI setting
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-857 Verify the WLAN Client Isolation(Intra-BSS) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-857," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set More AP 1 isolation (Enabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Intra_BSSID_Isolation=ON} {$Inter_BSSID_Isolation=OFF} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (Enabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]

# can't ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# Set More AP 1 isolation (disabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF} {$Inter_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (disabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]

# can ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-859 Verify the WLAN MBSSID/LAN Isolation > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-859," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set More AP 1 isolation (Disabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Inter_BSSID_Isolation=OFF} {$Intra_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (Disabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]

# can ping network 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

# can ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Set More AP 1 isolation (Enabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=ON} {$Intra_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (Enabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]

# can ping network 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

# can't ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-872 Changed WLAN 2.4G setting. Verify if effect the WLAN 5G connection > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-872," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set 2.4G & 5G wifi and connect client
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
# 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# enable hide ssid on 2.4G page
::MISC::ACTS_Dummy_Response {WARNING} {Change Hide SSID to Enabled}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {HideSSID} {true} {10} {PASS} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change channel 2.4G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=7} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 2.4G mac filter
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::dmz_mac" {10} 
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 2.4G advanced feature
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlTxPwrPcnt} {option_value} {80} {10} 
::WEB::WebDrv_List_Select {id} {wlPreamble} {option_value} {0} {10} 
::WEB::WebDrv_List_Select {id} {wlHT_BW} {option_value} {1} {10} 
::WEB::WebDrv_Click {id} {sysSubmit} {10} {PASS} 
::CONSOLE::Wait {25}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change security on 2.4G page
::MISC::ACTS_Dummy_Response {WARNING} {Change security to WPA2/WPA3 PSK&SAE}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {moreSecurity} {option_value} {15} {20}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-873 Verify the all client can ping each other > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-873," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set 2.4G & 5G wifi and connect client
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

# 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

::CONSOLE::Wait {10} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {et1} {$LAN_IP$} {::wks_ip} {PASS} 

# Get WKS IP
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 

# LAN1
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# ping each other
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-878 Verify the WLAN Client Isolation(Intra-BSS) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-878," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set 5G More AP 1 isolation (Enabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$Inter_BSSID_Isolation=OFF} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (Enabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# can't ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {FAIL} {64} {5} {1} {1} {128} {IPv4} {no} 

# Set More AP 1 isolation (disabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF} {$Inter_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect with isolation (disabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# can ping each other
::CONSOLE::Renew_WKS_IP_Address {DMZ_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-880 Verify the WLAN MBSSID/LAN Isolation > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-880," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set more ap
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=ON} {$Inter_BSSID_Isolation=ON}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# client_1 connect 5G general SSID, client_2 connect 5G more ap 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::DMZ_IP} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::LAN2_IP} 

# can surf internet, but can't ping each other
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::LAN2_IP" {FAIL} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# close MBSSID/LAN Isolation
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=OFF} {$Inter_BSSID_Isolation=OFF}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# client_2 connect 5G more ap 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# can surf internet and ping each other
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::LAN2_IP" {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# back to MBSSID/LAN Isolation on
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Intra_BSSID_Isolation=ON} {$Inter_BSSID_Isolation=ON}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-892 Changed WLAN 5G setting. Verify if effect the WLAN 2.4G connection > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-892," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set 2.4G & 5G wifi and connect client
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
# 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# enable hide ssid on 5G page
::MISC::ACTS_Dummy_Response {WARNING} {Change Hide SSID to Enabled}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {HideSSID} {true} {10} {PASS} 
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change channel 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=44} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 5G mac filter
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_mac} 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::lan2_mac" {10} 
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 5G advanced feature
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {BeaconInterval} {95} {10} 
::WEB::WebDrv_Set_Value {id} {DTIMInterval} {4} {10} 
::WEB::WebDrv_List_Select {id} {wlPmf_5G} {option_value} {optional} {10} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {25}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change security on 5G page
::MISC::ACTS_Dummy_Response {WARNING} {Change security to WPA2/WPA3 PSK&SAE}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {AuthenticationSelection} {option_value} {15} {20}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Set_Value {id} {PreSharedKey} "1234567890" {20} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check wifi clients are still work
# 2.4G 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
# 5G
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-893 Verify the all client can ping each other > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-893," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect 2.4G & 5G
# 2.4G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# get wks ip
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip} 
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 

# LAN ping
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# 2.4G client ping
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# 5G client ping
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$LAN_IP$" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "172.202.77.1" {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-948 Negative: Enabled WLAN or not WLAN function. Check the MBSS can work fine (2.4G) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-948," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=2.4G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Start SIP server
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

# Connect 2.4G More AP 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$_1}]

# play IPTV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# 2.4G more ap 1 ping
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 2.4G mac filter
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::dmz_mac" {10} 
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 2.4G more ap 1 ping
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 2.4G advanced feature
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlTxPwrPcnt} {option_value} {80} {10} 
::WEB::WebDrv_List_Select {id} {wlPreamble} {option_value} {0} {10} 
::WEB::WebDrv_List_Select {id} {wlHT_BW} {option_value} {1} {10} 
::WEB::WebDrv_Click {id} {sysSubmit} {10} {PASS} 
::CONSOLE::Wait {25}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 2.4G more ap 1 ping
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change security on 2.4G page
::MISC::ACTS_Dummy_Response {WARNING} {Change security to WPA2/WPA3 PSK&SAE}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::CONSOLE::Wait {10} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_List_Select {id} {moreSecurity} {option_value} {15} {20}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 2.4G more ap 1 ping
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-965 Negative: Enabled WLAN or not WLAN function. Check the MBSS can work fine (5G) > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-965," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Start SIP server
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

# Connect 5G More AP 1
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# play IPTV
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# 5G more ap 1 ping
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change channel 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=44} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G more ap 1 ping
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no}

# Change 5G mac filter
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_WKS_MAC {LAN2_WKS} {wlan0} {::lan2_mac} 
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t2} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {sysAddUserBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {wlFltMacAddr} "$::lan2_mac" {10} 
::WEB::WebDrv_Click {id} {wlFltMacAddr_AppluBtn} {10} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G more ap 1 ping
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change 5G advanced feature
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {10}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {10} {PASS}
::CONSOLE::Wait {15}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_Value {id} {BeaconInterval} {95} {10} 
::WEB::WebDrv_Set_Value {id} {DTIMInterval} {4} {10} 
::WEB::WebDrv_List_Select {id} {wlPmf_5G} {option_value} {optional} {10} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {25}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G more ap 1 ping
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Change security on 5G page
::MISC::ACTS_Dummy_Response {WARNING} {Change security to WPA2/WPA3 PSK&SAE}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {AuthenticationSelection} {option_value} {15} {20}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {3}
twapi::send_keys {{ENTER}}
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {1} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# 5G more ap 1 ping
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# recover env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-916 Verify the WLAN Encryption Type > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-916," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=11} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Set WKS WLAN & Connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check setting sync with TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {WPAEncryptionModes} {AESEncryption} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {IEEE11iEncryptionModes} {AESEncryption} 
::USER_DEFINE::CloseTR069ACS {} 

# Check setting sync with CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan show encryption 1} {10} {Encryption = AES} {} 

# Power off & on
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {40} 

# Check WIFI client can still ping internet after power off/on
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-923 Verify the WLAN Encryption Type > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-923," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Set WKS WLAN & Connect
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check setting sync with TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {WPAEncryptionModes} {AESEncryption} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {IEEE11iEncryptionModes} {AESEncryption} 
::USER_DEFINE::CloseTR069ACS {} 

# Check setting sync with CLI Command
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd_Scan {} {wlan5 show encryption} {10} {Encryption = AES} {} 

# Power off & on
if {"$use_shield_box$" == "true"} {
    ::MISC::Setup_Power_Switch {SW_3} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_3} {on}    
} else {
    ::MISC::Setup_Power_Switch {SW_1} {off}
    ::CONSOLE::Wait {10} 
    ::MISC::Setup_Power_Switch {SW_1} {on}
}
::CONSOLE::Local
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS} 
::CONSOLE::Wait {40} 

# Check WIFI client can still ping internet after power off/on
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

# %ENV-L3%
# +CaseStart+
# < UTP-868  Negative: Verifiy WLAN fixed and auto channel switch test > 
# # Discuss: Dongle doesn't support channel 12 & 13 (only AX dongle can support)
# <TCL_Block_Begin>
# # Check if project has this AA case
# if {[string first "UTP-868," "$AA_Case$"] == -1 } {
#     ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
# }
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000}

# # Connect 2.4G client
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
# ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# for {set ::i 1} {$::i < 14} {incr ::i} {
#     # Change channel to auto & manual
#     ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$Channel=Auto}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
#     ::WEB::WebDrv_CloseBrowser {A1000} 

#     # Check from CLI command
#     ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
#     ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel =} {Auto} 

#     # Check from TR069
#     ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
#     ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {1} 
#     ::USER_DEFINE::CloseTR069ACS {} 

#     # Check 2.4G can still ping internet
#     ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}     

#     # Change channel to auto & manual
#     ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$Channel=$::i}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
#     ::WEB::WebDrv_CloseBrowser {A1000} 

#     # Check from CLI command
#     ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
#     ::CONSOLE::CI_Cmd_Scan {} {wlan show channel} {10} {Channel =} "$::i" 

#     # Check from TR069
#     ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
#     ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {AutoChannelEnable} {0}
#     ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {Channel} "$::i"     
#     ::USER_DEFINE::CloseTR069ACS {} 

#     # Check 2.4G can still ping internet
#     ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
# }
# <TCL_Block_End>

# -CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-889  Negative: Verifiy WLAN fixed and auto channel switch test > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-889," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# reset env
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# Connect 5G client
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

set ::list_table [list "36" "40" "44" "48" "52(DFS)" "56(DFS)" "60(DFS)" "64(DFS)" "100(DFS)" "104(DFS)" "108(DFS)" "112(DFS)"]
set ::list_table_2 [list "36" "40" "44" "48" "52" "56" "60" "64" "100" "104" "108" "112"]

for {set ::i 0} {$::i < 12} {incr ::i} {
    set ::list_select_str [lindex $::list_table $::i]
    set ::list_select_int [lindex $::list_table_2 $::i]
    # Change channel to auto & manual
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$Channel=Auto}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    # Check from CLI command
    ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
    ::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel =} {Auto} 

    # Check from TR069
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {1} 
    ::USER_DEFINE::CloseTR069ACS {} 

    # Check 5G can still ping internet
    ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}     

    # Change channel to auto & manual
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$Channel=$::list_select_str}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 

    # Check from CLI command
    ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
    ::CONSOLE::CI_Cmd_Scan {} {wlan5 show channel} {10} {Channel =} "$::list_select_int" 

    # Check from TR069
    ::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {0}
    ::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} "$::list_select_int"     
    ::USER_DEFINE::CloseTR069ACS {} 

    # Check 5G can still ping internet
    ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
}
<TCL_Block_End>

-CaseEnd-

<<************************************* WLAN beacon *************************************>>
%ENV-L2|L3%                                                          
+CaseStart+
<< ---------------- WLAN beacon ---------------- >>

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1062 Verify Enable/Disable DFS channel from GUI > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1062," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
<TCL_Block_End>
#Change channel to 36(capture beacon packet)
<TCL_Block_Begin>
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]

#capture beacon packet & check include DFS channel
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=First Channel Number: 36++First Channel Number: 40++First Channel Number: 44++First Channel Number: 48} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=First Channel Number: 52++First Channel Number: 56++First Channel Number: 60++First Channel Number: 64++First Channel Number: 100++First Channel Number: 104++First Channel Number: 108++First Channel Number: 112++First Channel Number: 116++First Channel Number: 120++First Channel Number: 124++First Channel Number: 128} {$Result=PASS}]

#Advanced page {id=t4}, Disable DFS
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20} 
::WEB::WebDrv_Click {id} {t4} {20} {PASS}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Click {id} {DFS} {20} {PASS}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {10}

#capture beacon packet & check can't include DFS channel
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=First Channel Number: 36++First Channel Number: 40++First Channel Number: 44++First Channel Number: 48} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=First Channel Number: 52++First Channel Number: 56++First Channel Number: 60++First Channel Number: 64++First Channel Number: 100++First Channel Number: 104++First Channel Number: 108++First Channel Number: 112++First Channel Number: 116++First Channel Number: 120++First Channel Number: 124++First Channel Number: 128} {$Result=FAIL}]

#Enable DFS
::WEB::WebDrv_Click {id} {DFS} {20} {PASS}
::WEB::WebDrv_Click {id} {Apply} {20} {PASS} 
::CONSOLE::Wait {10}

#close web
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-1017 Check WPS2.0 Element ID with Vendor Extension in Beacon Packet > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1017," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Change channel to 36(capture beacon packet)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

#capture beacon packet & check include DFS channel
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=Data Element Type: Vendor Extension++Version2: 2.0} {$Result=PASS}]
<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-1018 Check the WPS Status in GUI >

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1018," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
#Connect WLAN 5G
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture.txt} {$Check_String=Wifi Protected Setup State: Configured} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Check_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[1]/div/table/tbody/tr[99]/td[2]} {Configured} {3} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20} 
#disable WPS
::WEB::WebDrv_Click {linkText} {Network Setting} {20} {PASS}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t3} {20} {PASS} 
::CONSOLE::Wait {3}

#Enable: 1, Disalbe:0
# ::WEB::WebDrv_List_Select {id} {Enabled_WPSSelection} {text} {0} {20} 
::WEB::WebDrv_List_Select {id} {Enabled_WPSSelection} {option_value} {0} {20} 
::WEB::WebDrv_Click {id} {Apply} {3} {PASS} 
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Status_Page >"
::WEB::WebDrv_Check_Text {xpath} {//*[@id="statusview"]/table/tbody/tr[3]/td[1]/div/table/tbody/tr[99]/td[2]} {Disabled} {3} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Save_Path=$LogPath$} {$Save_File_Name=Capture2} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture2} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$Capture2.txt} {$Check_String=Wifi Protected Setup State:} {$Result=FAIL}]
#Enable WPS
::WEB::WebDrv_Click {linkText} {Network Setting} {20} {PASS}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t3} {20} {PASS} 
::CONSOLE::Wait {3}
#Enable: 1, Disalbe:0
::WEB::WebDrv_List_Select {id} {Enabled_WPSSelection} {option_value} {1} {20} 
::WEB::WebDrv_Click {id} {Apply} {3} {PASS} 
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-953 Verify the Hide multiple SSID > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-953," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set all WLAN 5G setting on Adv GUI
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=Main_$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=1} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_More_AP >" [list {$Frequency=5G} {$index=2} {$Enable_Wireless_LAN=ON} {$SSID=$SSID_5G$_2} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Client 1 connect 5G More AP1 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# Enable More AP 1 Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed -i 1 1} 

# Check clients 1 can access internet after enable Hide SSID
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check 5G beacon packet only show 5G main SSID, More AP 2 SSID, can't show More AP 1 SSID
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"\"\"\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$_2\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"Main_$SSID_5G$\"}]

# Disable More AP 1 Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed -i 1 0} 

# Check clients 1 can access internet after enable Hide SSID
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check 5G beacon packet only show 5G main SSID, More AP 2 SSID, can't show More AP 1 SSID
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$_1\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$_2\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"Main_$SSID_5G$\"}]

# Client 2 connect 5G More AP1 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$_1}]

# Enable 5G main page Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed -i 0 1} 

# Check clients 1 & 2 can access internet after enable 5G main Hide SSID
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Disable 5G main page Hide SSID
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_CLI_Mode >"
::CONSOLE::CI_Cmd {} {wlan5 config closed -i 0 0} 

::CONSOLE::Wait {60} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-887 Verify the WLAN Protect Management Frames(PMF) > 
# ********************************************************************************************
# Note: TP_Link dongle doesn't support PMF, so only capture beacon to check packet pmf value *
# ********************************************************************************************
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-887," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}
# Set wifi 5G & connect
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Capture 5G beacon PMF(Disabled)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=UTP-887_PMF_Disabled} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=UTP-887_PMF_Disabled} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$/UTP-887_PMF_Disabled.txt} {$Check_String=Management Frame Protection Required: False++Management Frame Protection Capable: False} {$Result=PASS}]

# Set wifi 5G PMF(Optional)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlPmf_5G} {option_value} {optional} {10} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Capture 5G beacon PMF(Optional)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=UTP-887_PMF_Optional} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=UTP-887_PMF_Optional} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$/UTP-887_PMF_Optional.txt} {$Check_String=Management Frame Protection Required: False++Management Frame Protection Capable: True} {$Result=PASS}]

# Set wifi 5G PMF(Required)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlPmf_5G} {option_value} {required} {10} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Capture 5G beacon PMF(Required)
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=UTP-887_PMF_Required} {$Capture_Filter=} {$Wait_Time=3}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=UTP-887_PMF_Required} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$/UTP-887_PMF_Required.txt} {$Check_String=Management Frame Protection Required: True++Management Frame Protection Capable: True} {$Result=PASS}]

# back to default PMF(Disabled)
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_List_Select {id} {wlPmf_5G} {option_value} {disabled} {10} 
::WEB::WebDrv_Click {id} {Apply} {10} {PASS} 
::CONSOLE::Wait {15} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-3067 Configure Channel to band1 channel, check Channel, SCS, OCAC status on CLI/Advanced GUI/TR-069 > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-3067," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890}]
if {"$PROJECT$" == "HB3"} {
} else {
   ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}] 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check VoIP can register
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check IPTV can play
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# Change to band 1 channel
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {36} 
::USER_DEFINE::CloseTR069ACS {} 

# Check beacon
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=Capture} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=Capture} {$Read_Filter=wlan.ssid == \"$SSID_5G$\"}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< File_PC_Check >" [list {$File_Path=$LogPath$/Capture.txt} {$Check_String=Current Channel: 36} {$Result=PASS}]

# Check 5G SCS (disable), Channel is 36
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Get_Value {id} {ChannelSelection} {::value} {10} 
if {"$::value" != "36"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {current channel should be 36}
}
::WEB::WebDrv_Click {id} {t4} {10} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Is_Selected {id} {SCS} {::value} {10} 
if {"$::value" != "false"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {SCS should be disabled}
}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Login DUT 
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {}  
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {tefapp show wifi_plus channel} {20} {wifi_plus channel} {36} 
::CONSOLE::CI_Cmd_Scan {} {tefapp show wifi_plus channel_mode} {20} {wifi_plus channel_mode} {manual} 
::CONSOLE::CI_Cmd_Scan {} {tefapp show wifi_plus scs} {20} {wifi_plus scs} {disabled} 
::CONSOLE::CI_Cmd_Scan {} {tefapp show wifi_plus ocac_status} {20} {wifi_plus ocac_status} {enabled} 

# Check from TR069
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {Channel} {36} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {AutoChannelEnable} {0} 
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.X_TELEFONICA_COM.} {SCSEnable} {0} 
::USER_DEFINE::CloseTR069ACS {} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-875 Verify the WLAN Hide SSID > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-875," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Enable Hide SSID
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Hide_SSID=ON}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

# CPE 5G mac
set x [string range $DUT_WAN_MAC2_UType2$ 0 15]
set ::5G_mac ${x}7

# Connect 5G client
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check beacon
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=UTP-875_Enable_Hide_SSID} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=UTP-875_Enable_Hide_SSID} {$Read_Filter=wlan.sa == $::5G_mac && wlan.ssid == \"\"\"\"}]

# Disable Hide SSID
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=36} {$Security=WPA2-PSK AES} {$Key=1234567890} {$Hide_SSID=OFF}]
::CONSOLE::Wait {10} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Connect 5G client
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Check beacon
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Capture >" [list {$Card_Name=WLAN} {$Save_Path=$LogPath$} {$Save_File_Name=UTP-875_Disable_Hide_SSID} {$Capture_Filter=} {$Wait_Time=5}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_PC_Filter >" [list {$Read_Path=$LogPath$} {$Read_File_Name=UTP-875_Disable_Hide_SSID} {$Read_Filter=wlan.sa == $::5G_mac && wlan.ssid == \"$SSID_5G$\"}]

<TCL_Block_End>

-CaseEnd-

%ENV-L2|L3%                                                           
+CaseStart+
<< ------------------------------ VoIP ------------------------------ >>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-2234 Verify SIP account SIP Number/User Name/Password with incorrect settings > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2234," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"
# Set 3-play env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
# set incorrect SIP Number/User Name/Password setting
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345678}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check LAN can ping internet
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Check 2.4G client can ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Check 5G client can ping internet
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {172.202.77.1} {PASS} {64} {5} {1} {1} {128} {IPv4} {no} 

# Check IPTV can play
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# Check VoIP can't register
::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< TR069_Get_Result_Value >" [list {$Parameter=InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.Line.1.Status}] {::SIP_Status}
if {"$::SIP_Status" == "Up"} {
    ::MISC::ACTS_Dummy_Response {FAIL} {RESULT: SIP register successfully ,EXPECTATION: SIP client can't register}
}
::USER_DEFINE::CloseTR069ACS {} 

# recoever sip env
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ------------------------------ Qos ------------------------------ >>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-1982 IP Address validation check > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1982," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
if {"$sysName$" == "GPT-2841GX4X5"} {
   ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}] 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

# Set and check input invalid ip address should pop up error message
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "Test_Class_1" {10} 
::WEB::WebDrv_Click {id} {EtherTypeActiveCheck} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {id} {SrcIPActiveCheck} {10} {PASS} 
# input invalid src ip
::WEB::WebDrv_Set_Value {id} {SrcIPTxt} {invalid_src_ip} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {SrcIPTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when SrcIP set invalid value}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
# disable Src IP
::WEB::WebDrv_Click {id} {SrcIPActiveCheck} {10} {PASS} 
# input invalid dest ip
::WEB::WebDrv_Click {id} {DestIPActiveCheck} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {DestIPTxt} {invalid_dest_ip} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {DestIPTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when DestIP set invalid value}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[1]} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_CloseBrowser {A1000} 

# Check VoIP can register
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check IPTV can play
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# Check all clients can ping internet
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L3%
+CaseStart+
< UTP-1984 Port Range validation check > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-1984," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set and check input invalid port range should pop up error message
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {id} {addnewshareBtn} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Set_Value {id} {classNameTxt} "Test_Class_1" {10} 
::WEB::WebDrv_Click {id} {EtherTypeActiveCheck} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
::CONSOLE::Wait {2} 
::WEB::WebDrv_Click {id} {IPProtoActiveCheck} {10} {PASS} 
::CONSOLE::Wait {1}
::WEB::WebDrv_Click {id} {DestPortActiveCheck} {10} {PASS} 
# input start port 80000
::WEB::WebDrv_Set_Value {id} {DestPortTxt} {80000} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {DestPortTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when start port set 80000}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
# input end port 80000
::WEB::WebDrv_Set_Value {id} {DestPortTxt} {1} {10} 
::WEB::WebDrv_Set_Value {id} {DestPortRangeTxt} {80000} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
set x [::WEB::WebDrv_Get_Value {id} {DestPortRangeTxt} {::value} {10}]
if {[string first "-1" "$x"] == -1} {
    ::MISC::ACTS_Dummy_Response {FAIL} {GUI did't pop up error message, when end port set 80000}
}
::CONSOLE::Wait {3} 
twapi::send_keys {{ENTER}}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[1]} {10} {PASS} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_CloseBrowser {A1000} 

# Check VoIP can register
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check IPTV can play
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< IPTV_Play >" [list {$PASS_FAIL=PASS}] {::result}

# Check all clients can ping internet
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {8.8.8.8} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2011 Condition : from interface = WLAN1 (AP1) Target : Ethernet Type set to "IP (0x0800)" > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2011," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}] 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
if {"$sysName$" == "GPT-2841GX4X5"} {
   ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}] 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Start_SIP_Server >"

# ping -Q 200 172.202.77.1 -> (dscp=50, cmd:50*4=200)
# ip.dsfield.dscp == 63 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllWLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {TCP} {10} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20
# LAN2 WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2011_Qos.pcap} {$duration=30} {$filter=tcp}]
::CONSOLE::Start_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {iperf3 -c 172.205.77.11 -p 8888 -S 0xB8 -k 10} {10}
::CONSOLE::Stop_WKS_iPerf3_Server {WAN_WKS} {8888} {} 
::CONSOLE::Wait {25} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2011_Qos.pcap} {$filter=ip.dsfield.dscp == 20} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="deleteBtn"]} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2015 Condition : from interface = WLAN2 (AP2) Target : set / exclude From Source MAC address and MAC mask > 

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2015," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# Get 5G mac
::CONSOLE::Get_WKS_MAC {DMZ_WKS} {wlan0} {::dmz_mac} 

# ping -Q 200 172.202.77.1 -> (dscp=50, cmd:50*4=200)
# ip.dsfield.dscp == 63 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 

::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllWLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# source mac
::WEB::WebDrv_Set_CheckBox {id} {SrcMacActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {SrcMACTxt} "$::dmz_mac" {10} 
::WEB::WebDrv_Set_Value {id} {SrcMACMaskTxt} {ff:ff:ff:ff:ff:ff} {10} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20
# DMZ WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2015_Qos.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.205.77.11 -I wlan0} {10} 
::CONSOLE::Wait {40}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2015_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && icmp} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# source mac exclude enable
::WEB::WebDrv_Set_CheckBox {id} {SrcMACExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp can't change
# DMZ WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2015_Qos_2.pcap} {$duration=40}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.205.77.11 -I wlan0} {10} 
::CONSOLE::Wait {40}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2015_Qos_2.pcap} {$filter=ip.dsfield.dscp == 50 && icmp} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-

%ENV-L2%
+CaseStart+
< UTP-2016 Condition : from interface = WLAN3 (AP3) Target: set /exclude From Source IP address and subnet mask > 
# Redmine ID: 167553
# BUG: Step 11, expectation is mark DSCP 20, but bug packets still bring DSCP 50 
<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-2016," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

# Get 5G mac
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip} 

# ping -Q 200 172.202.77.1 -> (dscp=50, cmd:50*4=200)
# ip.dsfield.dscp == 63 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Create Queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Set_CheckBox {id} {Addbtn} {true} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
::WEB::WebDrv_Click {id} {WebQueueActiveCfg} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {QueueNameTxt} {q1_w2} {10} 
::WEB::WebDrv_List_Select {id} {WebQueueInterface} {option_value} {WAN} {10} 
::WEB::WebDrv_List_Select {id} {WebQueuePriority} {option_value} {1} {10} 
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS} 
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {10}
# Create Class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {3}
::WEB::WebDrv_Click {id} {addnewshareBtn} {10} {PASS} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Window {} 
# Active check box
::WEB::WebDrv_Set_CheckBox {id} {ClassActiveCheck} {true} {10} {PASS} 
# class name
::WEB::WebDrv_Set_Value {id} {classNameTxt} {class1} {10} 
# From Interface
::WEB::WebDrv_Set_CheckBox {id} {FromInterfaceActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {FromInterfaceSel} {option_value} {AllWLAN} {10} 
# Ether Type
::WEB::WebDrv_Set_CheckBox {id} {EtherTypeActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {EtherSel} {text} {IP (0x0800)} {10} 
# Src IP address
::WEB::WebDrv_Set_CheckBox {id} {SrcIPActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_Set_Value {id} {SrcIPTxt} "$::lan2_ip" {10} 
::WEB::WebDrv_Set_Value {id} {SrcIPMaskTxt} "255.255.255.0" {10} 
# Protocol
::WEB::WebDrv_Set_CheckBox {id} {IPProtoActiveCheck} {true} {10} {PASS} 
::WEB::WebDrv_List_Select {id} {ProtoSel} {text} {TCP} {10} 
::WEB::WebDrv_Set_CheckBox {id} {ProtoExcludeCheck} {true} {10} {PASS} 
# Mark DSCP
::WEB::WebDrv_List_Select {id} {dscpMarkSel} {text} {Mark} {10} 
::CONSOLE::Wait {1} 
::WEB::WebDrv_Set_Value {id} {dscpValTxt} {20} {10} 
# select queue
::WEB::WebDrv_List_Select {id} {ToQueueSel} {option_value} {1} {10} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
# Close web 
::CONSOLE::Wait {5} 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp value change to 20
# LAN2 WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2016_Qos.pcap} {$duration=30}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.205.77.11 -I wlan0} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2016_Qos.pcap} {$filter=ip.dsfield.dscp == 20 && icmp} {$judge=pass}] 

# Edit class 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {xpath} {//*[@id="editBtn"]} {10} {PASS} 
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {} 
::CONSOLE::Wait {3}
# source IP address exclude enable
::WEB::WebDrv_Set_CheckBox {id} {SrcIPExcludeCheck} {true} {10} {PASS} 
# Apply
::WEB::WebDrv_Click {xpath} {/html/body/div[3]/div[3]/button[2]} {10} {PASS}
::CONSOLE::Wait {2} 
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {8}
# Close web 
::WEB::WebDrv_CloseBrowser {A1000} 

# Check dscp can't change
# LAN2 WLAN 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2016_Qos_2.pcap} {$duration=30}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.205.77.11 -I wlan0} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2016_Qos_2.pcap} {$filter=ip.dsfield.dscp == 50 && icmp} {$judge=pass}] 

# Check dscp can't change (because interface is WLAN, case step expectation is wrong)
# DMZ wlan0 5G
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=WAN_WKS} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=UTP-2016_Qos_3.pcap} {$duration=30}]
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ping -Q 200 -c 5 172.205.77.11 -I wlan0} {10} 
::CONSOLE::Wait {30}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=WAN_WKS} {$capture_file=UTP-2016_Qos_3.pcap} {$filter=ip.dsfield.dscp == 20 && icmp} {$judge=pass}] 

# Delete class & queue
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000} {No} {No} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-qos} {20} {PASS}
::CONSOLE::Wait {5} 
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# Delete class
::WEB::WebDrv_Click {id} {t2} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
# Delete queue
::WEB::WebDrv_Click {id} {t1} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {id} {deleteBtn} {10} {PASS} 
::CONSOLE::Wait {2}
twapi::send_keys {{ENTER}}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>

-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- WLAN client ---------------- >>

<TCL_Block_Begin>
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$Channel=100(DFS)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "LAN PC get IPv6 $::LAN_IP"
if {[string first "2001" "$::LAN_IP"] == -1 } {
    ::MISC::ACTS_Dummy_Response {WARNING} {DUT can't send IPv6 to LAN client}
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-639 Check default LAN GUI information >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-639," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {Static} {$LAN_Subnet$.77} {255.255.255.0} {$LAN_IP$}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::lan1_mac}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Wait {5} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=} {$ip_addr=$LAN_Subnet$.77} {$mac=[string toupper $::lan1_mac]}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN2_WKS} {$ip_addr=$::lan2_ip} {$mac=}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=DMZ_WKS} {$ip_addr=$::dmz_ip} {$mac=}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# LAN1_WKS
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# DMZ_WKS
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_Subnet$.77} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# LAN2_WKS
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_Subnet$.77} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {DHCP} {$LAN_IP$} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-12175 Restart DUT and check LAN/WLAN can get IPv4/v6 IP >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-12175," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv4/IPv6} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|1}  {$Index=} {$Check_Str_Arr=IP Address : :|172.205.77.++IPv6 Global IP:|$PPP_IPv6_Prefix$::103}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=Obtained From ISP} {$LAN_DNS2=Obtained From ISP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=off}]
::CONSOLE::Wait {3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< NIC_Enable_Disable >" [list {$NIC=LAN1} {$enable=on}]
::CONSOLE::Wait {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_NIC_Info >" [list {$NIC=LAN1} {$Get_Info=IPv6}] {::LAN_IP}
::MISC::ACTS_Dummy_Response {PASS} "LAN PC get IPv6 $::LAN_IP"
if {[string first "2001" "$::LAN_IP"] == -1 } {
    ::MISC::ACTS_Dummy_Response {WARNING} {DUT can't send IPv6 to LAN client}
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=5}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Connect_Disconnect_WAN >" [list {$index=GPON_Button1} {$wait_time=60}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {30} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=DMZ_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv6 fail}
}

::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv6 fail}
}

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN Clinet get IPv6 fail}
}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://ipv6test.autopqa.net} {PASS} 

::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
set result [::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6}]
if {"$result" == "0"} {
    ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6}
} else {
    ::CONSOLE::Wait {10} 
    ::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6}
}
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {http://ipv6test.autopqa.net} {PASS} 

::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://ipv6test.autopqa.net} {PASS} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reboot >"
::WEB::WebDrv_CloseBrowser {A1000}
::CONSOLE::Wait {60} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$Interface=eth1} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN Clinet get IPv6 fail}
}

::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=DMZ_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv6 fail}
}

::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wks_ip}
if { [string first $LAN_Subnet$ $::wks_ip] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv4 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv4 fail}
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WKS_IPv6}
if { [string first $PPP_Delegated_IPv6_Prefix1$ $::WKS_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN Clinet get IPv6 success}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN Clinet get IPv6 fail}
}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 

::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 

set result [::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}]
if {"$result" == "0"} {
    ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
} else {
    ::CONSOLE::Wait {10} 
    ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {domain.pqatest.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {ipv6test.autopqa.net} {PASS} {64} {10} {1} {1} {128} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-695 Check LAN/WLAN host could ping DUT WAN and LAN IPv6 global address >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-695," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$ipv4_ipv6_mode=IPv4/IPv6} {$ipv6_Type=Auto} {$DHCP_IPv6=DHCP} {$DHCP_PD=yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=br0} {$IPv4_Or_IPv6=IPv6} {$IPv6_Type=Global}] {::LAN_IP}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::LAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::WAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv6} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::LAN_IP" {PASS} {64} {10} {1} {1} {128} {IPv6} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-640 Modify LAN IP and Subnet Mask >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-640," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_Change_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Change_Subnet$.33} {255.255.255.0} {$LAN_Change_IP$} {1}
::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {Static} {$LAN_Change_Subnet$.77} {255.255.255.0} {$LAN_Change_IP$}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip}
::CONSOLE::Get_WKS_MAC {LAN1_WKS} {eth1} {::wks_mac} 

# LAN1_WKS
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# DMZ_WKS
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_Change_Subnet$.77} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# LAN2_WKS
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_Change_Subnet$.77} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.0} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {$LAN_Change_IP$} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=} {$ip_addr=$LAN_Change_Subnet$.77} {$mac=$::wks_mac}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN2_WKS} {$ip_addr=$::lan2_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=DMZ_WKS} {$ip_addr=$::dmz_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {cat /etc/udhcpd.conf} {30} {opt subnet} {255.255.255.0} {opt router} {$LAN_Change_IP$} {opt dns} {$LAN_Change_IP$} {start} {$LAN_Change_Subnet$}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

# 255.255.248.0
::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$Subnet_mask=255.255.248.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Change_Subnet$.33} {255.255.248.0} {$LAN_Change_IP$} {1}

::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.248.0} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {$LAN_Change_IP$} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {DHCP} {$LAN_Change_IP$} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {30} {dhclient eth1} {30}
::CONSOLE::CI_Cmd_Scan {} {ifconfig eth1} {30} {Mask:} {255.255.248.0}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r wlan0} {30} {dhclient wlan0} {30}
::CONSOLE::CI_Cmd_Scan {} {ifconfig wlan0} {30} {Mask:} {255.255.248.0} 

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Change_Subnet$.6} {255.255.255.248} {$LAN_Change_IP$} {1}

# 255.255.255.248
::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$Subnet_mask=255.255.255.248} {$DHCP=Enable} {$pool_start=$LAN_Change_Subnet$.2} {$pool_size=5} {$DCS_Pool_State=Disable} {$DCS_Pool2_State=Disable} {$DCS_Pool3_State=Disable}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.248} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {$LAN_Change_IP$} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Setup_WKS_IP_Address {LAN1_WKS} {eth1} {DHCP} {$LAN_Change_IP$} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {dhclient -r eth1} {30} {dhclient eth1} {30}
::CONSOLE::CI_Cmd_Scan {} {ifconfig eth1} {30} {Mask:} {255.255.255.248}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_Scan {} {ifconfig wlan0} {30} {Mask:} {255.255.255.248}

# 255.255.248.3
::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$Subnet_mask=255.255.248.3} {$DHCP=Enable} {$pool_size=5}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.248} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {$LAN_Change_IP$} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {$LAN_Change_IP$} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$pool_size=150}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-638 Modify LAN IP/SubnetMask/DNS >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-638," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Local
::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {}
::CONSOLE::CI_Cmd_More {} {lan dhcpcondserv set pool 1 --enable 0} {10} {lan dhcpcondserv set pool 2 --enable 0} {10}
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd_More {} {lan config --ipaddr primary $LAN_Change_IP$ 255.255.255.0 --dhcpserver enable --poolstartaddress $LAN_Change_Subnet$.50} {10} 
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd_More {} {lan config --poolsize 50} {10} 
::CONSOLE::Wait {5} 
::CONSOLE::CI_Cmd_Scan {} {lan dhcpserverInfo show} {10} {start ip address:} {$LAN_Change_Subnet$.50} {pool size:} {50}

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {$LAN_Change_Subnet$.6} {255.255.255.0} {$LAN_Change_IP$} {1}

# Wizard
::WEB::WebDrv_OpenWebSite {http://$LAN_Change_IP$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=W} {$password=$GUI_Pwd$}]
if {"$Key_Account$" == "Spain" } {
    ::WEB::WebDrv_Click {xpath} {//*[@id="home"]/img} {10} {PASS} 
    # Red local
    ::WEB::WebDrv_Click {xpath} {//*[@id="pagemenu"]/ul/li[5]/a} {20} {PASS}
    ::WEB::WebDrv_Click {xpath} {//*[@id="pagemenu"]/ul/li[5]/ul/li[2]/a} {20} {PASS}
    ::WEB::WebDrv_Check_Value {id} {uiViewIPAddrv4} {$LAN_Change_IP$} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {uiViewNetMaskv4} {255.255.255.0} {10} {PASS} {full} 
    ::WEB::WebDrv_Check_Value {id} {StartIpv4} {$LAN_Change_Subnet$.50} {10} {PASS} {full}
    ::WEB::WebDrv_Check_Value {id} {EndIpv4} {$LAN_Change_Subnet$.99} {10} {PASS} {full}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=W}]
}
::WEB::WebDrv_CloseBrowser {A1000} 

# Advanced
::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {$LAN_Change_IP$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.0} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {$LAN_Change_Subnet$.50} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {id} {PoolSize} {50} {10} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Local
::CONSOLE::CI_Cmd_Scan {} {lan show} {10} {inet addr:} {$LAN_Change_IP$} {Mask:} {255.255.255.0}
::CONSOLE::CI_Cmd_Scan {} {lan dhcpserverInfo show} {10} {start ip address:} {$LAN_Change_Subnet$.50} {pool size:} {50}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1}
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_Change_IP$} {::wks_ip} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 down} {10} {ifconfig eth1 up} {10}
::CONSOLE::Setup_WKS_IP_Address {DMZ_WKS} {eth1} {Static} {$LAN_Change_Subnet$.33} {255.255.255.0} {$LAN_Change_IP$}
::CONSOLE::Wait {5} 
::CONSOLE::Check_WKS_Web_Exist {DMZ_WKS} {http://11.0.0.1} {PASS} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 

# recovery
::WEB::WebDrv_OpenWebSite {$LAN_Change_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$pool_start=$LAN_Subnet$.2} {$pool_size=150}]
::WEB::WebDrv_CloseBrowser {A1000} 

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::Setup_WKS_IP_Address {DMZ_WKS} {eth1} {DHCP} {$LAN_Subnet$.1} {PASS}
::CONSOLE::CI_Cmd_More {} {ifconfig wlan0 up} {10} {ifconfig eth1 down} {10}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-61 Verify NAT function >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-61," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

# NAT off
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$NAT_Mode=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {FAIL} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {FAIL} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wlan_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::wks_ip} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::wlan_ip} {$judge=pass}]

# NAT on
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$NAT_Mode=SUA_Only}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::WAN_IP} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-56 Verify PPP authentication method with PAP >
# Version : 3

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-56," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}
# FTP pap-secrets file to NAT_WKS (pap format)
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {cd /etc/ppp} {60}
::CONSOLE::CI_Cmd_More {} {bin} {60}
::CONSOLE::CI_Cmd_More {} {put $MOD_PATH$pap-secrets} {60}
::CONSOLE::Close_Shell {Shell_FTP}
::CONSOLE::Wait {25} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]

::TESTLINK::Reset_PPPoE_Server {pap}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$Authentication=PAP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
if {[string first "172.205.77" $::WAN_IP] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT get PPPoE IP successfully}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "DUT get PPPoE IP fail, $::WAN_IP"
}
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=pap} {$judge=pass}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::TESTLINK::Reset_PPPoE_Server {pap_chap}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-57 Verify PPP authentication method with CHAP >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-57," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]

::TESTLINK::Reset_PPPoE_Server {chap}
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$Authentication=CHAP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
if {[string first "172.205.77" $::WAN_IP] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT get PPPoE IP successfully}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "DUT get PPPoE IP fail, $::WAN_IP"
}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=chap} {$judge=pass}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::TESTLINK::Reset_PPPoE_Server {pap_chap}

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-55 Verify PPP authentication method with Auto >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-55," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$Authentication=AUTO}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_PPPoE$} {$IPv4_Or_IPv6=IPv4} {$IPv6_Type=none}] {::WAN_IP}
if {[string first "172.205.77" $::WAN_IP] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {DUT get PPPoE IP successfully}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} "DUT get PPPoE IP fail, $::WAN_IP"
}

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-68 Check Max. MTU Size can work well >
# Version : 3

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-68," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$MTU=1480}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {1452} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ip.flags.mf == 1} {$judge=fail}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {1453} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ip.flags.mf == 1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=60}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {1481} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {1481} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=data.len > 1480} {$judge=fail}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$MTU=1492}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-673 The RG MUST support DNS name resolution on standard port 53 UDP at LAN/WLAN-interface of device >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-673," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.hinet.net} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {www.hinet.net} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && udp.dstport == 53} {$judge=pass}]

::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-681 Check using CloudFlare's DNS service to resolve DNS name and surf internet>
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-681," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::DOSAPP::IPConfig {ipconfig /release} {LAN1}
::DOSAPP::IPConfig {ipconfig /renew} {LAN1} {Default Gateway} {$LAN_IP$} {Don't Care}

::WEB::WebDrv_OpenWebSite {http://1.1.1.1} {A1000}
:::WEB::WebDrv_Get_Title {::title_value} {20}
if { [string first "1.1.1.1" $::title_value] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {Not appear CPE's login page}
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {should not appear CPE's login page}
}

# scenario 1
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=UserDefined} {$LAN_DNS_Addr1=1.1.1.1} {$LAN_DNS2=UserDefined} {$LAN_DNS_Addr2=1.1.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {wlan0} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan0} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Wait {10} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.toyota.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 1.1.1.1} {$judge=pass}]

# scenario 2
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {sudo /etc/init.d/networking restart} {30} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=1.1.1.1} {$secondary_DNS=1.1.1.1}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=300}]

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {wlan} 
::CONSOLE::Renew_WKS_IP_Address {LAN2_WKS} {wlan} {$LAN_IP$} {::wks_ip} {PASS} 
::CONSOLE::Wait {10} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.hinet.net} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {www.zyxel.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 1.1.1.1} {$judge=pass}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-67 Check PPPoE PassThrough >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-67," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$PPPoE_Passthrough=Yes}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WKS_PPPoE_Connect >" [list {$WKS=LAN1_WKS}]
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WKS_PPPoE_Connect >" [list {$WKS=LAN1_WKS} {$disconnect=true}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$PPPoE_Passthrough=No}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WKS_PPPoE_Connect >" [list {$WKS=LAN1_WKS} {$PASS_FAIL=FAIL}]
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WKS_PPPoE_Connect >" [list {$WKS=LAN1_WKS} {$disconnect=true}]

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-22793 Modify LAN IP and upgrade/downgrade FW >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-22793," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot} 
::CONSOLE::Wait {5} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$FW_FCS$}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$FCS_Version$}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=192.168.25.1} {$Subnet_mask=255.255.255.0} {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::MacroExcute {Setup_PC_Interface_Static_IP} {LAN1} {192.168.25.33} {255.255.255.0} {192.168.25.1} {1} 

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.25.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$Firmware$} {$url=$Adv_GUI_Protocol$192.168.25.1$Adv_GUI_URL$/cgi-bin/firewareUpgrade.cgi}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {192.168.25.1} {::wks_ip} {PASS} 

::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::lan1_ip}
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} "$::lan2_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::lan1_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} "$::dmz_ip" {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.25.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3} 
::WEB::WebDrv_Check_Value {id} {uiViewIPAddr} {192.168.25.1} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {uiViewNetMask} {255.255.255.0} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {StartIp} {192.168.25.} {20} {PASS} {parital} 
::WEB::WebDrv_Check_Value {name} {PrimaryDns} {192.168.25.1} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {SecondDns} {192.168.25.1} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=} {$ip_addr=192.168.25.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=LAN2_WKS} {$ip_addr=$::lan2_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_Client_Table >" [list {$wks_name=DMZ_WKS} {$ip_addr=$::dmz_ip}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {cat /etc/udhcpd.conf} {30} {opt subnet} {255.255.255.0} {opt router} {192.168.25.1} {opt dns} {192.168.25.1} {start} {192.168.25.}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reboot >"

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Get_WKS_IP {DMZ_WKS} {wlan0} {::dmz_ip}
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::lan2_ip}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {DMZ_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {192.168.25.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}

::WEB::WebDrv_OpenWebSite {$Adv_GUI_Protocol$192.168.25.1$Adv_GUI_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$IP_address=$LAN_IP$} {$Subnet_mask=255.255.255.0}]
::WEB::WebDrv_CloseBrowser {A1000}

::MISC::MacroExcute {Setup_PC_Interface_to_DHCP} {LAN1} {$LAN_IP$} {PASS}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-3717 Verify upgrade and downgrade FW which has release to customer to this beta FW via GUI and TR069 >
# Version 2

<TCL_Block_Begin>
if {[string first "UTP-3717," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Modify config
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=TELNET} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=Netmeeting} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=IPSec} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=112} {$end_port=112} {$trigger_protocol=TCP} {$open_start=112} {$open_end=112} {$open_protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=AUTH\[TCP/113\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=DNS\[UDP/53\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=TCP_UDP} {$protocol=TCPorUDP} {$dst_port_start=223} {$dst_port_end=223} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_ALG >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check services
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"

# Download release to customer by GUI
::MISC::ACTS_Dummy_Response {PASS} {Download release to customer by GUI} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$FW_RC$} ]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$RC_Version$} 

# Check settings
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} {1 TELNET 23 23 23 23 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[3]} {2 Netmeeting 1720 1720 1720 1720 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[4]} {3 IPSec 500 500 500 500 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Triggering} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[3]/div/table/tbody/tr[2]} {1 test 112 112 TCP 112 112 TCP} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-firewall} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Rules} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::WEB::WebDrv_Switch_To_Frame {id} {IntfDirTable} {20}
::WEB::WebDrv_List_Select {id} {RuleIntfDir_ID} {text} {WANInIPv4} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[2]} {1 Yes TCP_UDP WAN Protocol:TCPorUDP Dst Port:223:223 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[3]} {2 Yes DNS WAN Protocol:UDP Dst Port:53 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[4]} {3 Yes AUTH WAN Protocol:TCP Dst Port:113 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {$ACSURLHTTPS$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# Check services
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# restore default
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_Reset >"
::WEB::WebDrv_CloseBrowser {A1000}

# Modify config
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=TELNET} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=Netmeeting} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=IPSec} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=112} {$end_port=112} {$trigger_protocol=TCP} {$open_start=112} {$open_end=112} {$open_protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=AUTH\[TCP/113\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=DNS\[UDP/53\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=TCP_UDP} {$protocol=TCPorUDP} {$dst_port_start=223} {$dst_port_end=223} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_ALG >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Upgrade to ras by TR069
::MISC::ACTS_Dummy_Response {PASS} {Upgrade to ras by TR069} 
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {ACTS} {1234}
::CONSOLE::CI_Cmd_More {} {dir} {10}
::CONSOLE::CI_Cmd_More {} {delete ras.bin} {60}
::CONSOLE::Wait {5}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$ ras.bin} {60}
::CONSOLE::Wait {10}
::CONSOLE::Close_Shell {Shell_FTP}

::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/ras.bin} {ACTS} {1234} {0}
::USER_DEFINE::CloseTR069ACS {C1000}
::CONSOLE::Local
::CONSOLE::Wait {30} 
::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

# Check settings
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Forwarding} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[2]} {1 TELNET 23 23 23 23 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[3]} {2 Netmeeting 1720 1720 1720 1720 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {xpath} {//*[@id="list_table"]/tbody/tr[4]} {3 IPSec 500 500 500 500 $LAN_Subnet$.33} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Port Triggering} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {/html/body/div[2]/div/form/div/div[2]/ul/li[3]/div/table/tbody/tr[2]} {1 test 112 112 TCP 112 112 TCP} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {security} {20}
::WEB::WebDrv_Click {id} {security-firewall} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {Rules} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Switch_To_Frame {id} {showBoard1} {20}
::WEB::WebDrv_Switch_To_Frame {id} {IntfDirTable} {20}
::WEB::WebDrv_List_Select {id} {RuleIntfDir_ID} {text} {WANInIPv4} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[2]} {1 Yes TCP_UDP WAN Protocol:TCPorUDP Dst Port:223:223 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[3]} {2 Yes DNS WAN Protocol:UDP Dst Port:53 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="rule_list_table"]/tbody/tr[4]} {3 Yes AUTH WAN Protocol:TCP Dst Port:113 Action:Permit} {20} {PASS} {full}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {$ACSURLHTTPS$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# Check services
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# Modify and check the setting can be changed
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_5G$} {$Channel=3} {$Security=WPA2-PSK AES} {$Key=1112223334}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1112223334}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {3} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {40} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-3707 Verify upgrade and downgrade FW from the latest FCS version to this beta firmware via GUI and TR069 >
# Version : 3

<TCL_Block_Begin>
if {[string first "UTP-3707," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {eth1} 
::CONSOLE::Release_WKS_IP_Address {DMZ_WKS} {wlan0} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {eth1} 
::CONSOLE::Release_WKS_IP_Address {LAN2_WKS} {wlan0} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Modify config
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_24G$} {$Channel=100(DFS)} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=TELNET} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=Netmeeting} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Forwarding >" [list {$index=-1} {$active=true} {$service=IPSec} {$srv_ip=$LAN_Subnet$.33}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Port_Triggering >" [list {$index=-1} {$active=true} {$service=test} {$start_port=112} {$end_port=112} {$trigger_protocol=TCP} {$open_start=112} {$open_end=112} {$open_protocol=TCP}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|test|112|112|TCP|112|112|TCP} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DMZ >" [list {$DMZ_Address=$LAN_Subnet$.35}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_DDNS >" [list {$active=yes} {$ipv6_support=no} {$provider=www.dyndns.org} {$interface=$ifconfig_PPPoE$} {$host_name=$DDNS_Hostname$} {$username=$DDNS_Username$} {$password=$DDNS_Password$}]
::CONSOLE::Wait {10}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=AUTH\[TCP/113\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=DNS\[UDP/53\]} {$action=Permit}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_Firewall_Rule >" [list {$packet_direction=$Firewall_Direction$} {$index=-1} {$active=true} {$service=Custom} {$srv_name=TCP_UDP} {$protocol=TCPorUDP} {$dst_port_start=223} {$dst_port_end=223} {$action=Permit}]
set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|TCP_UDP|$::interface|Protocol:TCPorUDP Dst Port:223:223|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=2|Yes|DNS|$::interface|Protocol:UDP Dst Port:53|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=3|Yes|AUTH|$::interface|Protocol:TCP Dst Port:113|Action:Permit} {$Result=PASS}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_UPnP >" [list {$active=no}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_ALG >" [list {$active=no}]
if {"$VoIP_Support$" == "yes"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

# Check services
::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

if {"$VoIP_Support$" == "yes"} {
    ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
    ::WEB::WebDrv_CloseBrowser {A1000} 
}

# Download FCS by GUI
::MISC::ACTS_Dummy_Response {PASS} {Download FCS by GUI} 
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< GUI_FW_Upgrade >" [list {$fw_path=$Firmware_Root$$FW_FCS$} ]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$FCS_Version$} 

# Check settings
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Window {}
::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
if {"$PON_Support$" == "no"} {
    ::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
}
::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 
::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if {"$Key_Account$" == "Chile"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|N/A|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|N/A|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|N/A|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
} else {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|test|112|112|TCP|112|112|TCP} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {5}
::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
::CONSOLE::Wait {5}
::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|TCP_UDP|$::interface|Protocol:TCPorUDP Dst Port:223:223|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=2|Yes|DNS|$::interface|Protocol:UDP Dst Port:53|Action:Permit} {$Result=PASS}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=3|Yes|AUTH|$::interface|Protocol:TCP Dst Port:113|Action:Permit} {$Result=PASS}]

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
}

::WEB::WebDrv_Mouse_Over {id} {network} {20}
::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
::CONSOLE::Wait {2}
::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}
if { "$::value" == "true" } {
    ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
}

::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
::CONSOLE::Wait {2}
::WEB::WebDrv_Click {linkText} {Certificates} {20}
::CONSOLE::Wait {3}
::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
::WEB::WebDrv_Click {id} {t1} {20} 
::CONSOLE::Wait {2}
::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
::WEB::WebDrv_Switch_To_Frame {default} {} {20}

if {"$Key_Account$" == "Spain"} {
    ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
    ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
    ::CONSOLE::Wait {3}
    ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
    ::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {$ACSURLHTTPS$} {20} {PASS} {full} 
    ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
}

# Check services
if {"$VoIP_Support$" == "yes"} {
    ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Upgrade to ras by TR069
# ::MISC::ACTS_Dummy_Response {PASS} {Upgrade to ras by TR069} 
# ::CONSOLE::Open_Shell {Shell_FTP} {FTP} {172.202.77.10} {ACTS} {1234}
# ::CONSOLE::CI_Cmd_More {} {dir} {10}
# ::CONSOLE::CI_Cmd_More {} {delete ras.bin} {60}
# ::CONSOLE::Wait {5}
# ::CONSOLE::CI_Cmd_More {} {bin} {10}
# ::CONSOLE::CI_Cmd_More {} {put $Firmware_Root$$Firmware$ ras.bin} {60}
# ::CONSOLE::Wait {10}
# ::CONSOLE::Close_Shell {Shell_FTP}

# ::USER_DEFINE::OpenTR069ACS {CloudCNM} {$ACSUSERNAME$} {$ACSPASSWORD$} {C1000}
# ::USER_DEFINE::TR069Download {$CPEID$} {1 Firmware Upgrade Image} {http://172.202.77.10:8080/acts/ras.bin} {ACTS} {1234} {0}
# ::USER_DEFINE::CloseTR069ACS {C1000}
# ::CONSOLE::Local
# ::CONSOLE::Wait {30} 
# ::CONSOLE::Wait_String {400} {$Reboot_String$} {PASS}

# ::CONSOLE::Use_ZLD_WKS_Login {Local} {$CPEUSERNAME$} {$CPEPASSWORD$} {} {} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Enter_Shell_Mode >"
# ::CONSOLE::CI_Cmd_Scan {} {sys atsh} {30} {$Firmware_Title$} {$Firmware_Version$} 

# # Check settings
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {id} {network-broadband} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::WEB::WebDrv_Click {id} {$Data_BTN$} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Switch_To_Window {}
# ::WEB::WebDrv_Check_Value {name} {RN_UserName} {acts} {20} {PASS} {full} 
# if {"$PON_Support$" == "no"} {
#     ::WEB::WebDrv_Check_Value {name} {Wan_VID} "$::vlan_id" {20} {PASS} {full} 
# }
# ::WEB::WebDrv_Click {id} {Cancel_Btn} {20}
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {8} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_24G$} {20} {PASS} {full} 
# # ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {100} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1234567890} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# if {"$Key_Account$" == "Chile"} {
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|N/A|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|N/A|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|N/A|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]

# } else {
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=1|TELNET|23|23|23|23|$LAN_Subnet$.33} {$Result=PASS}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=2|Netmeeting|1720|1720|1720|1720|$LAN_Subnet$.33} {$Result=PASS}]
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Forwarding} {$Check_Str_Arr=3|IPSec|500|500|500|500|$LAN_Subnet$.33} {$Result=PASS}]
# }
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Port Triggering} {$Check_Str_Arr=1|test|112|112|TCP|112|112|TCP} {$Result=PASS}]

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} {NAT} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Click {linkText} {DMZ} {20} {PASS}
# ::CONSOLE::Wait {5}
# ::WEB::WebDrv_Check_Value {id} {dmzHostIP} {$LAN_Subnet$.35} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {id} {network-Dynamic DNS} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Check_Value {id} {SERVICE_provider} {www.dyndns.org} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {name} {sysDNSHost} {$DDNS_Hostname$} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {name} {sysDNSUser} {$DDNS_Username$} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# set ::interface [string range $Firewall_Direction$ 0 [expr [string first "InIPv4" "$Firewall_Direction$"]-1]]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=1|Yes|TCP_UDP|$::interface|Protocol:TCPorUDP Dst Port:223:223|Action:Permit} {$Result=PASS}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=2|Yes|DNS|$::interface|Protocol:UDP Dst Port:53|Action:Permit} {$Result=PASS}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Firewall Rules} {$Packet_Direction=$Firewall_Direction$} {$Check_Str_Arr=3|Yes|AUTH|$::interface|Protocol:TCP Dst Port:113|Action:Permit} {$Result=PASS}]

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} {LAN} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {UPnP} {20} {PASS}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Is_Selected {id} {enblUpnp_Disable} {::value} {20}
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
# if { "$::value" == "true" } {
#     ::MISC::ACTS_Dummy_Response {PASS} {UPnp is disabled} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {UPnP should be disabled} 
# }

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {id} {network-nat} {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::WEB::WebDrv_Click {linkText} {ALG} {20} {PASS}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Is_Selected {id} {ALG_SIP_Disable} {::value} {20}
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
# if { "$::value" == "true" } {
#     ::MISC::ACTS_Dummy_Response {PASS} {ALG is disabled} 
# } else {
#     ::MISC::ACTS_Dummy_Response {FAIL} {ALG should be disabled} 
# }

# ::WEB::WebDrv_Mouse_Over {linkText} {Security} {20}
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Click {linkText} {Certificates} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::WEB::WebDrv_Click {id} {t1} {20} 
# ::CONSOLE::Wait {2}
# ::WEB::WebDrv_Check_Text {xpath} {//*[@id="trustedCA_list"]/table/tbody/tr[2]/td[2]} {CN=cloudcnm.pqatest.com} {20} {PASS} {partial}
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# if {"$Key_Account$" == "Spain"} {
#     ::WEB::WebDrv_Mouse_Over {linkText} {Maintenance} {20}
#     ::WEB::WebDrv_Click {linkText} {TR-069 Client} {20}
#     ::CONSOLE::Wait {3}
#     ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
#     ::WEB::WebDrv_Check_Value {id} {CWMP_ACSURL} {$ACSURLHTTPS$} {20} {PASS} {full} 
#     ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
# }

# # Check services
# if {"$VoIP_Support$" == "yes"} {
#     ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
# }
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000}

# ::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
# ::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
# ::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
# ::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 

# # Modify and check the setting can be changed
# ::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_5G$} {$Channel=3} {$Security=WPA2-PSK AES} {$Key=1112223334}]
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=40} {$Security=WPA2-PSK AES} {$Key=1112223334}]

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 2.4GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {3} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Text {id} {moreSecurity} {WPA2-PSK AES} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}

# ::WEB::WebDrv_Mouse_Over {id} {network} {20}
# ::WEB::WebDrv_Click {linkText} "Wireless 5GHz" {20} {PASS}
# ::WEB::WebDrv_Switch_To_Frame {id} {mainFrame} {20}
# ::CONSOLE::Wait {3}
# ::WEB::WebDrv_Check_Value {id} {SSID} {$SSID_5G$} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {ChannelSelection} {40} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Text {id} {AuthenticationSelection} {WPA2-PSK AES} {20} {PASS} {full} 
# ::WEB::WebDrv_Check_Value {id} {PreSharedKey} {1112223334} {20} {PASS} {full} 
# ::WEB::WebDrv_Switch_To_Frame {default} {} {20}
# ::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
# ::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1|L2|L3%
+CaseStart+
<< ---------------- WLAN client_IPoE ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_VoIP >" [list {$server=172.206.77.1} {$number=12345}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=IPoE} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$Channel=100(DFS)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-174 Check Max. MTU Size can work well >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-174," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$MTU=1500}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=120}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {1500} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {1550} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ip.flags.mf == 1 && data.len > 1500} {$judge=fail}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=ip.reassembled.length} {$judge=pass}]

::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-170 Verify NAT function >
# Version : 1

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-170," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

# NAT off
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$NAT_Mode=None}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {FAIL} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {FAIL} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::CONSOLE::Get_WKS_IP {LAN1_WKS} {eth1} {::wks_ip} 
::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wlan_ip} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::wks_ip} {$judge=pass}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::wlan_ip} {$judge=pass}]

# NAT on
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$NAT_Mode=SUA_Only}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {11.0.0.1} {PASS} {64} {10} {1} {1} {128} {IPv4} {no}
::CONSOLE::Close_Shell {Shell_3} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_CPE_IP >" [list {$Interface=$ifconfig_IPoE$} {$IPv4_Or_IPv6=IPv4}] {::WAN_IP}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=icmp && ip.src == $::WAN_IP} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-214 Dynamic WAN IP + Dynamic DNS > 
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-214," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4/IPv6} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 172.205.77.1} {$judge=pass}]

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-160 Dynamic WAN IP + Dynamic DNS >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-160," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$ipv4_ipv6_mode=IPv4} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_LAN >" [list {$DHCP=Enable} {$LAN_DNS1=DNS Proxy} {$LAN_DNS2=DNS Proxy}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Release_WKS_IP_Address {LAN1_WKS} {eth1} 
::CONSOLE::Renew_WKS_IP_Address {LAN1_WKS} {eth1} {$LAN_IP$} {::wks_ip} {PASS} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN2_WKS} {wlan0} {www.google.com} {PASS} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns && ip.dst == 172.205.77.1} {$judge=pass}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.lstaoj.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.apple.com} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.hinet.net} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {zh.wikipedia.org} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Check_WKS_Ping {LAN1_WKS} {eth1} {www.toyota.com.tw} {Don't Care} {64} {10} {1} {1} {128} {IPv4} {no} 
::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=dns} {$judge=pass}]
::CONSOLE::Open_Shell {Shell_FTP} {FTP} {10.150.150.187} {root} {1234}
::CONSOLE::CI_Cmd_More {} {bin} {10}
::CONSOLE::CI_Cmd_More {} {get packet.pcap $LogPath$packet.pcap} {10}
::CONSOLE::Close_Shell {Shell_FTP}
::TESTLINK::Capture_Order_Chk "$LogPath$packet.pcap" "dns && ip.dst == 172.205.77.1" "dns && ip.dst == 172.202.77.1"

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Check_VoIP_Register >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-164 Verify DUT can send DHCP Option 12/60/61 on WAN interface >
# Version : 2

<TCL_Block_Begin>
# Check if project has this AA case
if {[string first "UTP-164," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1}
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Capture >" [list {$WKS_Name=NAT} {$Shell=Shell_3} {$Interface=eth2} {$capture_file=packet.pcap} {$duration=200}]

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_IPoE$} {$encapsulation=IPoE} {$Option60=dslforum.org}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Table_Check >" [list {$Table_Name=Device Information} {$Title=WAN Information|3} {$Check_Str_Arr=IP Address : :|172.205.77.}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::CONSOLE::Close_Shell {Shell_3}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Tshark_WKS_Check >" [list {$WKS_Name=NAT} {$capture_file=packet.pcap} {$filter=bootp} {$judge=pass}]

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {NAT} {root} {1234} 
::CONSOLE::CI_Cmd_More {} {grep -A 2 'Option: (60)' packet.txt > check.txt} {10} 
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Option: (60) Vendor class identifier} {}
::CONSOLE::CI_Cmd_ScanIgnoreBlank {} {cat check.txt} {10} {Vendor class identifier: dslforum.org} {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://11.0.0.1} {PASS} 
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- VDSL - WLAN client ---------------- >>

<TCL_Block_Begin>
if {$VDSL_Support$ == "no" } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::Enable_xDSL_Line {1} {enable}
::MISC::Enable_Network_Interface {WAN1} {Disable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VDSL_Data$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$Channel=100(DFS)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-550 VDSL - Check wireless client can surf Internet successfully >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-550," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
set result [::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wks_ip}]
if { [string first $LAN_Subnet$ $::wks_ip] < 0 } {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_More {} {sudo dhclient wlan0} {30}
}
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-558 VDSL - Check LAN/WLAN client can surf Internet by IPv6 >
# Version : 2

<TCL_Block_Begin>
if {[string first "UTP-558," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {60} 
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ $::LAN1_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1 get IPv6 successfully}
    ::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://ipv6test.autopqa.net} {PASS} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1 get IPv6 fail} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WLAN_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ $::WLAN_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN get IPv6 successfully} 
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://ipv6test.autopqa.net} {PASS} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN get IPv6 fail} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-BAT|L1|L2%                                                           
+CaseStart+
<< ---------------- EtherWAN - WLAN client ---------------- >>

<TCL_Block_Begin>
if {$ETHWAN_Support$ == "no" } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::MISC::Enable_xDSL_Line {1} {disable}
::MISC::Enable_Network_Interface {WAN1} {Enable}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=on} {$Frequency=5G} {$Channel=100(DFS)}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]

<TCL_Block_End>
-CaseEnd-


%ENV-BAT%
+CaseStart+
< UTP-559 EtherWAN - Check wireless client can surf Internet successfully >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-559," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]
set result [::CONSOLE::Get_WKS_IP {LAN2_WKS} {wlan0} {::wks_ip}]
if { [string first $LAN_Subnet$ $::wks_ip] < 0 } {
    ::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
    ::CONSOLE::CI_Cmd_More {} {sudo dhclient wlan0} {30}
}
::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://11.0.0.1} {PASS} 

<TCL_Block_End>
-CaseEnd-


%ENV-L1%
+CaseStart+
< UTP-567 EtherWAN - Check LAN/WLAN client can surf Internet by IPv6 >
# Version : 3

<TCL_Block_Begin>
if {[string first "UTP-567," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234} 
::CONSOLE::CI_Cmd {} {reboot}
::CONSOLE::Wait {60}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_24G$}]

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN1_WKS} {$interface=eth1} {$IPv6_Type=Global}] {::LAN1_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ $::LAN1_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {LAN1 get IPv6 successfully}
    ::CONSOLE::Check_WKS_Web_Exist {LAN1_WKS} {http://ipv6test.autopqa.net} {PASS} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {LAN1 get IPv6 fail} 
}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Get_WKS_IPv6 >" [list {$WKS_Name=LAN2_WKS} {$Interface=wlan0} {$IPv6_Type=Global}] {::WLAN_IPv6}
if {[string first $PPP_Delegated_IPv6_Prefix1$ $::WLAN_IPv6] >= 0 } {
    ::MISC::ACTS_Dummy_Response {PASS} {WLAN get IPv6 successfully} 
    ::CONSOLE::Check_WKS_Web_Exist {LAN2_WKS} {http://ipv6test.autopqa.net} {PASS} 
} else {
    ::MISC::ACTS_Dummy_Response {FAIL} {WLAN get IPv6 fail} 
}

<TCL_Block_End>
-CaseEnd-


%ENV-L2|L3%                                                           
+CaseStart+
<< ---------------- Stress - ShieldBox ---------------- >>

<TCL_Block_Begin>
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Pi_Debug_detect >"
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Console_Reset >"
::USER_DEFINE::TR069ClearCPEsInACS
::CONSOLE::Wait {3} 

# Set WAN
::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::CONSOLE::Get_Network_VLAN_ID {WAN2} {::vlan_id}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$Data_BTN$} {$encapsulation=PPPoE} {$username=acts} {$password=1234} {$vlan_id=$::vlan_id}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_TR069_GUI >" [list {$http_or_https=$TR069_Protocol$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Channel=8} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WLAN_GUI >" [list {$One_SSID_Status=off} {$Frequency=5G} {$SSID=$SSID_5G$} {$Channel=$5G_Channel$} {$Security=WPA2-PSK AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WKS_WLAN >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$} {$Security=WPA2-PSK} {$Encry=AES} {$Key=1234567890}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID_5G$}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5147 Modify WAN PPP username/password, and check LAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5147," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 45 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 45 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 45 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {Username} {acts3} {Password} {4321}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}

::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.} {Username} {acts} {Password} {1234}
::CONSOLE::Wait {5}
::USER_DEFINE::CloseTR069ACS {}

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5148 Modify 2.4G WLAN SSID and Channel, and check LAN and WAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5148," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 40 11.0.0.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 40 11.0.0.1 > ping.txt &} {30}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {SSIDcheck} {Channel} {1}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$24G_node$.} {SSID} {$SSID_24G$} {Channel} {8}
::CONSOLE::Wait {5}
::USER_DEFINE::CloseTR069ACS {}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=DMZ_WKS} {$interface=wlan0} {$Frequency=2.4G} {$SSID=$SSID_24G$}]

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5149 Modify 5G WLAN SSID and Channel, and check LAN and WAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5149," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 40 11.0.0.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 40 11.0.0.1 > ping.txt &} {30}
::CONSOLE::Wait {5} 

::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {SSID5check} {Channel} {40}
::CONSOLE::Wait {20}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.WLANConfiguration.$5G_node$.} {SSID} {$SSID_5G$} {Channel} {100}
::CONSOLE::Wait {5}
::USER_DEFINE::CloseTR069ACS {}
::CONSOLE::Wait {5}

::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< WLAN_WKS_Connect >" [list {$WKS=LAN2_WKS} {$interface=wlan0} {$Frequency=5G} {$SSID=$SSID$_5G}]

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-5150 Configure LAN DHCP Option Value(DHCP Server) without configure Enable and Tag >
#:: Version : 1 ::

<TCL_Block_Begin>
if {[string first "UTP-5150," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 60 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 60 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 60 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.DHCPConditionalServingPool.1.DHCPOption.1.} {Value} {MjQw}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5151 Add portmapping rule and set related parameter, and check LAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5151," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1.PortMapping.1.} {PortMappingEnabled} {1} {RemoteHost} {172.205.77.247} {ExternalPort} {1000} {ExternalPortEndRange} {2000} {InternalPort} {2000} {PortMappingProtocol} {TCP} {InternalClient} {$LAN_Subnet$.33} {PortMappingDescription} {test}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5154 Add VoIP profile and set related parameter value, check LAN and WAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5154," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::WEB::WebDrv_OpenWebSite {$LAN_URL$} {A1000}
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Login >" [list {$page=A} {$username=$Adv_GUI_User$} {$password=$Adv_GUI_Pwd$}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Set_WAN >" [list {$index=$VoIP_BTN$} {$ipv4_address=0.0.0.0} {$primary_DNS=0.0.0.0} {$secondary_DNS=0.0.0.0}]
::TESTLINK::Run_Module "$MOD_PATH$$PROJECT$.mod" "< Web_Logout >" [list {$page=A}]
::WEB::WebDrv_CloseBrowser {A1000} 

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.Services.VoiceService.1.VoiceProfile.1.} {Enable} {Enabled} {SIP.ProxyServer} {172.206.77.1} {SIP.RegistrarServer} {172.206.77.1} {SIP.RegistrarServerPort} {5060} {SIP.UserAgentDomain} {172.206.77.1} {SIP.UserAgentPort} {5060}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5157 Set PeriodicaInterval, check LAN and WAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5157," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.ManagementServer.} {PeriodicInformInterval} {300}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {20} {InternetGatewayDevice.ManagementServer.} {PeriodicInformInterval} {300}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-5152 Add a QoS Queue and set some related parameter value, check LAN and WAN should not be affected > 
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5152," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.Queue.} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.QueueManagement.Queue.1.} {QueueEnable} {1}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L3%
+CaseStart+
< UTP-5153 Add QoS Classfication and set related parameter value, check LAN and WAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5153," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069AddObject {$CPEID$} {InternetGatewayDevice.QueueManagement.Classification.} {}
::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.QueueManagement.Classification.1.} {ClassificationEnable} {1}
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-


%ENV-L2%
+CaseStart+
< UTP-5161 Do IP Ping, and check LAN should not be affected >
# Version : 1

<TCL_Block_Begin>
if {[string first "UTP-5161," "$AA_Case$"] == -1 } {
    ::RUNNER::SkipCase "$PROJECT$ doesn't support this case" {1} 
}

::USER_DEFINE::OpenTR069ACS {$ACSWEB$} {$ACSUSERNAME$} {$ACSPASSWORD$} {}
::CONSOLE::Wait {2}

::CONSOLE::Use_ZLD_WKS_Login {Shell_2} {SSH} {LAN1_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_3} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}
::CONSOLE::Use_ZLD_WKS_Login {Shell_4} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd {} {rm ping.txt} 
::CONSOLE::CI_Cmd_More {} {ping -c 65 $LAN_Subnet$.1 > ping.txt &} {30}

::USER_DEFINE::TR069SetParameterValues {$CPEID$} {InternetGatewayDevice.IPPingDiagnostics.} {DataBlockSize} {64} {Host} {11.0.0.1} {Interface} {InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANPPPConnection.1} {NumberOfRepetitions} {10} {Timeout} {5000} {DiagnosticsState} {Requested}
::CONSOLE::Wait {5}
::USER_DEFINE::TR069GetParameterValues {$CPEID$} {10} {InternetGatewayDevice.IPPingDiagnostics.} {DiagnosticsState} {Complete} 
::CONSOLE::Wait {20}
::USER_DEFINE::CloseTR069ACS {}

::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN1_WKS} {root} {1234}
while 1 {
    set result [::CONSOLE::CI_Cmd_Scan {} {ps aux | grep ping} {30} {-c } {}]
    if {"$result" == "PASS"} {
        ::MISC::ACTS_Dummy_Response {PASS} {ping not finish}
        ::CONSOLE::Wait {5} 
    } else {
        break
    }
}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {DMZ_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 
::CONSOLE::Use_ZLD_WKS_Login {Shell_1} {SSH} {LAN2_WKS} {root} {1234}
::CONSOLE::CI_Cmd_More {} {grep 'packet loss' ping.txt > check.txt} {30}
::CONSOLE::CI_Cmd_Scan {} {cat check.txt } {30} {0% packet loss} {} 

<TCL_Block_End>
-CaseEnd-